@forward 'tokens';

@use 'tokens';
@use '../../a11y';
@use '../../spacing';
@use '../../type';
@use '../../util';


// FIELD - the field container, which can contain field info, group(s), and feedback.

// The base styling for all fields.
// Default: `.field`
@mixin base {
	margin-bottom: spacing.spacer('block-base');

	@include type.ui-base;
}


// FIELD INFO - a container for the label & description

// The field info container.
// Default: `.field__info`
@mixin info {
	@include type.ui-base;

	:last-child {
		margin-bottom: spacing.spacer('ui-inner');
	}
}

// The field info's label, first child of the field info container.
// Default: `.field__label`
@mixin label {
	margin-bottom: 0;
	font-weight: var(--nds-font-weight-bold);

	@include type.ui-base;

	.nds-field__group--choice & {
		font-weight: var(--nds-font-weight-regular);
	}
}

// The field label's indicator ("required"/"optional"), displayed inline as a
// parenthetical to the field label.
// Default: `.field__indicator`
@mixin indicator {
	font-style: italic;
	font-weight: var(--nds-font-weight-regular);
}

// The field description, second child of the field info container.
@mixin description {
	font-size: var(--nds-font-size-sm);
	color: var(--nds-subdued-color);
}


// FIELD GROUP - a container for field controls

// The field group container.
// Default: `.field__group`
@mixin group {
	--nds-field-padding-y: #{tokens.$padding-y};
	--nds-field-offset-x: #{tokens.$offset-x};

	position: relative;
	display: flex;

	@include type.ui-base;
}

// A "choice" modifier for the field group container.
// Default: `.field__group--choice`
@mixin group-choice {
	display: flex;
	padding: var(--nds-field-padding-y) 0;

	> * {
		margin-right: var(--nds-field-offset-x);
	}

	.nds-field__label + &,
	.nds-field__desc + & {
		margin-top: spacing.spacer('block-base');
	}

	> :last-child {
		margin-right: unset;
	}

	> .nds-field__input {

		// still position it in the center of the visual control so that form
		// validator tooltips will point at the right thing
		top: calc(var(--nds-font-size-base) * #{type.lh('ui')} / 2);
		left: calc(0.5em + 1px);
		transform: translateX(-50%);
		// make it invisible
		@include a11y.sr-only;
	}

	.nds-field__label {
		font-weight: var(--nds-font-weight-regular);
	}

	.nds-field__desc {
		margin-bottom: unset;
	}

	.nds-field__info .nds-field__feedback {
		margin-top: spacing.spacer('ui-inner');
	}
}

// The "choice" control (checkbox/radio) in a field group.
// Note that this is a visual replacement for the field's `<input>`, which will
// be visually hidden (screen reader only) but still fully functional.
// Default: `.field__control`
@mixin choice-control {
	--nds-field-control-background-color: #{tokens.$control-background-color};
	--nds-field-control-border-color: #{tokens.$control-border-color};
	--nds-field-control-border-width: #{tokens.$control-border-width};

	position: relative;
	top: calc(var(--nds-font-size-base) * #{type.lh('ui')} / 2);
	display: flex;
	width: 1em;
	min-width: 1em;
	height: 1em;
	margin-right: var(--nds-field-offset-x);
	content: '';
	background-color: var(--nds-field-control-background-color);
	border: var(--nds-field-control-border-width) solid var(--nds-field-control-border-color);
	transition: none;
	transform: translateY(-50%);
	align-items: center;
	justify-content: center;

	.nds-error + &,
	[aria-invalid='true'] + & {
		--nds-field-control-background-color: var(--nds-error-color-10);
		--nds-field-control-border-color: var(--nds-error-color);
	}

	.nds-warning & {
		--nds-field-control-border-color: var(--nds-warning-color);
	}

	.nds-success & {
		--nds-field-control-border-color: var(--nds-success-color);
	}

	:checked + & {
		--nds-field-control-background-color: var(--nds-primary-color);
		--nds-field-control-border-color: transparent;
	}

	.disabled + &,
	:disabled + & {
		--nds-field-control-background-color: var(--nds-disabled-color-10);
		--nds-field-control-border-color: var(--nds-disabled-color-20);

		pointer-events: none;
	}

	.disabled:checked + &,
	:disabled:checked + & {
		--nds-field-control-background-color: var(--nds-disabled-color-20);

		color: var(--nds-background-color);
		border-color: transparent;
	}

	.nds-error:checked + &,
	.nds-error:indeterminate + &,
	[aria-invalid='true']:checked + &,
	[aria-invalid='true']:indeterminate + & {
		--nds-field-control-background-color: var(--nds-error-color);
	}

	.nds-warning :checked + &,
	.nds-warning :indeterminate + & {
		--nds-field-control-background-color: var(--nds-warning-color);
	}

	.nds-success :checked + &,
	.nds-success :indeterminate + & {
		--nds-field-control-background-color: var(--nds-success-color);
	}
}


// FEEDBACK - a container for errors and other feedback about user input

// The outer feedback container.
// Default: `.field__feedback`
@mixin feedback {
	@include type.ui-base;
}

// The field errors list, which should be an unordered list (`ul`).
// Default: `.field__errors`
@mixin errors {
	padding-left: 1rem;
	margin: 0;
	font-size: var(--nds-font-size-sm);
	font-style: italic;
	font-weight: var(--nds-font-weight-bold);
	color: var(--nds-error-color);

	// when an error is alone, don't display it as a bullet
	:first-child:last-child {
		margin-left: -1rem;
		list-style-type: none;
	}
}


// STYLE DECLARATIONS

// Field info style declaration
@mixin style-info {
	@include util.declare('field-info') {
		.nds-field__info {
			@include info;
		}

		.nds-field__label {
			@include label;
		}

		.nds-field__indicator {
			@include indicator;
		}

		.nds-field__desc {
			@include description;
		}
	}
}

// Field group style declaration
@mixin style-group {
	@include util.declare('field-group') {
		.nds-field__group {
			@include group;
		}

		.nds-field__group--choice {
			@include group-choice;
		}

		.nds-field__control {
			@include choice-control;
		}
	}
}

// Field feedback style declaration
@mixin style-feedback {
	@include util.declare('field-feedback') {
		.nds-field__feedback {
			@include feedback;
		}

		.nds-field__errors {
			@include errors;
		}
	}
}

@mixin style {
	@include style-info;
	@include style-feedback;
	@include style-group;

	@include util.declare('field') {
		.nds-field {
			@include base;
		}
	}
}
