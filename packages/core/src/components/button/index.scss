@forward 'tokens';

@use 'sass:map';
@use 'sass:meta';
@use 'tokens';
@use '../../a11y';
@use '../../color';
@use '../../type';
@use '../../motion';
@use '../../spacing';
@use '../../util';

@mixin base {
	@include util.set(
		$nds-button-color: color.family('button-color', tokens.$color, tokens.$grade),
	);

	--nds-button-border-width: #{tokens.$border-width};
	--nds-button-padding-x: #{tokens.$padding-x};
	--nds-button-padding-y: #{tokens.$padding-y};
	--nds-button-border-radius: #{tokens.$border-radius};
	--nds-button-font-weight: #{tokens.$font-weight};

	position: relative;
	display: inline-flex;
	box-sizing: border-box;
	padding: var(--nds-button-padding-y) var(--nds-button-padding-x);
	border: var(--nds-button-border-width) solid transparent;
	border-radius: var(--nds-button-border-radius);
	justify-content: center;
	align-items: center;

	@include type.ui-base;

	&:disabled,
	&.disabled {
		color: var(--nds-disabled-color);
		pointer-events: none;
	}
}

@mixin variant(
	$text-color: null,
	$background-color: null,
	$border-color: null,
) {
	font-weight: var(--nds-button-font-weight);
	color: $text-color;
	cursor: pointer;
	background-color: $background-color;
	border-color: $border-color;
	transition:
		motion.transition(
			color
			background-color
			border-color
			border-radius
			box-shadow
		);
}

@mixin solid {
	@include variant(
		$text-color: var(--nds-background-color),
		$background-color: var(--nds-button-color),
		$border-color: var(--nds-button-color),
	);

	&:disabled,
	&.disabled {
		color: var(--nds-disabled-color-dark);
		background-color: var(--nds-disabled-color-light);
		border-color: var(--nds-disabled-color-light);
	}

	&:not(:disabled):not(.disabled):hover,
	&:not(:disabled):not(.disabled).hover {
		background-color: var(--nds-button-color-dark);
		border-color: var(--nds-button-color-dark);
	}

	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active {
		background-color: var(--nds-button-color-darker);
		border-color: var(--nds-button-color-darker);
	}
}

@mixin outline {
	@include variant(
		$text-color: var(--nds-button-color),
		$background-color: var(--nds-background-color),
		$border-color: var(--nds-button-color),
	);

	&:disabled,
	&.disabled {
		color: var(--nds-disabled-color);
		border-color: var(--nds-disabled-color);
	}

	&:not(:disabled):not(.disabled):hover,
	&:not(:disabled):not(.disabled).hover {
		color: var(--nds-button-color-dark);
		background-color: var(--nds-button-color-10);
		border-color: var(--nds-button-color-dark);
	}

	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active {
		color: var(--nds-button-color-darker);
		background-color: var(--nds-button-color-20);
		border-color: var(--nds-button-color-darker);
	}
}

@mixin ghost {
	@include variant(
		$text-color: var(--nds-button-color),
		$background-color: transparent,
		$border-color: transparent,
	);

	&:disabled,
	&.disabled {
		color: var(--nds-disabled-color);
	}

	&:not(:disabled):not(.disabled):hover,
	&:not(:disabled):not(.disabled).hover {
		color: var(--nds-button-color-dark);
		background-color: var(--nds-button-color-10);
		border-color: var(--nds-button-color-10);
	}

	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active {
		color: var(--nds-button-color-darker);
		background-color: var(--nds-button-color-20);
		border-color: var(--nds-button-color-20);
	}
}

@mixin icon-only {
	padding: var(--nds-button-padding-y);

	> :first-child {
		margin-right: 0 !important;
		margin-left: 0 !important;
	}
}

@mixin icon {
	height: 1.25rem;
	margin: 0 spacing.spacer('ui-inner');

	&:first-child {
		margin-left: calc(-1 * #{spacing.spacer('ui-inner')});
	}

	&:last-child {
		margin-right: calc(-1 * #{spacing.spacer('ui-inner')});
	}
}

@mixin style {
	@include util.declare('button') {
		.nds-button {
			@include base;
		}

		.nds-button--solid {
			@include solid;
		}

		.nds-button--outline {
			@include outline;
		}

		.nds-button--ghost {
			@include ghost;
		}

		.nds-button--icon-only {
			@include icon-only;
		}

		.nds-button__icon {
			@include icon;
		}

		@each $name, $val in color.$families {
			.nds-button--#{$name} {
				@include util.set(
					$nds-button-color: color.family('button-color', $name, color.$primary-grade),
				);
			}
		}

		@each $map in color.$roles {
			$name: map.get($map, 'name');
			$grade: map.get($map, 'grade');

			.nds-button--#{$name} {
				@include util.set(
					$nds-button-color: color.family('button-color', '#{$name}-color', $grade),
				);
			}
		}
	}
}
