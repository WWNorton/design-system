# cSpell:ignore coverallsapp
name: Integration

on:
  push:
    branches:
      - main
  pull_request:

env:
  FORCE_COLOR: 2
  NODE_VERSION: 14
  NPM_VERSION: 8

jobs:
  build:
    name: Build library
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update npm
        run: npm i -g npm@${{ env.NPM_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install 📦
        run: npm ci
      - name: Build 🔧
        run: npm run build

  docs:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update npm
        run: npm i -g npm@${{ env.NPM_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install 📦
        run: npm ci
      - name: Build Sassdoc 💄
        run: npm run build:sassdoc
      - name: Build Storybook 📚
        run: npm run build:stories
      - name: Build docs 📄
        run: npm run build:docs
        env:
          BASE_URL: /design-system/

  cspell:
    name: Spell check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update npm
        run: npm i -g npm@${{ env.NPM_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install 📦
        run: npm ci
      - name: CSpell ✏️
        run: npm run cspell

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update npm
        run: npm i -g npm@${{ env.NPM_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install 📦
        run: npm ci
      - name: ESLint ✨
        run: npm run lint:es

  stylelint:
    name: Stylelint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update npm
        run: npm i -g npm@${{ env.NPM_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install 📦
        run: npm ci
      - name: Stylelint ✨
        run: npm run lint:style

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Update npm
        run: npm i -g npm@${{ env.NPM_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install 📦
        run: npm ci
      - name: Prettier ✨
        run: npm run lint:prettier

  test:
    name: Test | Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [14, 16]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Update npm
        run: npm i -g npm@${{ env.NPM_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install 📦
        run: npm ci
      - name: Test 🧪
        run: npm run coverage
      - name: Codecov ☂
        uses: codecov/codecov-action@v2.0.2
        if: ${{ matrix.node == env.NODE_VERSION }}
        with:
          directory: coverage
