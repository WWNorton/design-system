# cSpell:ignore coverallsapp
name: Integration

on:
  push:
    branches:
      - main
  pull_request:

env:
  FORCE_COLOR: 2
  NODE_VERSION: 14

jobs:
  build:
    name: Build library | Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [12, 14]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache 💵
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-yarn-
      - name: Install 📦
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Build 🔧
        run: npm run build

  docs:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache 💵
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-
      - name: Install 📦
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Build Sassdoc 💄
        run: npm run build:sassdoc -- --dest website/static/sassdoc
      - name: Build Storybook 📚
        run: npm run build:stories -- --output-dir website/static/storybook
      - name: Build docs 📄
        run: npm run build:docs
        env:
          BASE_URL: /design-system/

  cspell:
    name: Spell check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache 💵
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-
      - name: Install 📦
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: CSpell ✏️
        run: npm run cspell

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache 💵
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-
      - name: Install 📦
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: ESLint ✨
        run: npm run lint:es

  stylelint:
    name: Stylelint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache 💵
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-
      - name: Install 📦
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Stylelint ✨
        run: npm run lint:style

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache 💵
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-
      - name: Install 📦
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Prettier ✨
        run: npm run lint:prettier

  test:
    name: Test | Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [14]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache 💵
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-yarn-
      - name: Install 📦
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Test 🧪
        run: npm run coverage
      - name: Codecov ☂
        uses: codecov/codecov-action@v2.0.3
        if: ${{ matrix.node == env.NODE_VERSION }}
        with:
          directory: coverage
