"use strict";(self.webpackChunkwwnds=self.webpackChunkwwnds||[]).push([[861],{"./packages/react/src/components/Modal/index.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ComplexModal:function(){return ComplexModal},Default:function(){return Default},LongContent:function(){return LongContent},WithActionBar:function(){return WithActionBar},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return index_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js");var react=__webpack_require__("./node_modules/react/index.js"),esm=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),Modal=__webpack_require__("./packages/react/src/components/Modal/index.ts"),Button=__webpack_require__("./packages/react/src/components/Button/index.ts"),TextField=__webpack_require__("./packages/react/src/components/TextField/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),shortContent=(0,jsx_runtime.jsx)("p",{children:"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Id cum reiciendis sed ab voluptas velit quibusdam expedita sapiente nemo? Modi accusamus minus distinctio error non! Provident quasi officia pariatur fugit."}),line={style:{display:"block"}},longContent=(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[shortContent,(0,jsx_runtime.jsxs)("p",{children:[(0,jsx_runtime.jsxs)("span",Object.assign({},line,{children:["Whan that Aprille with his shoures"," ",(0,jsx_runtime.jsx)("a",{href:"https://en.wiktionary.org/wiki/soote",children:"soote"}),","]})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"The droghte of March hath perced to the roote,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"And bathed every veyne in swich licóur"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Of which vertú engendred is the flour;"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Whan Zephirus eek with his swete breeth"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Inspired hath in every holt and heeth"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"The tendre croppes, and the yonge sonne"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Hath in the Ram his halfe cours y-ronne,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"And smale foweles maken melodye,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"That slepen al the nyght with open ye,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"So priketh hem Natúre in hir corages,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Thanne longen folk to goon on pilgrimages,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"And palmeres for to seken straunge strondes,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"To ferne halwes, kowthe in sondry londes;"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"And specially, from every shires ende"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Of Engelond, to Caunterbury they wende,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"The hooly blisful martir for to seke,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"That hem hath holpen whan that they were seeke."}))]}),(0,jsx_runtime.jsxs)("p",{children:[(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Bifil that in that seson on a day,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"In Southwerk at the Tabard as I lay,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Redy to wenden on my pilgrymage"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"To Caunterbury with ful devout corage,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"At nyght were come into that hostelrye"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Wel nyne and twenty in a compaignye"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Of sondry folk, by áventure y-falle"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"In felaweshipe, and pilgrimes were they alle,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"That toward Caunterbury wolden ryde."})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"The chambres and the stables weren wyde,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"And wel we weren esed atte beste."})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"And shortly, whan the sonne was to reste,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"So hadde I spoken with hem everychon,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"That I was of hir felaweshipe anon,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"And made forward erly for to ryse,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"To take oure wey, ther as I yow devyse."}))]}),(0,jsx_runtime.jsxs)("p",{children:[(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"But nathelees, whil I have tyme and space,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Er that I ferther in this tale pace,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Me thynketh it acordaunt to resoun"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"To telle yow al the condicioun"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"Of ech of hem, so as it semed me,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"And whiche they weren and of what degree,"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"And eek in what array that they were inne;"})),(0,jsx_runtime.jsx)("span",Object.assign({},line,{children:"And at a Knyght than wol I first bigynne."}))]})]}),_excluded=["isOpen"];function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var index_stories={title:"Modal",component:Modal.u,argTypes:{isOpen:{control:{type:"boolean"}},hideTitle:{control:{type:"boolean"}},hideCloseButton:{control:{type:"boolean"}}}},ModalTemplate=function ModalTemplate(_ref){var isOpenProp=_ref.isOpen,args=_objectWithoutProperties(_ref,_excluded),_React$useState2=_slicedToArray(react.useState(isOpenProp),2),isOpen=_React$useState2[0],setOpen=_React$useState2[1];return react.useEffect((function(){return setOpen(isOpenProp)}),[isOpenProp]),(0,jsx_runtime.jsx)(Modal.u,Object.assign({},args,{isOpen:isOpen,onRequestClose:function onRequestClose(){return setOpen(!1)}}))};ModalTemplate.displayName="ModalTemplate";var Default=ModalTemplate.bind({});Default.args={isOpen:!0,title:"Default modal dialog",children:shortContent};var LongContent=ModalTemplate.bind({});LongContent.args={isOpen:!0,title:"Modal dialog with long content",children:longContent};var WithActionBar=ModalTemplate.bind({});WithActionBar.args={isOpen:!0,title:"Modal dialog with an action bar",actions:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.z,{variant:"outline",children:"Not okay"}),(0,jsx_runtime.jsx)(Button.z,{variant:"solid",children:"Okay"})]}),children:shortContent};var ComplexModal=function ComplexModal(args){var _React$useState4=_slicedToArray(react.useState(null),2),firstNameRef=_React$useState4[0],setFirstNameRef=_React$useState4[1],_React$useState6=_slicedToArray(react.useState(null),2),lastNameRef=_React$useState6[0],setLastNameRef=_React$useState6[1],_React$useState8=_slicedToArray(react.useState(!1),2),isOpen=_React$useState8[0],setOpen=_React$useState8[1],_React$useState10=_slicedToArray(react.useState(""),2),lastName=_React$useState10[0],setFirst=_React$useState10[1],_React$useState12=_slicedToArray(react.useState(""),2),firstName=_React$useState12[0],setLast=_React$useState12[1],_React$useState14=_slicedToArray(react.useState(!1),2),resultOpen=_React$useState14[0],setResultOpen=_React$useState14[1],closeResult=function closeResult(){return setResultOpen(!1)};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.z,{variant:"solid",onClick:function open(){return setOpen(!0)},children:"Open"}),(0,jsx_runtime.jsx)(Modal.u,Object.assign({focusOnOpen:firstNameRef||void 0,isOpen:isOpen,onOpen:(0,esm.action)("onOpen"),onRequestClose:function close(){setOpen(!1),(0,esm.action)("onRequestClose")()},closeOnEscape:!resultOpen},args,{children:(0,jsx_runtime.jsxs)("form",{onSubmit:function submit(e){setResultOpen(!0),e.preventDefault()},onChange:function handleChange(_ref2){var target=_ref2.nativeEvent.target;switch(target){case lastNameRef:setFirst(target.value);break;case firstNameRef:setLast(target.value)}},children:[(0,jsx_runtime.jsx)(TextField.n,{required:!0,value:firstName,ref:setFirstNameRef,children:"First Name"}),(0,jsx_runtime.jsx)(TextField.n,{required:!0,value:lastName,ref:setLastNameRef,children:"Last Name"}),(0,jsx_runtime.jsx)(Button.z,{variant:"solid",type:"submit",children:"Submit"})]})})),(0,jsx_runtime.jsx)(Modal.u,{title:"Result",hideTitle:!0,isOpen:resultOpen,onRequestClose:closeResult,actions:(0,jsx_runtime.jsx)(Button.z,{variant:"solid",onClick:closeResult,children:"I'm sure"}),children:"Are you sure, "+firstName+" "+lastName+"?"})]})};ComplexModal.args={title:"Your name"},Default.parameters=Object.assign({storySource:{source:"({ isOpen: isOpenProp, ...args }: ModalProps) => {\n\tconst [isOpen, setOpen] = React.useState(isOpenProp);\n\tReact.useEffect(() => setOpen(isOpenProp), [isOpenProp]);\n\n\treturn <Modal {...args} isOpen={isOpen} onRequestClose={() => setOpen(false)} />;\n}"}},Default.parameters),LongContent.parameters=Object.assign({storySource:{source:"({ isOpen: isOpenProp, ...args }: ModalProps) => {\n\tconst [isOpen, setOpen] = React.useState(isOpenProp);\n\tReact.useEffect(() => setOpen(isOpenProp), [isOpenProp]);\n\n\treturn <Modal {...args} isOpen={isOpen} onRequestClose={() => setOpen(false)} />;\n}"}},LongContent.parameters),WithActionBar.parameters=Object.assign({storySource:{source:"({ isOpen: isOpenProp, ...args }: ModalProps) => {\n\tconst [isOpen, setOpen] = React.useState(isOpenProp);\n\tReact.useEffect(() => setOpen(isOpenProp), [isOpenProp]);\n\n\treturn <Modal {...args} isOpen={isOpen} onRequestClose={() => setOpen(false)} />;\n}"}},WithActionBar.parameters),ComplexModal.parameters=Object.assign({storySource:{source:'(args: ModalProps) => {\n\tconst [firstNameRef, setFirstNameRef] = React.useState<HTMLInputElement | null>(null);\n\tconst [lastNameRef, setLastNameRef] = React.useState<HTMLInputElement | null>(null);\n\tconst [isOpen, setOpen] = React.useState(false);\n\tconst [lastName, setFirst] = React.useState(\'\');\n\tconst [firstName, setLast] = React.useState(\'\');\n\tconst [resultOpen, setResultOpen] = React.useState(false);\n\tconst open = (): void => setOpen(true);\n\tconst close = (): void => {\n\t\tsetOpen(false);\n\t\taction(\'onRequestClose\')();\n\t};\n\tconst submit = (e: React.FormEvent<HTMLFormElement>): void => {\n\t\tsetResultOpen(true);\n\t\te.preventDefault();\n\t};\n\tconst handleChange = ({ nativeEvent }: React.FormEvent<HTMLFormElement>): void => {\n\t\tconst target = nativeEvent.target as HTMLInputElement;\n\t\tswitch (target) {\n\t\t\tcase lastNameRef:\n\t\t\t\tsetFirst(target.value);\n\t\t\t\tbreak;\n\t\t\tcase firstNameRef:\n\t\t\t\tsetLast(target.value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t};\n\tconst closeResult = (): void => setResultOpen(false);\n\treturn (\n\t\t<>\n\t\t\t<Button variant="solid" onClick={open}>Open</Button>\n\t\t\t<Modal\n\t\t\t\tfocusOnOpen={firstNameRef || undefined}\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tonOpen={action(\'onOpen\')}\n\t\t\t\tonRequestClose={close}\n\t\t\t\tcloseOnEscape={!resultOpen}\n\t\t\t\t{...args}\n\t\t\t>\n\t\t\t\t<form onSubmit={submit} onChange={handleChange}>\n\t\t\t\t\t<TextField required value={firstName} ref={setFirstNameRef}>First Name</TextField>\n\t\t\t\t\t<TextField required value={lastName} ref={setLastNameRef}>Last Name</TextField>\n\t\t\t\t\t<Button variant="solid" type="submit">Submit</Button>\n\t\t\t\t</form>\n\t\t\t</Modal>\n\t\t\t<Modal\n\t\t\t\ttitle="Result"\n\t\t\t\thideTitle\n\t\t\t\tisOpen={resultOpen}\n\t\t\t\tonRequestClose={closeResult}\n\t\t\t\tactions={(<Button variant="solid" onClick={closeResult}>I&apos;m sure</Button>)}\n\t\t\t>\n\t\t\t\t{ `Are you sure, ${firstName} ${lastName}?` }\n\t\t\t</Modal>\n\t\t</>\n\t);\n}'}},ComplexModal.parameters);var __namedExportsOrder=["Default","LongContent","WithActionBar","ComplexModal"];try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{isOpen:{defaultValue:null,description:"Indicates whether the Modal dialog is open.",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},title:{defaultValue:null,description:"The name of the Modal dialog. Required for accessibility but can be\nvisually hidden with the `hideTitle` prop.",name:"title",required:!0,type:{name:"string"}},hideTitle:{defaultValue:null,description:"Indicates that the title should be visually hidden. It will still be\naccessible to screen reader users.",name:"hideTitle",required:!1,type:{name:"boolean | undefined"}},hideCloseButton:{defaultValue:null,description:"Indicates that the built-in close button in the top right should not be\nrendered.",name:"hideCloseButton",required:!1,type:{name:"boolean | undefined"}},actions:{defaultValue:null,description:"A list of actions or React Fragment that will be set inside an action bar\nat the bottom of the Modal dialog.",name:"actions",required:!1,type:{name:"ReactFragment | ReactElement<ButtonProps, string | JSXElementConstructor<any>>[] | undefined"}},stickyHeader:{defaultValue:null,description:"Indicates whether the header should stick to the top of the screen. Only\nhas an effect when the modal's content is longer than the window height\nand the user scrolls enough to move the header above to top of the screen.",name:"stickyHeader",required:!1,type:{name:"boolean | undefined"}},stickyActionBar:{defaultValue:null,description:"Indicates whether the footer should stick to the bottom of the screen.\nOnly has an effect when the modal's content is longer than the window\nheight and the footer is below the bottom of the screen.",name:"stickyActionBar",required:!1,type:{name:"boolean | undefined"}},focusOnOpen:{defaultValue:null,description:"An element that should be focused on open. If none is specified, the first\nfocusable element in the Modal will be focused. If none can be found, the\nheader or content will be focused.",name:"focusOnOpen",required:!1,type:{name:"HTMLElement | undefined"}},closeOnBackdropClick:{defaultValue:null,description:"Indicates whether clicking the backdrop should close the Modal dialog.",name:"closeOnBackdropClick",required:!1,type:{name:"boolean | undefined"}},closeOnEscape:{defaultValue:null,description:"Indicates whether `Escape` should close the Modal dialog.",name:"closeOnEscape",required:!1,type:{name:"boolean | undefined"}},mountPoint:{defaultValue:null,description:"A function that returns an element where the Modal dialog should be\nattached to the DOM. Default is the `body`.",name:"mountPoint",required:!1,type:{name:"(() => HTMLElement) | undefined"}},baseName:{defaultValue:null,description:"",name:"baseName",required:!1,type:{name:"string | undefined"}},backdropClass:{defaultValue:null,description:"",name:"backdropClass",required:!1,type:{name:"string | undefined"}},headerClass:{defaultValue:null,description:"",name:"headerClass",required:!1,type:{name:"string | undefined"}},titleClass:{defaultValue:null,description:"",name:"titleClass",required:!1,type:{name:"string | undefined"}},closeButtonClass:{defaultValue:null,description:"",name:"closeButtonClass",required:!1,type:{name:"string | undefined"}},contentClass:{defaultValue:null,description:"",name:"contentClass",required:!1,type:{name:"string | undefined"}},actionBarClass:{defaultValue:null,description:"",name:"actionBarClass",required:!1,type:{name:"string | undefined"}},portalClass:{defaultValue:null,description:"",name:"portalClass",required:!1,type:{name:"string | undefined"}},onRequestClose:{defaultValue:null,description:"Callback function that is called when the Modal would like to close. This\nwill happen under the following conditions:\n* if `closeOnBackdropClick` is `true` and the user clicks the backdrop.\n* if `closeOnEscape` is `true` and the user presses `Escape`.\n* if `hideCloseButton` is not `true` and the user clicks the close button.\n\nTo close the Modal when `onRequestClose` triggers, simply update the\n`isOpen` prop to `false`.",name:"onRequestClose",required:!1,type:{name:"(() => void) | undefined"}},onOpen:{defaultValue:null,description:"",name:"onOpen",required:!1,type:{name:"(() => void) | undefined"}},headerRef:{defaultValue:null,description:"",name:"headerRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},contentRef:{defaultValue:null,description:"",name:"contentRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},actionBarRef:{defaultValue:null,description:"",name:"actionBarRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},modal:{defaultValue:null,description:"",name:"modal",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Modal/index.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"packages/react/src/components/Modal/index.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}try{LongContent.displayName="LongContent",LongContent.__docgenInfo={description:"",displayName:"LongContent",props:{isOpen:{defaultValue:null,description:"Indicates whether the Modal dialog is open.",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},title:{defaultValue:null,description:"The name of the Modal dialog. Required for accessibility but can be\nvisually hidden with the `hideTitle` prop.",name:"title",required:!0,type:{name:"string"}},hideTitle:{defaultValue:null,description:"Indicates that the title should be visually hidden. It will still be\naccessible to screen reader users.",name:"hideTitle",required:!1,type:{name:"boolean | undefined"}},hideCloseButton:{defaultValue:null,description:"Indicates that the built-in close button in the top right should not be\nrendered.",name:"hideCloseButton",required:!1,type:{name:"boolean | undefined"}},actions:{defaultValue:null,description:"A list of actions or React Fragment that will be set inside an action bar\nat the bottom of the Modal dialog.",name:"actions",required:!1,type:{name:"ReactFragment | ReactElement<ButtonProps, string | JSXElementConstructor<any>>[] | undefined"}},stickyHeader:{defaultValue:null,description:"Indicates whether the header should stick to the top of the screen. Only\nhas an effect when the modal's content is longer than the window height\nand the user scrolls enough to move the header above to top of the screen.",name:"stickyHeader",required:!1,type:{name:"boolean | undefined"}},stickyActionBar:{defaultValue:null,description:"Indicates whether the footer should stick to the bottom of the screen.\nOnly has an effect when the modal's content is longer than the window\nheight and the footer is below the bottom of the screen.",name:"stickyActionBar",required:!1,type:{name:"boolean | undefined"}},focusOnOpen:{defaultValue:null,description:"An element that should be focused on open. If none is specified, the first\nfocusable element in the Modal will be focused. If none can be found, the\nheader or content will be focused.",name:"focusOnOpen",required:!1,type:{name:"HTMLElement | undefined"}},closeOnBackdropClick:{defaultValue:null,description:"Indicates whether clicking the backdrop should close the Modal dialog.",name:"closeOnBackdropClick",required:!1,type:{name:"boolean | undefined"}},closeOnEscape:{defaultValue:null,description:"Indicates whether `Escape` should close the Modal dialog.",name:"closeOnEscape",required:!1,type:{name:"boolean | undefined"}},mountPoint:{defaultValue:null,description:"A function that returns an element where the Modal dialog should be\nattached to the DOM. Default is the `body`.",name:"mountPoint",required:!1,type:{name:"(() => HTMLElement) | undefined"}},baseName:{defaultValue:null,description:"",name:"baseName",required:!1,type:{name:"string | undefined"}},backdropClass:{defaultValue:null,description:"",name:"backdropClass",required:!1,type:{name:"string | undefined"}},headerClass:{defaultValue:null,description:"",name:"headerClass",required:!1,type:{name:"string | undefined"}},titleClass:{defaultValue:null,description:"",name:"titleClass",required:!1,type:{name:"string | undefined"}},closeButtonClass:{defaultValue:null,description:"",name:"closeButtonClass",required:!1,type:{name:"string | undefined"}},contentClass:{defaultValue:null,description:"",name:"contentClass",required:!1,type:{name:"string | undefined"}},actionBarClass:{defaultValue:null,description:"",name:"actionBarClass",required:!1,type:{name:"string | undefined"}},portalClass:{defaultValue:null,description:"",name:"portalClass",required:!1,type:{name:"string | undefined"}},onRequestClose:{defaultValue:null,description:"Callback function that is called when the Modal would like to close. This\nwill happen under the following conditions:\n* if `closeOnBackdropClick` is `true` and the user clicks the backdrop.\n* if `closeOnEscape` is `true` and the user presses `Escape`.\n* if `hideCloseButton` is not `true` and the user clicks the close button.\n\nTo close the Modal when `onRequestClose` triggers, simply update the\n`isOpen` prop to `false`.",name:"onRequestClose",required:!1,type:{name:"(() => void) | undefined"}},onOpen:{defaultValue:null,description:"",name:"onOpen",required:!1,type:{name:"(() => void) | undefined"}},headerRef:{defaultValue:null,description:"",name:"headerRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},contentRef:{defaultValue:null,description:"",name:"contentRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},actionBarRef:{defaultValue:null,description:"",name:"actionBarRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},modal:{defaultValue:null,description:"",name:"modal",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Modal/index.stories.tsx#LongContent"]={docgenInfo:LongContent.__docgenInfo,name:"LongContent",path:"packages/react/src/components/Modal/index.stories.tsx#LongContent"})}catch(__react_docgen_typescript_loader_error){}try{WithActionBar.displayName="WithActionBar",WithActionBar.__docgenInfo={description:"",displayName:"WithActionBar",props:{isOpen:{defaultValue:null,description:"Indicates whether the Modal dialog is open.",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},title:{defaultValue:null,description:"The name of the Modal dialog. Required for accessibility but can be\nvisually hidden with the `hideTitle` prop.",name:"title",required:!0,type:{name:"string"}},hideTitle:{defaultValue:null,description:"Indicates that the title should be visually hidden. It will still be\naccessible to screen reader users.",name:"hideTitle",required:!1,type:{name:"boolean | undefined"}},hideCloseButton:{defaultValue:null,description:"Indicates that the built-in close button in the top right should not be\nrendered.",name:"hideCloseButton",required:!1,type:{name:"boolean | undefined"}},actions:{defaultValue:null,description:"A list of actions or React Fragment that will be set inside an action bar\nat the bottom of the Modal dialog.",name:"actions",required:!1,type:{name:"ReactFragment | ReactElement<ButtonProps, string | JSXElementConstructor<any>>[] | undefined"}},stickyHeader:{defaultValue:null,description:"Indicates whether the header should stick to the top of the screen. Only\nhas an effect when the modal's content is longer than the window height\nand the user scrolls enough to move the header above to top of the screen.",name:"stickyHeader",required:!1,type:{name:"boolean | undefined"}},stickyActionBar:{defaultValue:null,description:"Indicates whether the footer should stick to the bottom of the screen.\nOnly has an effect when the modal's content is longer than the window\nheight and the footer is below the bottom of the screen.",name:"stickyActionBar",required:!1,type:{name:"boolean | undefined"}},focusOnOpen:{defaultValue:null,description:"An element that should be focused on open. If none is specified, the first\nfocusable element in the Modal will be focused. If none can be found, the\nheader or content will be focused.",name:"focusOnOpen",required:!1,type:{name:"HTMLElement | undefined"}},closeOnBackdropClick:{defaultValue:null,description:"Indicates whether clicking the backdrop should close the Modal dialog.",name:"closeOnBackdropClick",required:!1,type:{name:"boolean | undefined"}},closeOnEscape:{defaultValue:null,description:"Indicates whether `Escape` should close the Modal dialog.",name:"closeOnEscape",required:!1,type:{name:"boolean | undefined"}},mountPoint:{defaultValue:null,description:"A function that returns an element where the Modal dialog should be\nattached to the DOM. Default is the `body`.",name:"mountPoint",required:!1,type:{name:"(() => HTMLElement) | undefined"}},baseName:{defaultValue:null,description:"",name:"baseName",required:!1,type:{name:"string | undefined"}},backdropClass:{defaultValue:null,description:"",name:"backdropClass",required:!1,type:{name:"string | undefined"}},headerClass:{defaultValue:null,description:"",name:"headerClass",required:!1,type:{name:"string | undefined"}},titleClass:{defaultValue:null,description:"",name:"titleClass",required:!1,type:{name:"string | undefined"}},closeButtonClass:{defaultValue:null,description:"",name:"closeButtonClass",required:!1,type:{name:"string | undefined"}},contentClass:{defaultValue:null,description:"",name:"contentClass",required:!1,type:{name:"string | undefined"}},actionBarClass:{defaultValue:null,description:"",name:"actionBarClass",required:!1,type:{name:"string | undefined"}},portalClass:{defaultValue:null,description:"",name:"portalClass",required:!1,type:{name:"string | undefined"}},onRequestClose:{defaultValue:null,description:"Callback function that is called when the Modal would like to close. This\nwill happen under the following conditions:\n* if `closeOnBackdropClick` is `true` and the user clicks the backdrop.\n* if `closeOnEscape` is `true` and the user presses `Escape`.\n* if `hideCloseButton` is not `true` and the user clicks the close button.\n\nTo close the Modal when `onRequestClose` triggers, simply update the\n`isOpen` prop to `false`.",name:"onRequestClose",required:!1,type:{name:"(() => void) | undefined"}},onOpen:{defaultValue:null,description:"",name:"onOpen",required:!1,type:{name:"(() => void) | undefined"}},headerRef:{defaultValue:null,description:"",name:"headerRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},contentRef:{defaultValue:null,description:"",name:"contentRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},actionBarRef:{defaultValue:null,description:"",name:"actionBarRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},modal:{defaultValue:null,description:"",name:"modal",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Modal/index.stories.tsx#WithActionBar"]={docgenInfo:WithActionBar.__docgenInfo,name:"WithActionBar",path:"packages/react/src/components/Modal/index.stories.tsx#WithActionBar"})}catch(__react_docgen_typescript_loader_error){}try{ComplexModal.displayName="ComplexModal",ComplexModal.__docgenInfo={description:"",displayName:"ComplexModal",props:{isOpen:{defaultValue:null,description:"Indicates whether the Modal dialog is open.",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},title:{defaultValue:null,description:"The name of the Modal dialog. Required for accessibility but can be\nvisually hidden with the `hideTitle` prop.",name:"title",required:!0,type:{name:"string"}},hideTitle:{defaultValue:null,description:"Indicates that the title should be visually hidden. It will still be\naccessible to screen reader users.",name:"hideTitle",required:!1,type:{name:"boolean | undefined"}},hideCloseButton:{defaultValue:null,description:"Indicates that the built-in close button in the top right should not be\nrendered.",name:"hideCloseButton",required:!1,type:{name:"boolean | undefined"}},actions:{defaultValue:null,description:"A list of actions or React Fragment that will be set inside an action bar\nat the bottom of the Modal dialog.",name:"actions",required:!1,type:{name:"ReactFragment | ReactElement<ButtonProps, string | JSXElementConstructor<any>>[] | undefined"}},stickyHeader:{defaultValue:null,description:"Indicates whether the header should stick to the top of the screen. Only\nhas an effect when the modal's content is longer than the window height\nand the user scrolls enough to move the header above to top of the screen.",name:"stickyHeader",required:!1,type:{name:"boolean | undefined"}},stickyActionBar:{defaultValue:null,description:"Indicates whether the footer should stick to the bottom of the screen.\nOnly has an effect when the modal's content is longer than the window\nheight and the footer is below the bottom of the screen.",name:"stickyActionBar",required:!1,type:{name:"boolean | undefined"}},focusOnOpen:{defaultValue:null,description:"An element that should be focused on open. If none is specified, the first\nfocusable element in the Modal will be focused. If none can be found, the\nheader or content will be focused.",name:"focusOnOpen",required:!1,type:{name:"HTMLElement | undefined"}},closeOnBackdropClick:{defaultValue:null,description:"Indicates whether clicking the backdrop should close the Modal dialog.",name:"closeOnBackdropClick",required:!1,type:{name:"boolean | undefined"}},closeOnEscape:{defaultValue:null,description:"Indicates whether `Escape` should close the Modal dialog.",name:"closeOnEscape",required:!1,type:{name:"boolean | undefined"}},mountPoint:{defaultValue:null,description:"A function that returns an element where the Modal dialog should be\nattached to the DOM. Default is the `body`.",name:"mountPoint",required:!1,type:{name:"(() => HTMLElement) | undefined"}},baseName:{defaultValue:null,description:"",name:"baseName",required:!1,type:{name:"string | undefined"}},backdropClass:{defaultValue:null,description:"",name:"backdropClass",required:!1,type:{name:"string | undefined"}},headerClass:{defaultValue:null,description:"",name:"headerClass",required:!1,type:{name:"string | undefined"}},titleClass:{defaultValue:null,description:"",name:"titleClass",required:!1,type:{name:"string | undefined"}},closeButtonClass:{defaultValue:null,description:"",name:"closeButtonClass",required:!1,type:{name:"string | undefined"}},contentClass:{defaultValue:null,description:"",name:"contentClass",required:!1,type:{name:"string | undefined"}},actionBarClass:{defaultValue:null,description:"",name:"actionBarClass",required:!1,type:{name:"string | undefined"}},portalClass:{defaultValue:null,description:"",name:"portalClass",required:!1,type:{name:"string | undefined"}},onRequestClose:{defaultValue:null,description:"Callback function that is called when the Modal would like to close. This\nwill happen under the following conditions:\n* if `closeOnBackdropClick` is `true` and the user clicks the backdrop.\n* if `closeOnEscape` is `true` and the user presses `Escape`.\n* if `hideCloseButton` is not `true` and the user clicks the close button.\n\nTo close the Modal when `onRequestClose` triggers, simply update the\n`isOpen` prop to `false`.",name:"onRequestClose",required:!1,type:{name:"(() => void) | undefined"}},onOpen:{defaultValue:null,description:"",name:"onOpen",required:!1,type:{name:"(() => void) | undefined"}},headerRef:{defaultValue:null,description:"",name:"headerRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},contentRef:{defaultValue:null,description:"",name:"contentRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},actionBarRef:{defaultValue:null,description:"",name:"actionBarRef",required:!1,type:{name:"Ref<HTMLElement> | undefined"}},modal:{defaultValue:null,description:"",name:"modal",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Modal/index.stories.tsx#ComplexModal"]={docgenInfo:ComplexModal.__docgenInfo,name:"ComplexModal",path:"packages/react/src/components/Modal/index.stories.tsx#ComplexModal"})}catch(__react_docgen_typescript_loader_error){}}}]);