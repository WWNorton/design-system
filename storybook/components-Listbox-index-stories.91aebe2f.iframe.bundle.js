"use strict";(self.webpackChunkwwnds=self.webpackChunkwwnds||[]).push([[480],{"./packages/react/src/components/Listbox/index.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomMarker:function(){return CustomMarker},Default:function(){return Default},DisabledOptions:function(){return DisabledOptions},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.values.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js");var react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./packages/react/src/components/Listbox/index.ts"),___WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./packages/react/src/components/index.ts"),_utilities__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./packages/react/src/utilities/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["disabled","multiselectable"],_excluded2=["multiselectable"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var defaultOptions={Dog:"dog",Cat:"cat",Hamster:"hamster",Parrot:"parrot",Spider:"spider",Fish:"fish"},optionValues=Object.values(defaultOptions);__webpack_exports__.default={title:"Listbox",component:___WEBPACK_IMPORTED_MODULE_8__.Listbox,argTypes:{disabled:{control:{type:"inline-check",options:Object.values(defaultOptions)}},multiselectable:{control:{type:"boolean"}}}};var Default=function Default(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)(___WEBPACK_IMPORTED_MODULE_8__.Listbox,Object.assign({},args,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(___WEBPACK_IMPORTED_MODULE_8__.Option,{value:"dog",children:"üê∂ Dog"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(___WEBPACK_IMPORTED_MODULE_8__.Option,{value:"cat",children:"üê± Cat"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(___WEBPACK_IMPORTED_MODULE_8__.Option,{value:"hamster",children:"üêπ Hamster"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(___WEBPACK_IMPORTED_MODULE_8__.Option,{value:"parrot",label:"ü¶ú Parrot"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(___WEBPACK_IMPORTED_MODULE_8__.Option,{value:"spider",label:"üï∑Ô∏è Spider",children:"üï∑Ô∏è"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(___WEBPACK_IMPORTED_MODULE_8__.Option,{value:"üê† Fish"})]}))};Default.displayName="Default",Default.args={"aria-label":"Pets (Default story)",multiselectable:!1,focusWrap:!1};var DisabledOptions=function DisabledOptions(_ref){var disabled=_ref.disabled,multiselectable=_ref.multiselectable,args=_objectWithoutProperties(_ref,_excluded),_useSelect=(0,_utilities__WEBPACK_IMPORTED_MODULE_10__.useSelect)(multiselectable),selected=_useSelect.selected,toggle=_useSelect.toggle;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(___WEBPACK_IMPORTED_MODULE_8__.Listbox,Object.assign({multiselectable:multiselectable,selected:selected,onChange:function onChange(_ref2){var value=_ref2.value;return toggle(value)},options:defaultOptions,optionProps:function optionProps(i){return{disabled:disabled.includes(optionValues[i])}}},args))};DisabledOptions.displayName="DisabledOptions",DisabledOptions.args={"aria-label":"Pets (Disabled options story)",disabled:["dog","cat","spider"],multiselectable:!1};var Marker=function Marker(_ref3){return _ref3.checked?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(___WEBPACK_IMPORTED_MODULE_9__.Icon,{icon:{d:"M17 7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h10c2.76 0 5-2.24 5-5s-2.24-5-5-5zm0 8c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"},style:{color:"var(--nds-primary-color)"}}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(___WEBPACK_IMPORTED_MODULE_9__.Icon,{icon:{d:"M17 7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h10c2.76 0 5-2.24 5-5s-2.24-5-5-5zM7 15c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"},style:{color:"var(--nds-subdued-color)"}})};Marker.displayName="Marker";var CustomMarker=function CustomMarker(_ref4){var multiselectable=_ref4.multiselectable,args=_objectWithoutProperties(_ref4,_excluded2),_useSelect2=(0,_utilities__WEBPACK_IMPORTED_MODULE_10__.useSelect)(multiselectable),selected=_useSelect2.selected,toggle=_useSelect2.toggle,optionRender=react__WEBPACK_IMPORTED_MODULE_7__.useCallback((function(i){return{marker:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)("span",{className:"nds-option__marker",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(Marker,{checked:selected.includes(optionValues[i])})})}}),[selected]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(___WEBPACK_IMPORTED_MODULE_8__.Listbox,Object.assign({multiselectable:multiselectable,selected:selected,onChange:function onChange(_ref5){var value=_ref5.value;return toggle(value)},options:defaultOptions,optionProps:optionRender},args))};CustomMarker.displayName="CustomMarker",CustomMarker.args={"aria-label":"Pets (Custom marker story)",multiselectable:!1},Default.parameters=Object.assign({storySource:{source:'(args: ListboxProps) => (\n\t<Listbox {...args}>\n\t\t<Option value="dog">üê∂ Dog</Option>\n\t\t<Option value="cat">üê± Cat</Option>\n\t\t<Option value="hamster">üêπ Hamster</Option>\n\t\t{/* label is rendered when children aren\'t provided. */}\n\t\t<Option value="parrot" label="ü¶ú Parrot" />\n\t\t{/* label is preferred over children if both are provided. */}\n\t\t<Option value="spider" label="üï∑Ô∏è Spider">üï∑Ô∏è</Option>\n\t\t{/* if neither label nor children are provided, the value is rendered. */}\n\t\t<Option value="üê† Fish" />\n\t</Listbox>\n)'}},Default.parameters),DisabledOptions.parameters=Object.assign({storySource:{source:"({ disabled, multiselectable, ...args }: WithDisabledOptions) => {\n\tconst { selected, toggle } = useSelect(multiselectable);\n\n\treturn (\n\t\t<Listbox\n\t\t\tmultiselectable={multiselectable}\n\t\t\tselected={selected}\n\t\t\tonChange={({ value }) => toggle(value)}\n\t\t\toptions={defaultOptions}\n\t\t\toptionProps={(i) => ({\n\t\t\t\tdisabled: disabled.includes(optionValues[i]),\n\t\t\t})}\n\t\t\t{...args}\n\t\t/>\n\t);\n}"}},DisabledOptions.parameters),CustomMarker.parameters=Object.assign({storySource:{source:'({ multiselectable, ...args }: ListboxProps) => {\n\tconst { selected, toggle } = useSelect(multiselectable);\n\n\tconst optionRender = React.useCallback((i) => ({\n\t\tmarker: (\n\t\t\t<span className="nds-option__marker">\n\t\t\t\t<Marker checked={selected.includes(optionValues[i])} />\n\t\t\t</span>\n\t\t),\n\t}), [selected]);\n\n\treturn (\n\t\t<Listbox\n\t\t\tmultiselectable={multiselectable}\n\t\t\tselected={selected}\n\t\t\tonChange={({ value }) => toggle(value)}\n\t\t\toptions={defaultOptions}\n\t\t\toptionProps={optionRender}\n\t\t\t{...args}\n\t\t/>\n\t);\n}'}},CustomMarker.parameters);var __namedExportsOrder=["Default","DisabledOptions","CustomMarker"];try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{options:{defaultValue:null,description:"A list of options as either an array of `value` props, an array of `OptionProps`\nobjects, or an object with `label: value` entries. Array values will be\nused as both the `label` and the `value`.\n\n```jsx\noptions={['Cat', 'Dog']}\n\t// <Listbox>\n\t// \t<Option value=\"Cat\">Cat</Option>\n\t// \t<Option value=\"Dog\">Dog</Option>\n\t// </Listbox>\n```\n\n```jsx\noptions={[{ label: 'Cat', value: 'üê±' }, { label: 'Dog', value: 'üê∂' }]}\n\t// <Listbox>\n\t// \t<Option value=\"üê±\">Cat</Option>\n\t// \t<Option value=\"üê∂\">Dog</Option>\n\t// </Listbox>\n```\n\n```jsx\noptions={{ Cat: 'üê±', Dog: 'üê∂' }}\n\t// <Listbox>\n\t// \t<Option value=\"üê±\">Cat</Option>\n\t// \t<Option value=\"üê∂\">Dog</Option>\n\t// </Listbox>\n```",name:"options",required:!1,type:{name:"Record<string, string | number> | (string | number | OptionProps)[] | undefined"}},optionProps:{defaultValue:null,description:"Option props that should be mapped to all child options.",name:"optionProps",required:!1,type:{name:"Partial<OptionProps> | ((index: number) => Partial<OptionProps>) | undefined"}},multiselectable:{defaultValue:null,description:"Indicates that more than one item can be selected. Used to set the\n[aria-multiselectable](https://www.w3.org/TR/wai-aria/#aria-multiselectable) value.",name:"multiselectable",required:!1,type:{name:"boolean | undefined"}},orientation:{defaultValue:null,description:"Indicates whether the listbox is arranged horizontally, vertically, or unknown.\nUsed to set the [aria-orientation](https://www.w3.org/TR/wai-aria/#aria-orientation)\nvalue and affects which arrow keys can be used to move focus within it.",name:"orientation",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"horizontal"'},{value:'"vertical"'}]}},selected:{defaultValue:null,description:"The currently selected value(s).",name:"selected",required:!1,type:{name:"(string | number)[] | undefined"}},onChange:{defaultValue:null,description:"A callback that will trigger any time selection changes.",name:"onChange",required:!1,type:{name:"((props: OptionProps & { value: string | number; label: ReactNode; }, index: number) => void) | undefined"}},autofocus:{defaultValue:null,description:"If set, the focusable listbox option should be focused when it is rendered.",name:"autofocus",required:!1,type:{name:"boolean | undefined"}},focusableIndex:{defaultValue:null,description:"The index of the option that should be focusable.",name:"focusableIndex",required:!1,type:{name:"number | undefined"}},focusWrap:{defaultValue:null,description:"If set, focus will move from the last option to the first option when the\nuser presses `ArrowDown`, and vice versa.",name:"focusWrap",required:!1,type:{name:"boolean | undefined"}},onOptionFocus:{defaultValue:null,description:"A callback that will trigger when an option is focused.",name:"onOptionFocus",required:!1,type:{name:"((e: FocusEvent<HTMLLIElement, Element>, index: number) => void) | undefined"}},optionClass:{defaultValue:null,description:"The class name that will be applied to all `options` children.",name:"optionClass",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Listbox/index.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"packages/react/src/components/Listbox/index.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}try{DisabledOptions.displayName="DisabledOptions",DisabledOptions.__docgenInfo={description:"",displayName:"DisabledOptions",props:{options:{defaultValue:null,description:"A list of options as either an array of `value` props, an array of `OptionProps`\nobjects, or an object with `label: value` entries. Array values will be\nused as both the `label` and the `value`.\n\n```jsx\noptions={['Cat', 'Dog']}\n\t// <Listbox>\n\t// \t<Option value=\"Cat\">Cat</Option>\n\t// \t<Option value=\"Dog\">Dog</Option>\n\t// </Listbox>\n```\n\n```jsx\noptions={[{ label: 'Cat', value: 'üê±' }, { label: 'Dog', value: 'üê∂' }]}\n\t// <Listbox>\n\t// \t<Option value=\"üê±\">Cat</Option>\n\t// \t<Option value=\"üê∂\">Dog</Option>\n\t// </Listbox>\n```\n\n```jsx\noptions={{ Cat: 'üê±', Dog: 'üê∂' }}\n\t// <Listbox>\n\t// \t<Option value=\"üê±\">Cat</Option>\n\t// \t<Option value=\"üê∂\">Dog</Option>\n\t// </Listbox>\n```",name:"options",required:!1,type:{name:"Record<string, string | number> | (string | number | OptionProps)[] | undefined"}},optionProps:{defaultValue:null,description:"Option props that should be mapped to all child options.",name:"optionProps",required:!1,type:{name:"Partial<OptionProps> | ((index: number) => Partial<OptionProps>) | undefined"}},multiselectable:{defaultValue:null,description:"Indicates that more than one item can be selected. Used to set the\n[aria-multiselectable](https://www.w3.org/TR/wai-aria/#aria-multiselectable) value.",name:"multiselectable",required:!1,type:{name:"boolean | undefined"}},orientation:{defaultValue:null,description:"Indicates whether the listbox is arranged horizontally, vertically, or unknown.\nUsed to set the [aria-orientation](https://www.w3.org/TR/wai-aria/#aria-orientation)\nvalue and affects which arrow keys can be used to move focus within it.",name:"orientation",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"horizontal"'},{value:'"vertical"'}]}},selected:{defaultValue:null,description:"The currently selected value(s).",name:"selected",required:!1,type:{name:"(string | number)[] | undefined"}},onChange:{defaultValue:null,description:"A callback that will trigger any time selection changes.",name:"onChange",required:!1,type:{name:"((props: OptionProps & { value: string | number; label: ReactNode; }, index: number) => void) | undefined"}},autofocus:{defaultValue:null,description:"If set, the focusable listbox option should be focused when it is rendered.",name:"autofocus",required:!1,type:{name:"boolean | undefined"}},focusableIndex:{defaultValue:null,description:"The index of the option that should be focusable.",name:"focusableIndex",required:!1,type:{name:"number | undefined"}},focusWrap:{defaultValue:null,description:"If set, focus will move from the last option to the first option when the\nuser presses `ArrowDown`, and vice versa.",name:"focusWrap",required:!1,type:{name:"boolean | undefined"}},onOptionFocus:{defaultValue:null,description:"A callback that will trigger when an option is focused.",name:"onOptionFocus",required:!1,type:{name:"((e: FocusEvent<HTMLLIElement, Element>, index: number) => void) | undefined"}},optionClass:{defaultValue:null,description:"The class name that will be applied to all `options` children.",name:"optionClass",required:!1,type:{name:"string | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!0,type:{name:"OptionValues[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Listbox/index.stories.tsx#DisabledOptions"]={docgenInfo:DisabledOptions.__docgenInfo,name:"DisabledOptions",path:"packages/react/src/components/Listbox/index.stories.tsx#DisabledOptions"})}catch(__react_docgen_typescript_loader_error){}try{CustomMarker.displayName="CustomMarker",CustomMarker.__docgenInfo={description:"",displayName:"CustomMarker",props:{options:{defaultValue:null,description:"A list of options as either an array of `value` props, an array of `OptionProps`\nobjects, or an object with `label: value` entries. Array values will be\nused as both the `label` and the `value`.\n\n```jsx\noptions={['Cat', 'Dog']}\n\t// <Listbox>\n\t// \t<Option value=\"Cat\">Cat</Option>\n\t// \t<Option value=\"Dog\">Dog</Option>\n\t// </Listbox>\n```\n\n```jsx\noptions={[{ label: 'Cat', value: 'üê±' }, { label: 'Dog', value: 'üê∂' }]}\n\t// <Listbox>\n\t// \t<Option value=\"üê±\">Cat</Option>\n\t// \t<Option value=\"üê∂\">Dog</Option>\n\t// </Listbox>\n```\n\n```jsx\noptions={{ Cat: 'üê±', Dog: 'üê∂' }}\n\t// <Listbox>\n\t// \t<Option value=\"üê±\">Cat</Option>\n\t// \t<Option value=\"üê∂\">Dog</Option>\n\t// </Listbox>\n```",name:"options",required:!1,type:{name:"Record<string, string | number> | (string | number | OptionProps)[] | undefined"}},optionProps:{defaultValue:null,description:"Option props that should be mapped to all child options.",name:"optionProps",required:!1,type:{name:"Partial<OptionProps> | ((index: number) => Partial<OptionProps>) | undefined"}},multiselectable:{defaultValue:null,description:"Indicates that more than one item can be selected. Used to set the\n[aria-multiselectable](https://www.w3.org/TR/wai-aria/#aria-multiselectable) value.",name:"multiselectable",required:!1,type:{name:"boolean | undefined"}},orientation:{defaultValue:null,description:"Indicates whether the listbox is arranged horizontally, vertically, or unknown.\nUsed to set the [aria-orientation](https://www.w3.org/TR/wai-aria/#aria-orientation)\nvalue and affects which arrow keys can be used to move focus within it.",name:"orientation",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"horizontal"'},{value:'"vertical"'}]}},selected:{defaultValue:null,description:"The currently selected value(s).",name:"selected",required:!1,type:{name:"(string | number)[] | undefined"}},onChange:{defaultValue:null,description:"A callback that will trigger any time selection changes.",name:"onChange",required:!1,type:{name:"((props: OptionProps & { value: string | number; label: ReactNode; }, index: number) => void) | undefined"}},autofocus:{defaultValue:null,description:"If set, the focusable listbox option should be focused when it is rendered.",name:"autofocus",required:!1,type:{name:"boolean | undefined"}},focusableIndex:{defaultValue:null,description:"The index of the option that should be focusable.",name:"focusableIndex",required:!1,type:{name:"number | undefined"}},focusWrap:{defaultValue:null,description:"If set, focus will move from the last option to the first option when the\nuser presses `ArrowDown`, and vice versa.",name:"focusWrap",required:!1,type:{name:"boolean | undefined"}},onOptionFocus:{defaultValue:null,description:"A callback that will trigger when an option is focused.",name:"onOptionFocus",required:!1,type:{name:"((e: FocusEvent<HTMLLIElement, Element>, index: number) => void) | undefined"}},optionClass:{defaultValue:null,description:"The class name that will be applied to all `options` children.",name:"optionClass",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Listbox/index.stories.tsx#CustomMarker"]={docgenInfo:CustomMarker.__docgenInfo,name:"CustomMarker",path:"packages/react/src/components/Listbox/index.stories.tsx#CustomMarker"})}catch(__react_docgen_typescript_loader_error){}}}]);