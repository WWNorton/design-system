{"version":3,"file":"FieldInfo-942aaa1a.js","sources":["../../../../packages/react/src/components/Field/FieldAddon.tsx","../../../../packages/react/src/components/Field/FieldFeedback.tsx","../../../../packages/react/src/components/Field/FieldInfo.tsx"],"sourcesContent":["import React from 'react';\nimport { FieldAddonProps } from './types';\n\nexport const FieldAddon: React.FunctionComponent<FieldAddonProps> = ({\n\tchildren,\n\tbaseName = 'nds-field',\n\tclassName = `${baseName}__addon`,\n}: FieldAddonProps) => <span className={className}>{ children }</span>;\n","import React from 'react';\nimport { FieldFeedbackProps } from './types';\n\n/** A container for field feedback. Use to display content based on field input. */\nexport const FieldFeedback: React.FunctionComponent<FieldFeedbackProps> = ({\n\terrors,\n\tliveErrors = true,\n\tbaseName = 'nds-field',\n\terrorsClass = `${baseName}__errors`,\n\terrorsId,\n\tchildren,\n\tclassName = `${baseName}__feedback`,\n\tid,\n}: FieldFeedbackProps) => {\n\tconst Errors = React.useMemo(() => {\n\t\tif (!errors || !errors.length) return null;\n\t\treturn (\n\t\t\t<ul\n\t\t\t\tclassName={errorsClass}\n\t\t\t\tid={errorsId}\n\t\t\t\taria-label=\"Errors\"\n\t\t\t\taria-live={(liveErrors) ? 'assertive' : undefined}\n\t\t\t\taria-atomic={(liveErrors) ? 'true' : undefined}\n\t\t\t>\n\t\t\t\t{ errors.map((err) => <li key={err}>{ err }</li>) }\n\t\t\t</ul>\n\t\t);\n\t}, [errors, errorsClass, errorsId, liveErrors]);\n\n\treturn (\n\t\t<div id={id} className={className}>\n\t\t\t{ Errors }\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { FieldInfoProps } from './types';\n\n/**\n * Information about a related field. Will always contain a label for the field\n * and can contain an optional description. Make sure to include a valid `htmlFor`\n * prop when used with form controls such as an `<input>`.\n */\nexport const FieldInfo: React.FunctionComponent<FieldInfoProps> = ({\n\tlabel,\n\tlabelTag,\n\tindicator,\n\tdescription,\n\tbaseName = 'nds-field',\n\tlabelClass = `${baseName}__label`,\n\tindicatorClass = `${baseName}__indicator`,\n\tdescriptionClass = `${baseName}__desc`,\n\tlabelId,\n\tdescriptionId,\n\tchildren,\n\tclassName,\n\thtmlFor,\n\tid,\n}: FieldInfoProps) => {\n\tconst Indicator = React.useMemo(() => {\n\t\tif (!indicator) return null;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{' '}\n\t\t\t\t<span className={indicatorClass}>\n\t\t\t\t\t(\n\t\t\t\t\t{ indicator }\n\t\t\t\t\t)\n\t\t\t\t</span>\n\t\t\t</>\n\t\t);\n\t}, [indicator, indicatorClass]);\n\n\tconst Label = React.useMemo(() => {\n\t\tconst labelProps = {\n\t\t\tclassName: labelClass,\n\t\t\thtmlFor,\n\t\t\tid: labelId,\n\t\t\tchildren: (\n\t\t\t\t<>\n\t\t\t\t\t{ label }\n\t\t\t\t\t{ Indicator }\n\t\t\t\t</>\n\t\t\t),\n\t\t};\n\t\tconst LabelTag = (htmlFor) ? 'label' : labelTag || 'div';\n\t\treturn <LabelTag {...labelProps} />;\n\t}, [label, labelClass, htmlFor, labelId, Indicator, labelTag]);\n\n\tconst Description = React.useMemo(() => {\n\t\tif (labelTag !== 'legend' && !description) return null;\n\t\treturn <div className={descriptionClass} id={descriptionId}>{ description }</div>;\n\t}, [labelTag, description, descriptionClass, descriptionId]);\n\n\t// legend elements cannot be the child of a div so render without the container\n\tif (labelTag === 'legend') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ Label }\n\t\t\t\t{ Description }\n\t\t\t\t{ children }\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className={classNames(`${baseName}__info`, className)} id={id}>\n\t\t\t{ Label }\n\t\t\t{ Description }\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\n"],"names":["FieldAddon","children","baseName","className","jsx","FieldFeedback","errors","liveErrors","errorsClass","errorsId","id","Errors","React","err","jsxs","FieldInfo","label","labelTag","indicator","description","labelClass","indicatorClass","descriptionClass","labelId","descriptionId","htmlFor","Indicator","Fragment","Label","Description","classNames"],"mappings":"qGAGO,MAAAA,EAAA,CAAA,CAA8D,SAAAC,EACpE,SAAAC,EAAA,YACW,UAAAC,EAAA,GAAAD,CAAA,SAEZ,IAAAE,EAAA,OAAA,CAAA,UAAAD,EAAA,SAAAF,CAAA,CAAA,qNCHO,MAAAI,EAAA,CAAA,CAAoE,OAAAC,EAC1E,WAAAC,EAAA,GACa,SAAAL,EAAA,YACF,YAAAM,EAAA,GAAAN,CAAA,WACc,SAAAO,EACzB,SAAAR,EACA,UAAAE,EAAA,GAAAD,CAAA,aACuB,GAAAQ,CAExB,IAAA,CACC,MAAAC,EAAAC,EAAA,QAAA,IACC,CAAAN,GAAA,CAAAA,EAAA,OAA+B,KAC/BF,EACC,KAAC,CAAA,UAAAI,EACW,GAAAC,EACP,aAAA,SACO,YAAAF,EAAA,YAAA,OAC6B,cAAAA,EAAA,OAAA,OACH,SAAAD,EAAA,IAAAO,GAAAT,EAAA,KAAA,CAAA,SAAAS,CAAA,EAAAA,CAAA,CAAA,CAEW,CAAA,EACjD,CAAAP,EAAAE,EAAAC,EAAAF,CAAA,CAAA,EAIF,OAAAO,EAAA,MAAA,CAAA,GAAAJ,EAAA,UAAAP,EAAA,SAAA,CAEIQ,EAAAV,CACA,CAAA,CAAA,CAGL;6WC1BO,MAAAc,EAAA,CAAA,CAA4D,MAAAC,EAClE,SAAAC,EACA,UAAAC,EACA,YAAAC,EACA,SAAAjB,EAAA,YACW,WAAAkB,EAAA,GAAAlB,CAAA,UACa,eAAAmB,EAAA,GAAAnB,CAAA,cACI,iBAAAoB,EAAA,GAAApB,CAAA,SACE,QAAAqB,EAC9B,cAAAC,EACA,SAAAvB,EACA,UAAAE,EACA,QAAAsB,EACA,GAAAf,CAED,IAAA,CACC,MAAAgB,EAAAd,EAAA,QAAA,IACCM,EACAJ,EAAAa,EAAA,CAAA,SAAA,CAEG,IAAAb,EAAA,OAAA,CAAA,UAAAO,EAAA,SAAA,CACgC,IAAAH,EAE9B,GAAW,EAAA,CAEd,CAAA,CAAA,EARc,KASf,CAAAA,EAAAG,CAAA,CAAA,EAIFO,EAAAhB,EAAA,QAAA,IAaCR,EADAqB,EAAA,QAAAR,GAAA,MACA,CAAA,GAZA,CAAmB,UAAAG,EACP,QAAAK,EACX,GAAAF,EACI,SAAAT,EAAAa,EAAA,CAAA,SAAA,CAGAX,EAAAU,CACA,EAAA,CACH,CAIF,CAAA,EAAiC,CAAAV,EAAAI,EAAAK,EAAAF,EAAAG,EAAAT,CAAA,CAAA,EAGlCY,EAAAjB,EAAA,QAAA,IACCK,IAAA,UAAA,CAAAE,EAA2C,KAC3Cf,EAAA,MAAA,CAAA,UAAAkB,EAAA,GAAAE,EAAA,SAAAL,CAAA,CAAA,EAA2E,CAAAF,EAAAE,EAAAG,EAAAE,CAAA,CAAA,EAI5E,OAAAP,IAAA,SACCH,EAAAa,EAAA,CAAA,SAAA,CAEIC,EAAAC,EACA5B,CACA,CAAA,CAAA,EAKLa,EAAA,MAAA,CAAA,UAAAgB,EAAA,GAAA5B,CAAA,SAAAC,CAAA,EAAA,GAAAO,EAAA,SAAA,CAEIkB,EAAAC,EACA5B,CACA,CAAA,CAAA,CAGL"}