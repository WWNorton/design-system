{"version":3,"file":"Modal-7cd13909.js","sources":["../../../../node_modules/lodash/uniqueId.js","../../../../packages/react/src/components/Modal/focusable.ts","../../../../packages/react/src/components/BaseDialog/BaseDialog.tsx","../../../../packages/react/src/components/Modal/Modal.tsx"],"sourcesContent":["var toString = require('./toString');\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;\n","const focusableSelectors = [\n\t'[contentEditable=true]:not([tabindex=\"-1\"])',\n\t'[tabindex]:not([tabindex=\"-1\"])',\n\t'a[href]:not([tabindex=\"-1\"])',\n\t'button:not([disabled]):not([tabindex=\"-1\"])',\n\t'dialog',\n\t'embed:not([tabindex=\"-1\"])',\n\t'iframe:not([tabindex=\"-1\"])',\n\t'input:not([disabled]):not([tabindex=\"-1\"])',\n\t'map[name] area[href]:not([tabindex=\"-1\"])',\n\t'object:not([tabindex=\"-1\"])',\n\t'select:not([disabled]):not([tabindex=\"-1\"])',\n\t'summary:not([tabindex=\"-1\"])',\n\t'textarea:not([disabled]):not([tabindex=\"-1\"])',\n];\n\n/** Get a list of focusable elements inside an element. */\nexport const getFocusable = (\n\tfrom: Element | Document | ShadowRoot,\n): NodeListOf<HTMLElement> => from.querySelectorAll(focusableSelectors.join(','));\n","import React from 'react';\nimport { BaseDialogProps } from './types';\n\nexport const BaseDialog = React.forwardRef<HTMLDivElement, BaseDialogProps>(({\n\tmodal,\n\tchildren,\n\t...props\n}: BaseDialogProps, ref) => (\n\t<div\n\t\tref={ref}\n\t\t{...props}\n\t\trole=\"dialog\"\n\t\taria-modal={(modal) ? 'true' : 'false'}\n\t>\n\t\t{ children }\n\t</div>\n));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\nimport { getFocusable } from './focusable';\nimport { canUseDOM } from '../../utilities';\nimport { BaseDialog } from '../BaseDialog';\nimport { IconButton } from '../Button';\nimport {\n\tModalAnatomy, ModalProps, ModalSnapshot, ModalState,\n} from './types';\n\n/**\n * Modal dialog.\n */\nexport class Modal extends React.PureComponent<ModalProps, ModalState> {\n\tpublic static bemBase = 'nds-modal';\n\tpublic static bemElements: Record<ModalAnatomy, string> = {\n\t\tportal: 'portal',\n\t\tbackdrop: 'backdrop',\n\t\theader: 'header',\n\t\ttitle: 'title',\n\t\tcloseButton: 'close',\n\t\tcontent: 'content',\n\t\tactionBar: 'actionbar',\n\t};\n\n\tprivate baseName: string;\n\tprivate id: string;\n\tprivate titleId: string;\n\tprivate portalNode: HTMLElement | null;\n\tprivate dialog: HTMLDivElement | null = null;\n\tprivate header: HTMLElement | null = null;\n\tprivate content: HTMLElement | null = null;\n\tprivate footer: HTMLElement | null = null;\n\t/** A watcher to detect when the header/footer move off screen. */\n\tprivate stickyObserver: IntersectionObserver | null = null;\n\tprivate bodyStyle: string | null = null;\n\n\tstatic defaultProps = {\n\t\tisOpen: false,\n\t\tmountPoint: (): HTMLElement => document.body,\n\t\thideTitle: false,\n\t\tcloseOnBackdropClick: true,\n\t\tcloseOnEscape: true,\n\t};\n\n\tconstructor(props: ModalProps) {\n\t\tsuper(props);\n\n\t\tthis.baseName = props.baseName || Modal.bemBase;\n\t\tthis.id = props.id || uniqueId(`${this.baseName}-`);\n\t\tthis.titleId = `${this.id}-${Modal.bemElements.title}`;\n\t\tthis.portalNode = (canUseDOM) ? this.createPortalNode() : null;\n\n\t\tthis.state = {\n\t\t\tisOpen: props.isOpen || Modal.defaultProps.isOpen,\n\t\t\ttrigger: null,\n\t\t\tlong: false,\n\t\t\tstuckHeader: false,\n\t\t\tstuckFooter: false,\n\t\t\tisClickingDialog: false,\n\t\t};\n\t}\n\n\tcomponentDidMount(): void {\n\t\tif (!canUseDOM || !this.portalNode) return;\n\n\t\tthis.bodyStyle = document.body.style.cssText;\n\n\t\tif ('IntersectionObserver' in window) {\n\t\t\tthis.stickyObserver = new IntersectionObserver(([e]) => {\n\t\t\t\tif (e.target === this.header) {\n\t\t\t\t\tthis.setState({ stuckHeader: e.intersectionRatio < 1 });\n\t\t\t\t}\n\t\t\t\tif (e.target === this.footer) {\n\t\t\t\t\tthis.setState({ stuckFooter: e.intersectionRatio < 1 });\n\t\t\t\t}\n\t\t\t}, { threshold: [1] });\n\t\t}\n\n\t\tif (!document.contains(this.portalNode)) {\n\t\t\tconst { mountPoint = Modal.defaultProps.mountPoint } = this.props;\n\t\t\tconst mount = mountPoint();\n\t\t\tmount.appendChild(this.portalNode);\n\t\t}\n\n\t\tconst { isOpen } = this.state;\n\t\tif (isOpen) this.onOpen();\n\t}\n\n\tgetSnapshotBeforeUpdate(\n\t\t{ mountPoint: prevMount = Modal.defaultProps.mountPoint }: ModalProps,\n\t): ModalSnapshot {\n\t\tconst { mountPoint = Modal.defaultProps.mountPoint } = this.props;\n\t\treturn { prevMount: prevMount(), nextMount: mountPoint() };\n\t}\n\n\tcomponentDidUpdate(\n\t\tprevProps: ModalProps,\n\t\tprevState: ModalState,\n\t\t{ prevMount, nextMount }: ModalSnapshot,\n\t): void {\n\t\tif (!canUseDOM || !this.portalNode) return;\n\t\tconst {\n\t\t\tisOpen,\n\t\t\tchildren,\n\t\t\tfocusOnOpen,\n\t\t\tportalClass = `${this.baseName}__${Modal.bemElements.portal}`,\n\t\t} = this.props;\n\t\tconst { isOpen: stateOpen } = this.state;\n\n\t\t// props change: portalClass\n\t\tif (prevProps.portalClass !== portalClass) {\n\t\t\tthis.portalNode.className = portalClass;\n\t\t}\n\n\t\t// mountPoint change\n\t\tif (nextMount !== prevMount) {\n\t\t\tprevMount.removeChild(this.portalNode);\n\t\t\tnextMount.appendChild(this.portalNode);\n\t\t}\n\n\t\t// props change: closed -> open\n\t\tif (!prevProps.isOpen && isOpen) {\n\t\t\tthis.open();\n\t\t// props change: open -> closed\n\t\t} else if (prevProps.isOpen && !isOpen) {\n\t\t\tthis.close();\n\t\t}\n\n\t\t// state change: closed -> open\n\t\tif (!prevState.isOpen && stateOpen) {\n\t\t\tthis.onOpen();\n\t\t// state change: open -> closed\n\t\t} else if (prevState.isOpen && !stateOpen) {\n\t\t\tthis.onClose();\n\t\t}\n\n\t\tif (prevProps.children !== children) {\n\t\t\tthis.updateLength();\n\t\t}\n\n\t\t// focus the specified element if the modal is open. this will be\n\t\t// triggered _after_ the `onOpen` handler since the ref shouldn't exist\n\t\t// until the modal exists.\n\t\tif (stateOpen && !prevProps.focusOnOpen && focusOnOpen) {\n\t\t\tfocusOnOpen.focus();\n\t\t}\n\t}\n\n\tcomponentWillUnmount(): void {\n\t\tif (!canUseDOM || !this.portalNode) return;\n\t\tthis.portalNode.remove();\n\t\tdocument.removeEventListener('keydown', this.onDocumentKeydown);\n\t\tif (this.bodyStyle) {\n\t\t\tdocument.body.setAttribute('style', this.bodyStyle);\n\t\t} else {\n\t\t\tdocument.body.removeAttribute('style');\n\t\t}\n\t}\n\n\tprivate onOpen(): void {\n\t\tconst { focusOnOpen } = this.props;\n\t\tlet el = focusOnOpen || null;\n\t\tif (!el) {\n\t\t\tconst tabbable = (this.dialog) ? getFocusable(this.dialog) : [];\n\t\t\tel = (tabbable.length) ? tabbable[0] : null;\n\t\t}\n\t\tif (!el) {\n\t\t\tel = this.header || this.content;\n\t\t\tif (el) el.setAttribute('tabIndex', '-1');\n\t\t}\n\t\tif (el) {\n\t\t\tel.focus();\n\t\t}\n\n\t\tthis.updateLength();\n\n\t\tif (this.stickyObserver) {\n\t\t\tif (this.header) this.stickyObserver.observe(this.header);\n\t\t\tif (this.footer) this.stickyObserver.observe(this.footer);\n\t\t}\n\t\tdocument.addEventListener('keydown', this.onDocumentKeydown);\n\n\t\tconst scrollbarWidth = Math.abs(window.innerWidth - document.documentElement.clientWidth);\n\t\tdocument.body.style.overflow = 'hidden';\n\t\tdocument.body.style.paddingRight = `${scrollbarWidth}px`;\n\n\t\t// Prevent modal from closing when click didn't initiate outside of content\n\t\tdocument.addEventListener('pointerup', this.onPointerUpClick);\n\t}\n\n\tprivate onClose(): void {\n\t\tconst { trigger } = this.state;\n\n\t\tif (this.stickyObserver) {\n\t\t\tif (this.header) this.stickyObserver.unobserve(this.header);\n\t\t\tif (this.footer) this.stickyObserver.unobserve(this.footer);\n\t\t}\n\t\tdocument.removeEventListener('keydown', this.onDocumentKeydown);\n\n\t\t// return focus on close\n\t\tif (trigger) trigger.focus();\n\t\tif (this.bodyStyle) {\n\t\t\tdocument.body.setAttribute('style', this.bodyStyle);\n\t\t} else {\n\t\t\tdocument.body.removeAttribute('style');\n\t\t}\n\t}\n\n\tprivate get CloseButton(): JSX.Element | null {\n\t\tconst {\n\t\t\thideCloseButton,\n\t\t\tcloseButtonClass = `${this.baseName}__${Modal.bemElements.closeButton}`,\n\t\t} = this.props;\n\t\tif (hideCloseButton) return null;\n\t\treturn (\n\t\t\t<IconButton\n\t\t\t\ticon=\"close\"\n\t\t\t\tclassName={classNames(closeButtonClass, 'button--base')}\n\t\t\t\tonClick={this.requestClose}\n\t\t\t>\n\t\t\t\tClose\n\t\t\t</IconButton>\n\t\t);\n\t}\n\n\tprivate get Title(): JSX.Element | null {\n\t\tconst {\n\t\t\ttitleClass = `${this.baseName}__${Modal.bemElements.title}`,\n\t\t\ttitle,\n\t\t\thideTitle,\n\t\t} = this.props;\n\t\tif (hideTitle) return null;\n\t\treturn <h2 className={titleClass} id={this.titleId}>{ title }</h2>;\n\t}\n\n\tprivate get Header(): JSX.Element | null {\n\t\tconst {\n\t\t\theaderClass = `${this.baseName}__${Modal.bemElements.header}`,\n\t\t\tstickyHeader,\n\t\t} = this.props;\n\t\tif (!this.Title && !this.CloseButton) return null;\n\t\tconst { stuckHeader, long } = this.state;\n\t\tconst classes = classNames(\n\t\t\theaderClass,\n\t\t\t{\n\t\t\t\t[`${headerClass}--sticky`]: stickyHeader && long,\n\t\t\t\t'nds-stuck': stickyHeader && stuckHeader,\n\t\t\t},\n\t\t);\n\t\treturn (\n\t\t\t<header\n\t\t\t\tclassName={classes}\n\t\t\t\tref={(el): void => { this.header = el; }}\n\t\t\t>\n\t\t\t\t{ this.Title }\n\t\t\t\t{ this.CloseButton }\n\t\t\t</header>\n\t\t);\n\t}\n\n\tprivate get ActionBar(): JSX.Element | null {\n\t\tconst {\n\t\t\tactionBarClass = `${this.baseName}__${Modal.bemElements.actionBar}`,\n\t\t\tstickyActionBar,\n\t\t\tactions,\n\t\t} = this.props;\n\t\tif (!actions) return null;\n\t\tconst { stuckFooter, long } = this.state;\n\t\tconst classes = classNames(\n\t\t\tactionBarClass,\n\t\t\t{\n\t\t\t\t[`${actionBarClass}--sticky`]: stickyActionBar && long,\n\t\t\t\t'nds-stuck': stickyActionBar && stuckFooter,\n\t\t\t},\n\t\t);\n\t\treturn (\n\t\t\t<footer className={classes} ref={(el): void => { this.footer = el; }}>\n\t\t\t\t{ actions }\n\t\t\t</footer>\n\t\t);\n\t}\n\n\tprivate get Dialog(): JSX.Element | null {\n\t\tconst {\n\t\t\ttitle,\n\t\t\thideTitle,\n\t\t\tclassName,\n\t\t\tchildren,\n\t\t\tcontentClass = `${this.baseName}__${Modal.bemElements.content}`,\n\t\t\tbackdropClass = `${this.baseName}__${Modal.bemElements.backdrop}`,\n\t\t} = this.props;\n\t\tconst { isOpen, long } = this.state;\n\t\tif (!isOpen) return null;\n\t\tconst classes = classNames(this.baseName, className);\n\t\tconst label = (hideTitle) ? { 'aria-label': title } : { 'aria-labelledby': this.titleId };\n\t\t/*\n\t\t\teslint-disable\n\t\t\tjsx-a11y/click-events-have-key-events,\n\t\t\tjsx-a11y/no-static-element-interactions,\n\t\t*/\n\t\treturn (\n\t\t\t<section\n\t\t\t\tclassName={classNames(backdropClass, { [`${this.baseName}--long`]: long })}\n\t\t\t\tonClick={this.onBackdropClick}\n\t\t\t>\n\t\t\t\t<BaseDialog\n\t\t\t\t\tmodal\n\t\t\t\t\tid={this.id}\n\t\t\t\t\tclassName={classes}\n\t\t\t\t\tref={(el): void => { this.dialog = el; }}\n\t\t\t\t\tonPointerDown={this.onPointerDownClick}\n\t\t\t\t\t{...label}\n\t\t\t\t>\n\t\t\t\t\t{ this.Header }\n\t\t\t\t\t<section\n\t\t\t\t\t\tclassName={contentClass}\n\t\t\t\t\t\tref={(el): void => { this.content = el; }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ children }\n\t\t\t\t\t</section>\n\t\t\t\t\t{ this.ActionBar }\n\t\t\t\t</BaseDialog>\n\t\t\t</section>\n\t\t);\n\t}\n\n\tprivate open = (): void => {\n\t\tthis.setState({ isOpen: true, trigger: document.activeElement as HTMLElement });\n\t};\n\n\tpublic close = (): void => {\n\t\tthis.setState({ isOpen: false });\n\t};\n\n\tpublic requestClose = (): void => {\n\t\tconst { onRequestClose } = this.props;\n\t\tif (onRequestClose) onRequestClose();\n\t};\n\n\tprivate updateLength = (): void => {\n\t\tif (this.dialog) {\n\t\t\tconst long = this.dialog.offsetHeight > window.innerHeight - 80;\n\t\t\tthis.setState({ long, stuckFooter: long });\n\t\t}\n\t};\n\n\tprivate onPointerDownClick = () => {\n\t\tthis.setState({ isClickingDialog: true });\n\t};\n\n\tprivate onPointerUpClick = (event: PointerEvent) => {\n\t\tconst { isClickingDialog } = this.state;\n\n\t\tif (!this.dialog?.contains(event.target as Element) && !isClickingDialog) {\n\t\t\tthis.setState({ isClickingDialog: false });\n\t\t}\n\t};\n\n\tprivate onBackdropClick = (\n\t\t{ nativeEvent }: React.MouseEvent<HTMLDivElement, MouseEvent>,\n\t): void => {\n\t\tconst { closeOnBackdropClick } = this.props;\n\t\tconst { isClickingDialog } = this.state;\n\n\t\tif (\n\t\t\tcloseOnBackdropClick\n\t\t\t&& this.dialog\n\t\t\t&& !nativeEvent.composedPath().includes(this.dialog)\n\t\t\t&& !isClickingDialog\n\t\t) {\n\t\t\tthis.requestClose();\n\t\t}\n\n\t\tthis.setState({ isClickingDialog: false });\n\t};\n\n\tprivate onDocumentKeydown = (e: KeyboardEvent): void => {\n\t\tconst { closeOnEscape } = this.props;\n\t\tconst { isOpen } = this.state;\n\t\tif (!isOpen) return;\n\t\tif (e.key === 'Escape' && closeOnEscape) this.requestClose();\n\t\tif (e.key === 'Tab' && (this.dialog?.contains(document.activeElement) || !document.activeElement)) {\n\t\t\tconst tabbable = (this.dialog) ? getFocusable(this.dialog) : [];\n\t\t\tif (tabbable.length) {\n\t\t\t\tlet element: HTMLElement | undefined;\n\t\t\t\tconst tabIndex = Array.from(tabbable).indexOf(document.activeElement as HTMLElement);\n\t\t\t\tconst wrapForward = tabIndex === tabbable.length - 1 && !e.shiftKey;\n\t\t\t\tconst wrapBackward = tabIndex === 0 && e.shiftKey;\n\n\t\t\t\tif (tabIndex < 0 || wrapForward) {\n\t\t\t\t\t// don't destructure since tabbable isn't iterable\n\t\t\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\t\t\telement = tabbable[0];\n\t\t\t\t}\n\n\t\t\t\tif (wrapBackward) {\n\t\t\t\t\telement = tabbable[tabbable.length - 1];\n\t\t\t\t}\n\n\t\t\t\tif (element) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\telement.focus();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate createPortalNode(): HTMLDivElement {\n\t\tconst {\n\t\t\tportalClass = `${this.baseName}__${Modal.bemElements.portal}`,\n\t\t} = this.props;\n\t\tconst node = document.createElement('div');\n\t\tnode.className = portalClass;\n\t\treturn node;\n\t}\n\n\trender(): React.ReactNode {\n\t\tif (!canUseDOM || !this.portalNode) return null;\n\n\t\treturn ReactDOM.createPortal(\n\t\t\tthis.Dialog,\n\t\t\tthis.portalNode,\n\t\t);\n\t}\n}\n"],"names":["toString","require$$0","idCounter","uniqueId","prefix","id","uniqueId_1","focusableSelectors","getFocusable","from","BaseDialog","React","modal","children","props","ref","jsx","_Modal","__publicField","onRequestClose","long","event","isClickingDialog","_a","nativeEvent","closeOnBackdropClick","closeOnEscape","isOpen","tabbable","element","tabIndex","wrapForward","wrapBackward","canUseDOM","e","mountPoint","prevMount","prevProps","prevState","nextMount","focusOnOpen","portalClass","stateOpen","el","scrollbarWidth","trigger","hideCloseButton","closeButtonClass","IconButton","classNames","titleClass","title","hideTitle","headerClass","stickyHeader","stuckHeader","classes","jsxs","actionBarClass","stickyActionBar","actions","stuckFooter","className","contentClass","backdropClass","label","node","ReactDOM","Modal"],"mappings":"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","x_google_ignoreList":[0]}