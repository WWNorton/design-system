import{j as k}from"./index-a1e85e29.js";import{R as n}from"./index-0cbcd92a.js";import{b as q,e as N,f as S}from"./hook-0eff1646.js";const g={validateOnDOMChange:!0},d=n.forwardRef(({errors:a,validateOnChange:m,validateOnDOMChange:c=g.validateOnDOMChange,validators:y,maxLength:r,maxLengthRestrictsInput:b=!1,onInput:h,onDOMChange:s,onValidate:o,...w},O)=>{const[e,M]=q(O),[l,v]=n.useState(a);n.useEffect(()=>v(a),[a]);const p=N(y),u=n.useCallback(({max:t,maxLength:I,min:D,minLength:V,pattern:A,required:E,step:L,type:R,value:_,validity:x})=>{const f=p({max:t,maxLength:r||I,min:D,minLength:V,pattern:A,required:E,step:L,type:R,value:_,validity:x});o&&o(f),a||v(f)},[p,o,a,r]),C=t=>{h&&h(t),m&&u(t.currentTarget)},i=n.useCallback(t=>{s&&s(t),c&&u(t.target)},[s,c,u]);return n.useEffect(()=>{if(e&&e.willValidate){const t=!l||!l.length?"":l.join(`
`);e.setCustomValidity(t)}},[e,l]),S(()=>(e&&i&&e.addEventListener("change",i),()=>{e&&i&&e.removeEventListener("change",i)}),[e,i]),k("input",{ref:M,onInput:C,maxLength:b?r:void 0,...w})});d.defaultProps=g;try{d.displayName="BaseInput",d.__docgenInfo={description:"A base `<input>` component. Adds a callback for the DOM's `change` event\n(`onDOMChange`), which does not exist in React.",displayName:"BaseInput",props:{errors:{defaultValue:null,description:`A list of validation errors. When the input is submitted in a form, the
list will be concatenated into a single string with a new line separator.`,name:"errors",required:!1,type:{name:"string[]"}},type:{defaultValue:null,description:"[DOM - `type`](https://html.spec.whatwg.org/multipage/input.html#attr-input-type)",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"button"'},{value:'"time"'},{value:'"image"'},{value:'"text"'},{value:'"hidden"'},{value:'"color"'},{value:'"checkbox"'},{value:'"radio"'},{value:'"search"'},{value:'"tel"'},{value:'"url"'},{value:'"email"'},{value:'"date"'},{value:'"datetime-local"'},{value:'"file"'},{value:'"month"'},{value:'"password"'},{value:'"range"'},{value:'"reset"'},{value:'"submit"'},{value:'"week"'}]}},validators:{defaultValue:null,description:`A list of validators. A validator contains a function that tests the value
for validity and a corresponding message that conveys why the test failed.`,name:"validators",required:!1,type:{name:"ValidatorEntry[]"}},validateOnDOMChange:{defaultValue:{value:"true"},description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean"}},maxLengthRestrictsInput:{defaultValue:{value:"false"},description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"((e: Event) => void)"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"((errors: string[]) => void)"}}}}}catch{}export{d as B};
//# sourceMappingURL=BaseInput-9efc6de2.js.map
