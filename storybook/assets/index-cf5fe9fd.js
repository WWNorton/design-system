import{j as d}from"./index-a1e85e29.js";import{T as p,g as y,f as S,L as C}from"./hook-0eff1646.js";import{R as t}from"./index-0cbcd92a.js";const b=(e,r)=>{if(e==="inverse"){if(r)return r==="light"?"dark":"light";throw new Error("colorScheme cannot be inverted on the root <ThemeProvider>.")}return e||"light"},m=({colorScheme:e,ignoreOSColorScheme:r,onColorSchemeChange:i,children:c})=>{const s=t.useContext(p),a=s?s.colorScheme:void 0,l=s===void 0,u=y("(prefers-color-scheme: dark)"),n=t.useMemo(()=>u?"dark":"light",[u]),f=t.useRef(n),[o,h]=t.useState(b(e||(r?void 0:n),a));t.useEffect(()=>{r||!l||n!==f.current&&(h(n),f.current=n)},[l,n,r]),S(()=>{l&&(o?document.documentElement.setAttribute("data-color-scheme",o):document.documentElement.removeAttribute("data-color-scheme"))},[o,l]),t.useEffect(()=>{a&&e==="inverse"&&h(a==="dark"?"light":"dark")},[a,e]),t.useEffect(()=>{i&&i(o)},[o,i]);const v=t.useMemo(()=>({colorScheme:o,setColorScheme:k=>h(k)}),[o]);return d(p.Provider,{value:v,children:l?c:d("div",{"data-color-scheme":o,children:c})})};try{m.displayName="ThemeProvider",m.__docgenInfo={description:"A context provider for theming the Norton Design System.",displayName:"ThemeProvider",props:{colorScheme:{defaultValue:null,description:'The desired color scheme.\n\n- `"light"` – dark text on light background.\n- `"dark"` – light text on dark background.\n- `"inverse"` – the opposite color scheme from the parent `<ThemeProvider>`.\nCannot be used on the root `<ThemeProvider>`.\n- `undefined` – use the user\'s preferred color scheme. If `ignoreOSColorScheme`\nis `true`, `"light"` will be used as a fallback.\n\nReference: [prefers-color-scheme media query](https://drafts.csswg.org/mediaqueries-5/#prefers-color-scheme).',name:"colorScheme",required:!1,type:{name:"enum",value:[{value:'"light"'},{value:'"dark"'},{value:'"inverse"'}]}},ignoreOSColorScheme:{defaultValue:null,description:"If set, the user's operating system color scheme setting will be ignored.",name:"ignoreOSColorScheme",required:!1,type:{name:"boolean"}},onColorSchemeChange:{defaultValue:null,description:"A callback function that will trigger any time the `colorScheme` changes.\nUse to update the color scheme store when it's changed by the user.",name:"onColorSchemeChange",required:!1,type:{name:"((scheme: ColorScheme) => void)"}}}}}catch{}const g=({linkComponent:e,colorScheme:r,ignoreOSColorScheme:i,onColorSchemeChange:c,children:s})=>d(C.Provider,{value:e,children:d(m,{colorScheme:r,ignoreOSColorScheme:i,onColorSchemeChange:c,children:s})});try{g.displayName="AppProvider",g.__docgenInfo={description:"The main application-level provider for design system configuration.",displayName:"AppProvider",props:{colorScheme:{defaultValue:null,description:'The desired color scheme.\n\n- `"light"` – dark text on light background.\n- `"dark"` – light text on dark background.\n- `"inverse"` – the opposite color scheme from the parent `<ThemeProvider>`.\nCannot be used on the root `<ThemeProvider>`.\n- `undefined` – use the user\'s preferred color scheme. If `ignoreOSColorScheme`\nis `true`, `"light"` will be used as a fallback.\n\nReference: [prefers-color-scheme media query](https://drafts.csswg.org/mediaqueries-5/#prefers-color-scheme).',name:"colorScheme",required:!1,type:{name:"enum",value:[{value:'"light"'},{value:'"dark"'},{value:'"inverse"'}]}},ignoreOSColorScheme:{defaultValue:null,description:"If set, the user's operating system color scheme setting will be ignored.",name:"ignoreOSColorScheme",required:!1,type:{name:"boolean"}},onColorSchemeChange:{defaultValue:null,description:"A callback function that will trigger any time the `colorScheme` changes.\nUse to update the color scheme store when it's changed by the user.",name:"onColorSchemeChange",required:!1,type:{name:"((scheme: ColorScheme) => void)"}},linkComponent:{defaultValue:null,description:"When defined, the design system `<Link>` component will render with the\nprovided link component instead of its own render function.",name:"linkComponent",required:!1,type:{name:"LinkComponent"}}}}}catch{}
//# sourceMappingURL=index-cf5fe9fd.js.map
