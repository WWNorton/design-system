import{j as c}from"./index-a1e85e29.js";import{I as i,a as n}from"./Icon-04f449eb.js";import"./index-0cbcd92a.js";import"./_commonjsHelpers-de833af9.js";import"./hook-0eff1646.js";import"./index-314a82e0.js";import"./inheritsLoose-9eefaa95.js";const D={title:"Icon",component:i,argTypes:{size:{control:{type:"range",min:24,max:512,step:4}},color:{control:{type:"color",presetColors:[{color:"var(--nds-blue-60)",title:"blue-60"},{color:"var(--nds-cyan-60)",title:"cyan-60"},{color:"var(--nds-gray-60)",title:"gray-60"},{color:"var(--nds-green-60)",title:"green-60"},{color:"var(--nds-navy-60)",title:"navy-60"},{color:"var(--nds-purple-60)",title:"purple-60"},{color:"var(--nds-red-60)",title:"red-60"},{color:"var(--nds-teal-60)",title:"teal-60"},{color:"var(--nds-yellow-60)",title:"yellow-60"}]}}}},l=a=>c(i,{...a}),r=l.bind({});r.args={variant:"caret-right"};const o=l.bind({});o.args={variant:"caret-right","aria-label":"Right-pointing caret"};const e=l.bind({});e.args={variant:"info",children:'When an icon has content, that content is used to label the icon via a tooltip. Think of this as the "alt text" for the icon.'};const t=a=>c("div",{className:"icon-list",children:Object.keys(n).map(s=>c(i,{variant:n[s],tooltipProps:{hideDelay:0},...a,children:s},n[s]))});t.args={size:48,color:"currentColor"};var p,d,m;r.parameters={...r.parameters,docs:{...(p=r.parameters)==null?void 0:p.docs,source:{originalSource:"(args: IconProps) => <Icon {...args} />",...(m=(d=r.parameters)==null?void 0:d.docs)==null?void 0:m.source}}};var g,u,I;o.parameters={...o.parameters,docs:{...(g=o.parameters)==null?void 0:g.docs,source:{originalSource:"(args: IconProps) => <Icon {...args} />",...(I=(u=o.parameters)==null?void 0:u.docs)==null?void 0:I.source}}};var h,v,y;e.parameters={...e.parameters,docs:{...(h=e.parameters)==null?void 0:h.docs,source:{originalSource:"(args: IconProps) => <Icon {...args} />",...(y=(v=e.parameters)==null?void 0:v.docs)==null?void 0:y.source}}};var b,f,O;t.parameters={...t.parameters,docs:{...(b=t.parameters)==null?void 0:b.docs,source:{originalSource:`(args: IconProps) => <div className="icon-list">
        {Object.keys(IconOptions).map(key => <Icon key={IconOptions[key]} variant={IconOptions[key]} tooltipProps={{
    hideDelay: 0
  }} {...args}>
                    {key}
                </Icon>)}
    </div>`,...(O=(f=t.parameters)==null?void 0:f.docs)==null?void 0:O.source}}};const S=["Default","WithARIALabel","WithContent","AllIcons"];export{t as AllIcons,r as Default,o as WithARIALabel,e as WithContent,S as __namedExportsOrder,D as default};
//# sourceMappingURL=index.stories-57825e63.js.map
