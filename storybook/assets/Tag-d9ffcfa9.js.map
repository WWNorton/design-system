{"version":3,"file":"Tag-d9ffcfa9.js","sources":["../../../../packages/react/src/utilities/link/functions.ts","../../../../packages/react/src/components/Tag/Tag.tsx"],"sourcesContent":["import React from 'react';\nimport ReactIs from 'react-is';\nimport { LinkLikeProps } from './types';\n\n/** Check if a node such as `children` is a link-like React element. */\nexport const isLinkElement = (\n\tnode: React.ReactNode,\n): node is React.ReactElement<LinkLikeProps> => {\n\tif (ReactIs.isElement(node) && (node.type === 'a' || typeof node.props.href === 'string')) {\n\t\treturn true;\n\t}\n\tif (ReactIs.isFragment(node) && node.props) return isLinkElement(node.props.children);\n\treturn false;\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TagProps } from './types';\nimport { BaseButton } from '../BaseButton';\nimport { Icon } from '../Icon';\nimport { isLinkElement } from '../../utilities';\n\nexport const Tag = React.forwardRef<HTMLElement, TagProps>(({\n\tdismissible,\n\tbaseName = 'nds-tag',\n\tcontentsClass = `${baseName}__contents`,\n\tdismissClass = `${baseName}__dismiss`,\n\tchildren,\n\tcolor,\n\tonDismiss,\n\tonClick,\n\tclassName,\n\t...props\n}: TagProps, ref) => {\n\tconst isLink = React.useMemo(() => isLinkElement(children), [children]);\n\tconst classes = classNames(\n\t\tclassName,\n\t\tbaseName,\n\t\t{\n\t\t\t[`${baseName}--${color}`]: color !== undefined,\n\t\t\t[`${baseName}--dismissible`]: dismissible === true,\n\t\t},\n\t);\n\n\tif (dismissible) {\n\t\tconst contents = (isLinkElement(children)) ? children.props.children : children;\n\t\treturn (\n\t\t\t<span\n\t\t\t\tclassName={classes}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<span className={contentsClass}>{ contents }</span>\n\t\t\t\t<BaseButton\n\t\t\t\t\tclassName={dismissClass}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tif (onDismiss) onDismiss();\n\t\t\t\t\t\telse if (onClick) onClick(e);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Icon variant=\"close\" size=\"0.85em\" aria-label=\"Dismiss\" />\n\t\t\t\t</BaseButton>\n\t\t\t</span>\n\t\t);\n\t}\n\n\tif (isLink) {\n\t\treturn (\n\t\t\t<span\n\t\t\t\tclassName={classes}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<span className={contentsClass}>{ children }</span>\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn (\n\t\t<BaseButton className={classes} onClick={onClick} {...props}>\n\t\t\t<span className={contentsClass}>{ children }</span>\n\t\t</BaseButton>\n\t);\n});\n"],"names":["isLinkElement","node","ReactIs","Tag","React","dismissible","baseName","contentsClass","dismissClass","children","color","onDismiss","onClick","className","props","ref","isLink","classes","classNames","contents","jsxs","jsx","BaseButton","e","Icon"],"mappings":"yNAKa,MAAAA,EACZC,GAEIC,EAAQ,UAAUD,CAAI,IAAMA,EAAK,OAAS,KAAO,OAAOA,EAAK,MAAM,MAAS,UACxE,GAEJC,EAAQ,WAAWD,CAAI,GAAKA,EAAK,MAAcD,EAAcC,EAAK,MAAM,QAAQ,EAC7E,GCLDE,EAAAC,EAAA,WAAA,CAAA,CAAqD,YAAAC,EAC3D,SAAAC,EAAA,UACW,cAAAC,EAAA,GAAAD,CAAA,aACgB,aAAAE,EAAA,GAAAF,CAAA,YACD,SAAAG,EAC1B,MAAAC,EACA,UAAAC,EACA,QAAAC,EACA,UAAAC,EACA,GAAAC,CAED,EAAAC,IAAA,CACC,MAAAC,EAAAZ,EAAA,QAAA,IAAAJ,EAAAS,CAAA,EAAA,CAAAA,CAAA,CAAA,EACAQ,EAAAC,EAAgBL,EACfP,EACA,CACA,CAAA,GAAAA,CAAA,KAAAI,CAAA,EAAA,EAAAA,IAAA,OACsC,CAAA,GAAAJ,CAAA,eAAA,EAAAD,IAAA,EACS,CAC/C,EAGD,GAAAA,EAAA,CACC,MAAAc,EAAAnB,EAAAS,CAAA,EAAAA,EAAA,MAAA,SAAAA,EACA,OAAAW,EACC,OAAC,CAAA,UAAAH,EACW,IAAAF,EACX,GAAAD,EACI,SAAA,CAEJO,EAAA,OAAA,CAAA,UAAAd,EAAA,SAAAY,EAAA,EAA4CE,EAC5CC,EAAC,CAAA,UAAAd,EACW,QAAAe,GAAA,CAEVZ,EAAeA,IAAUC,GACPA,EAAAW,CAAA,CAAS,EAC5B,SAAAF,EAAAG,EAAA,CAAA,QAAA,QAAA,KAAA,SAAA,aAAA,UAAA,CAEyD,CAAA,CAC1D,CAAA,CAAA,CACD,CAIF,OAAAR,EACCK,EACC,OAAC,CAAA,UAAAJ,EACW,IAAAF,EACX,GAAAD,EACI,SAAAO,EAAA,OAAA,CAAA,UAAAd,EAAA,SAAAE,EAAA,CAEwC,CAAA,EAK/CY,EAAAC,EAAA,CAAA,UAAAL,EAAA,QAAAL,EAAA,GAAAE,EAAA,SAAAO,EAAA,OAAA,CAAA,UAAAd,EAAA,SAAAE,CAAA,CAAA,CAAA,CAAA,CAKD,CAAA"}