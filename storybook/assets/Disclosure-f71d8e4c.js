import{j as i,a as M,c as X}from"./index-a1e85e29.js";import{R as e}from"./index-0cbcd92a.js";import{I as Y}from"./Icon-04f449eb.js";import{f as Z}from"./hook-0eff1646.js";const b=e.forwardRef(({children:t,...l},m)=>i("details",{ref:m,...l,children:t}));try{b.displayName="BaseDetails",b.__docgenInfo={description:"",displayName:"BaseDetails",props:{}}}catch{}const C=e.forwardRef(({marker:t,markerPosition:l="left",children:m,...v},h)=>i("summary",{ref:h,...v,children:M("div",{style:{display:"flex",width:"100%"},children:[l==="left"&&t,m,l==="right"&&t]})}));try{C.displayName="BaseSummary",C.__docgenInfo={description:"",displayName:"BaseSummary",props:{marker:{defaultValue:null,description:`A marker or icon that indicates the summary's state or action, typically
a caret or chevron.`,name:"marker",required:!1,type:{name:"Element"}},markerPosition:{defaultValue:{value:"left"},description:"The marker's position relative to the summary's text.",name:"markerPosition",required:!1,type:{name:"enum",value:[{value:'"right"'},{value:'"left"'}]}}}}}catch{}const g=async t=>t?await t()!==!1:!0,E=e.forwardRef(({isOpen:t=!1,reducedMotion:l,summary:m,children:v,marker:h=n=>n?"chevron-down":"caret-right",markerPosition:p=n=>n?"right":"left",markerTransform:w,panel:o,className:O,baseName:c="nds-disclosure",summaryClass:B=`${c}__summary`,markerClass:V=`${c}__marker`,contentsOuterClass:A=`${c}__contents-outer`,contentsInnerClass:x=`${c}__contents-inner`,onCloseStart:q,onCloseCancel:S,onCloseEnd:N,onOpenStart:T,onOpenCancel:I,onOpenEnd:L,...H},P)=>{const[n,_]=e.useState(t),[y,j]=e.useState(),[a,u]=e.useState(),[F,d]=e.useState(),[f,G]=e.useState(null),$=e.useMemo(()=>w||(o?"flip-3d":"rotate-90"),[w,o]),r=e.useMemo(()=>l?!1:f?window.getComputedStyle(f).getPropertyValue("transition-duration").split(/,\s*/).some(Q=>parseFloat(Q)>0):!0,[l,f]),R=e.useCallback(async()=>{n||a==="opening"||(a==="closing"?await g(S)&&u(r?"opening":void 0):await g(T)&&_(!0))},[n,a,r,S,T]),D=e.useCallback(async()=>{!n||a==="closing"||(a==="opening"?await g(I)&&u(r?"closing":void 0):await g(q)&&(r?(d({height:y}),window.requestAnimationFrame(()=>{u("closing")})):_(!1)))},[n,a,y,r,I,q]),U=s=>{s.preventDefault(),n?D():R()},W=()=>{u(void 0),d(void 0),a==="opening"&&L&&L(),a==="closing"&&(_(!1),N&&N())};e.useEffect(()=>{t?R():D()},[t]),Z(()=>{n||u(void 0),n&&f&&(j(f.offsetHeight),r&&(d({height:0}),window.requestAnimationFrame(()=>{u("opening")})))},[n,f,r]),e.useEffect(()=>{r?(a==="opening"&&y&&d({height:y}),a==="closing"&&d({height:0})):d(void 0)},[a,y,r]);const k=e.useCallback(s=>{if(s)return typeof s=="string"?{variant:s}:typeof s=="function"?k(s(o)):{icon:s}},[o]),z=e.useMemo(()=>{if(!h)return;const s=k(h);return i("span",{className:V,children:i(Y,{...s,"data-transform":$})})},[h,V,$,k]),J=e.useMemo(()=>{if(p)return typeof p=="function"?p(o)||void 0:p},[p,o]),K=X(O,c,a&&`nds-${a}`,{[`${c}--panel`]:o,"nds-reduced-motion":!r});return M(b,{ref:P,className:K,open:n,...H,children:[i(C,{className:B,marker:z,onClick:U,markerPosition:J,children:i("span",{className:`${c}__title`,children:m})}),n&&i("div",{style:F,className:A,ref:G,onTransitionEnd:W,children:i("div",{className:x,children:v})})]})});try{E.displayName="Disclosure",E.__docgenInfo={description:"",displayName:"Disclosure",props:{summary:{defaultValue:null,description:"The content for the summary element generated by the disclosure component.",name:"summary",required:!0,type:{name:"ReactNode"}},marker:{defaultValue:{value:`(p) => {
		if (p) return 'chevron-down';
		return 'caret-right';
	}`},description:"The marker icon that indicates the disclosure's current state. Similar to the\n[CSS `::marker`](https://developer.mozilla.org/en-US/docs/Web/CSS/%3A%3Amarker).\nThe default is `caret-right`. When `panel` is `true`, the default is\n`chevron-down`.",name:"marker",required:!1,type:{name:"IconVariant | SVGIcon | ((panel?: boolean) => IconVariant | SVGIcon | null) | null"}},markerPosition:{defaultValue:{value:`(p) => {
		if (p) return 'right';
		return 'left';
	}`},description:"The position of the marker. `right` when `panel={true}` and `left` otherwise.",name:"markerPosition",required:!1,type:{name:'"right" | "left" | ((panel?: boolean) => "right" | "left" | null) | null'}},markerTransform:{defaultValue:null,description:'How the marker should move when it opens. Default is `"rotate-90"`.',name:"markerTransform",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"rotate-90"'},{value:'"flip-3d"'}]}},isOpen:{defaultValue:null,description:"Used to set the initial open state or fully control it.",name:"isOpen",required:!1,type:{name:"boolean"}},panel:{defaultValue:null,description:'Indicates that the disclosure should be in "panel" mode, which has a few\neffects:\n\n- The default `marker` will be `chevron-down`\n- The default `markerPosition` will be `right`\n- The default `markerTransform` will be `flip-3d`\n- The disclosure will be given the `nds-disclosure--panel` modifier class',name:"panel",required:!1,type:{name:"boolean"}},reducedMotion:{defaultValue:null,description:"Indicates that animations should be disabled.",name:"reducedMotion",required:!1,type:{name:"boolean"}},baseName:{defaultValue:{value:"nds-disclosure"},description:"The base `className` according to BEM conventions.",name:"baseName",required:!1,type:{name:"string"}},summaryClass:{defaultValue:{value:"`${baseName}__summary`"},description:"The `className` that will be applied to the `<summary>`.",name:"summaryClass",required:!1,type:{name:"string"}},contentsOuterClass:{defaultValue:{value:"`${baseName}__contents-outer`"},description:"The `className` for the outer contents `<div>`.",name:"contentsOuterClass",required:!1,type:{name:"string"}},contentsInnerClass:{defaultValue:{value:"`${baseName}__contents-inner`"},description:"The `className` that will be applied to the inner contents `<div>`.",name:"contentsInnerClass",required:!1,type:{name:"string"}},markerClass:{defaultValue:{value:"`${baseName}__marker`"},description:"The `className` that will be applied to the summary's icon indicator,\nwhich takes the place of the native `summary::marker` pseudo element.",name:"markerClass",required:!1,type:{name:"string"}},onCloseStart:{defaultValue:null,description:"Lifecycle method that is triggered when the disclosure begins to close.\nReturning `false` will prevent the disclosure from beginning to close.",name:"onCloseStart",required:!1,type:{name:"LifecycleCallback"}},onCloseCancel:{defaultValue:null,description:"Lifecycle method that is triggered when the user clicks on the disclosure\nas it's closing. Returning `false` will cause the disclosure to continue\nclosing.",name:"onCloseCancel",required:!1,type:{name:"LifecycleCallback"}},onCloseEnd:{defaultValue:null,description:"Lifecycle method that is triggered when the disclosure has finished closing.",name:"onCloseEnd",required:!1,type:{name:"LifecycleCallback"}},onOpenStart:{defaultValue:null,description:"Lifecycle method that is triggered when the disclosure begins to open.\nReturning `false` will prevent the disclosure from beginning to open.",name:"onOpenStart",required:!1,type:{name:"LifecycleCallback"}},onOpenCancel:{defaultValue:null,description:"Lifecycle method that is triggered when the user clicks on the disclosure\nas it's opening. Returning `false` will cause the disclosure to continue\nopening.",name:"onOpenCancel",required:!1,type:{name:"LifecycleCallback"}},onOpenEnd:{defaultValue:null,description:"Lifecycle method that is triggered when the disclosure has finished opening.",name:"onOpenEnd",required:!1,type:{name:"LifecycleCallback"}}}}}catch{}export{E as D};
//# sourceMappingURL=Disclosure-f71d8e4c.js.map
