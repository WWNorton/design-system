(self.webpackChunkwwnds=self.webpackChunkwwnds||[]).push([[723],{"./packages/react/src/components/BaseInput/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Q:function(){return BaseInput}});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),utilities=__webpack_require__("./packages/react/src/utilities/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["errors","validateOnChange","validateOnDOMChange","validators","maxLength","maxLengthRestrictsInput","onInput","onDOMChange","onValidate"];function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var defaultProps={validateOnDOMChange:!0},BaseInput=react.forwardRef((function(_ref,ref){var errorsProp=_ref.errors,validateOnChange=_ref.validateOnChange,_ref$validateOnDOMCha=_ref.validateOnDOMChange,validateOnDOMChange=void 0===_ref$validateOnDOMCha?defaultProps.validateOnDOMChange:_ref$validateOnDOMCha,validators=_ref.validators,maxLength=_ref.maxLength,_ref$maxLengthRestric=_ref.maxLengthRestrictsInput,maxLengthRestrictsInput=void 0!==_ref$maxLengthRestric&&_ref$maxLengthRestric,onInput=_ref.onInput,onDOMChange=_ref.onDOMChange,onValidate=_ref.onValidate,props=_objectWithoutProperties(_ref,_excluded),_useForwardedRef2=_slicedToArray((0,utilities.useForwardedRef)(ref),2),input=_useForwardedRef2[0],setInput=_useForwardedRef2[1],_React$useState2=_slicedToArray(react.useState(errorsProp),2),errors=_React$useState2[0],setErrors=_React$useState2[1];react.useEffect((function(){return setErrors(errorsProp)}),[errorsProp]);var validator=(0,utilities.useValidation)(validators),validate=react.useCallback((function(_ref2){var max=_ref2.max,elMaxLength=_ref2.maxLength,min=_ref2.min,minLength=_ref2.minLength,pattern=_ref2.pattern,required=_ref2.required,step=_ref2.step,type=_ref2.type,value=_ref2.value,validity=_ref2.validity,errs=validator({max:max,maxLength:maxLength||elMaxLength,min:min,minLength:minLength,pattern:pattern,required:required,step:step,type:type,value:value,validity:validity});onValidate&&onValidate(errs),errorsProp||setErrors(errs)}),[validator,onValidate,errorsProp,maxLength]),domChangeHandler=react.useCallback((function(e){onDOMChange&&onDOMChange(e),validateOnDOMChange&&validate(e.target)}),[onDOMChange,validateOnDOMChange,validate]);return react.useEffect((function(){if(input&&input.willValidate){var errString=errors&&errors.length?errors.join("\n"):"";input.setCustomValidity(errString)}}),[input,errors]),(0,utilities.useLayoutEffect)((function(){return input&&domChangeHandler&&input.addEventListener("change",domChangeHandler),function(){input&&domChangeHandler&&input.removeEventListener("change",domChangeHandler)}}),[input,domChangeHandler]),(0,jsx_runtime.jsx)("input",Object.assign({ref:setInput,onInput:function inputHandler(e){onInput&&onInput(e),validateOnChange&&validate(e.currentTarget)},maxLength:maxLengthRestrictsInput?maxLength:void 0},props))}));BaseInput.defaultProps=defaultProps;try{BaseInput.displayName="BaseInput",BaseInput.__docgenInfo={description:"A base `<input>` component. Adds a callback for the DOM's `change` event\n(`onDOMChange`), which does not exist in React.",displayName:"BaseInput",props:{errors:{defaultValue:null,description:"A list of validation errors. When the input is submitted in a form, the\nlist will be concatenated into a single string with a new line separator.",name:"errors",required:!1,type:{name:"string[] | undefined"}},type:{defaultValue:null,description:"[DOM - `type`](https://html.spec.whatwg.org/multipage/input.html#attr-input-type)",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"button"'},{value:'"time"'},{value:'"image"'},{value:'"text"'},{value:'"hidden"'},{value:'"color"'},{value:'"range"'},{value:'"checkbox"'},{value:'"radio"'},{value:'"search"'},{value:'"tel"'},{value:'"url"'},{value:'"email"'},{value:'"date"'},{value:'"datetime-local"'},{value:'"file"'},{value:'"month"'},{value:'"password"'},{value:'"reset"'},{value:'"submit"'},{value:'"week"'}]}},validators:{defaultValue:null,description:"A list of validators. A validator contains a function that tests the value\nfor validity and a corresponding message that conveys why the test failed.",name:"validators",required:!1,type:{name:"ValidatorEntry[] | undefined"}},validateOnDOMChange:{defaultValue:{value:"true"},description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean | undefined"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean | undefined"}},maxLengthRestrictsInput:{defaultValue:{value:"false"},description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean | undefined"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"((e: Event) => void) | undefined"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"((errors: string[]) => void) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/BaseInput/BaseInput.tsx#BaseInput"]={docgenInfo:BaseInput.__docgenInfo,name:"BaseInput",path:"packages/react/src/components/BaseInput/BaseInput.tsx#BaseInput"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/Field/FieldAddon.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{k:function(){return FieldAddon}});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),FieldAddon=function FieldAddon(_ref){var children=_ref.children,_ref$baseName=_ref.baseName,baseName=void 0===_ref$baseName?"nds-field":_ref$baseName,_ref$className=_ref.className,className=void 0===_ref$className?baseName+"__addon":_ref$className;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span",{className:className,children:children})};FieldAddon.displayName="FieldAddon";try{FieldAddon.displayName="FieldAddon",FieldAddon.__docgenInfo={description:"",displayName:"FieldAddon",props:{baseName:{defaultValue:{value:"nds-field"},description:"",name:"baseName",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Field/FieldAddon.tsx#FieldAddon"]={docgenInfo:FieldAddon.__docgenInfo,name:"FieldAddon",path:"packages/react/src/components/Field/FieldAddon.tsx#FieldAddon"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/Field/FieldFeedback.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{S:function(){return FieldFeedback}});__webpack_require__("./node_modules/core-js/modules/es.array.map.js");var react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js"),FieldFeedback=function FieldFeedback(_ref){var errors=_ref.errors,_ref$liveErrors=_ref.liveErrors,liveErrors=void 0===_ref$liveErrors||_ref$liveErrors,_ref$baseName=_ref.baseName,baseName=void 0===_ref$baseName?"nds-field":_ref$baseName,_ref$errorsClass=_ref.errorsClass,errorsClass=void 0===_ref$errorsClass?baseName+"__errors":_ref$errorsClass,errorsId=_ref.errorsId,children=_ref.children,_ref$className=_ref.className,className=void 0===_ref$className?baseName+"__feedback":_ref$className,id=_ref.id,Errors=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((function(){return errors&&errors.length?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("ul",{className:errorsClass,id:errorsId,"aria-label":"Errors","aria-live":liveErrors?"assertive":void 0,"aria-atomic":liveErrors?"true":void 0,children:errors.map((function(err){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:err},err)}))}):null}),[errors,errorsClass,errorsId,liveErrors]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{id:id,className:className,children:[Errors,children]})};FieldFeedback.displayName="FieldFeedback";try{FieldFeedback.displayName="FieldFeedback",FieldFeedback.__docgenInfo={description:"A container for field feedback. Use to display content based on field input.",displayName:"FieldFeedback",props:{liveErrors:{defaultValue:{value:"true"},description:"Indicates whether errors should be a live region. Default is `true`. Only\nset to `false` if you intend to communicate errors to screen reader users\nthrough some other mechanism.",name:"liveErrors",required:!1,type:{name:"boolean | undefined"}},baseName:{defaultValue:{value:"nds-field"},description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:{value:"`${baseName}__errors`"},description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Field/FieldFeedback.tsx#FieldFeedback"]={docgenInfo:FieldFeedback.__docgenInfo,name:"FieldFeedback",path:"packages/react/src/components/Field/FieldFeedback.tsx#FieldFeedback"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/Field/FieldInfo.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{y:function(){return FieldInfo}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_4__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js"),FieldInfo=function FieldInfo(_ref){var label=_ref.label,labelTag=_ref.labelTag,indicator=_ref.indicator,description=_ref.description,_ref$baseName=_ref.baseName,baseName=void 0===_ref$baseName?"nds-field":_ref$baseName,_ref$labelClass=_ref.labelClass,labelClass=void 0===_ref$labelClass?baseName+"__label":_ref$labelClass,_ref$indicatorClass=_ref.indicatorClass,indicatorClass=void 0===_ref$indicatorClass?baseName+"__indicator":_ref$indicatorClass,_ref$descriptionClass=_ref.descriptionClass,descriptionClass=void 0===_ref$descriptionClass?baseName+"__desc":_ref$descriptionClass,labelId=_ref.labelId,descriptionId=_ref.descriptionId,children=_ref.children,className=_ref.className,htmlFor=_ref.htmlFor,id=_ref.id,Indicator=react__WEBPACK_IMPORTED_MODULE_3__.useMemo((function(){return indicator?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[" ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("span",{className:indicatorClass,children:["(",indicator,")"]})]}):null}),[indicator,indicatorClass]),Label=react__WEBPACK_IMPORTED_MODULE_3__.useMemo((function(){var labelProps={className:labelClass,htmlFor:htmlFor,id:labelId,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[label,Indicator]})},LabelTag=htmlFor?"label":labelTag||"div";return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(LabelTag,Object.assign({},labelProps))}),[label,labelClass,htmlFor,labelId,Indicator,labelTag]),Description=react__WEBPACK_IMPORTED_MODULE_3__.useMemo((function(){return"legend"===labelTag||description?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:descriptionClass,id:descriptionId,children:description}):null}),[labelTag,description,descriptionClass,descriptionId]);return"legend"===labelTag?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[Label,Description,children]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{className:classnames__WEBPACK_IMPORTED_MODULE_4___default()(baseName+"__info",className),id:id,children:[Label,Description,children]})};FieldInfo.displayName="FieldInfo";try{FieldInfo.displayName="FieldInfo",FieldInfo.__docgenInfo={description:"Information about a related field. Will always contain a label for the field\nand can contain an optional description. Make sure to include a valid `htmlFor`\nprop when used with form controls such as an `<input>`.",displayName:"FieldInfo",props:{baseName:{defaultValue:{value:"nds-field"},description:"",name:"baseName",required:!1,type:{name:"string | undefined"}},label:{defaultValue:null,description:"The name of the field. Required.",name:"label",required:!0,type:{name:"ReactNode"}},indicator:{defaultValue:null,description:'An additional label indicator, displayed as a parenthetical inside the\nlabel container. For instance, `indicator="required"` would result in\nlabel text content of `"{label} (required)"`.',name:"indicator",required:!1,type:{name:"string | null | undefined"}},indicatorClass:{defaultValue:{value:"`${baseName}__indicator`"},description:"A className for the indicator `<span>`.",name:"indicatorClass",required:!1,type:{name:"string | undefined"}},labelTag:{defaultValue:null,description:"The HTML element name for the label. If `htmlFor` is included, this will\nautomatically be `label`. If undefined, this will be `div`.",name:"labelTag",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"div"'},{value:'"label"'},{value:'"legend"'}]}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:{value:"`${baseName}__label`"},description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:{value:"`${baseName}__desc`"},description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Field/FieldInfo.tsx#FieldInfo"]={docgenInfo:FieldInfo.__docgenInfo,name:"FieldInfo",path:"packages/react/src/components/Field/FieldInfo.tsx#FieldInfo"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/Field/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{FieldAddon:function(){return _FieldAddon__WEBPACK_IMPORTED_MODULE_0__.k},FieldFeedback:function(){return _FieldFeedback__WEBPACK_IMPORTED_MODULE_1__.S},FieldInfo:function(){return _FieldInfo__WEBPACK_IMPORTED_MODULE_2__.y}});var _FieldAddon__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/react/src/components/Field/FieldAddon.tsx"),_FieldFeedback__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/react/src/components/Field/FieldFeedback.tsx"),_FieldInfo__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/react/src/components/Field/FieldInfo.tsx"),_types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/Field/types.ts");__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_3__,"Icon")&&__webpack_require__.d(__webpack_exports__,{Icon:function(){return _types__WEBPACK_IMPORTED_MODULE_3__.Icon}}),__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_3__,"Listbox")&&__webpack_require__.d(__webpack_exports__,{Listbox:function(){return _types__WEBPACK_IMPORTED_MODULE_3__.Listbox}}),__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_3__,"Option")&&__webpack_require__.d(__webpack_exports__,{Option:function(){return _types__WEBPACK_IMPORTED_MODULE_3__.Option}})},"./packages/react/src/components/Field/types.ts":function(){},"./packages/react/src/components/TextField/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{n:function(){return TextField}});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),Field=__webpack_require__("./packages/react/src/components/Field/index.ts"),BaseInput=__webpack_require__("./packages/react/src/components/BaseInput/index.ts"),utilities=(__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./packages/react/src/utilities/index.ts")),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["multiline","autoSize","errors","validateOnChange","validateOnDOMChange","validators","maxLength","maxLengthRestrictsInput","onInput","onDOMChange","onValidate"];function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var defaultProps={validateOnDOMChange:!0},BaseTextArea=react.forwardRef((function(_ref,ref){var _ref$multiline=_ref.multiline,multiline=void 0!==_ref$multiline&&_ref$multiline,_ref$autoSize=_ref.autoSize,autoSize=void 0!==_ref$autoSize&&_ref$autoSize,errorsProp=_ref.errors,validateOnChange=_ref.validateOnChange,_ref$validateOnDOMCha=_ref.validateOnDOMChange,validateOnDOMChange=void 0===_ref$validateOnDOMCha?defaultProps.validateOnDOMChange:_ref$validateOnDOMCha,validators=_ref.validators,maxLength=_ref.maxLength,_ref$maxLengthRestric=_ref.maxLengthRestrictsInput,maxLengthRestrictsInput=void 0!==_ref$maxLengthRestric&&_ref$maxLengthRestric,onInput=_ref.onInput,onDOMChange=_ref.onDOMChange,onValidate=_ref.onValidate,props=_objectWithoutProperties(_ref,_excluded),_useForwardedRef2=_slicedToArray((0,utilities.useForwardedRef)(ref),2),textarea=_useForwardedRef2[0],setTextarea=_useForwardedRef2[1],_React$useState2=_slicedToArray(react.useState(errorsProp),2),errors=_React$useState2[0],setErrors=_React$useState2[1],lines=Number(multiline)>0?Number(multiline):1;react.useEffect((function(){return setErrors(errorsProp)}),[errorsProp]);var validator=(0,utilities.useValidation)(validators),validate=react.useCallback((function(_ref2){var elMaxLength=_ref2.maxLength,minLength=_ref2.minLength,required=_ref2.required,type=_ref2.type,value=_ref2.value,validity=_ref2.validity,errs=validator({maxLength:maxLength||elMaxLength,minLength:minLength,required:required,type:type,value:value,validity:validity});onValidate&&onValidate(errs),errorsProp||setErrors(errs)}),[validator,onValidate,errorsProp,maxLength]);react.useEffect((function(){autoSize&&textarea&&(textarea.style.height="auto")}),[autoSize,textarea]);var domChangeHandler=react.useCallback((function(e){onDOMChange&&onDOMChange(e),validateOnDOMChange&&validate(e.target)}),[onDOMChange,validateOnDOMChange,validate]);return react.useEffect((function(){if(textarea&&textarea.willValidate){var errString=errors&&errors.length?errors.join("\n"):"";textarea.setCustomValidity(errString)}}),[textarea,errors]),(0,utilities.useLayoutEffect)((function(){return textarea&&domChangeHandler&&textarea.addEventListener("change",domChangeHandler),function(){textarea&&domChangeHandler&&textarea.removeEventListener("change",domChangeHandler)}}),[textarea,domChangeHandler]),(0,jsx_runtime.jsx)("textarea",Object.assign({ref:setTextarea,onInput:function inputHandler(e){onInput&&onInput(e),autoSize&&function onResize(){textarea&&(textarea.style.height="auto",textarea.style.height=textarea.scrollHeight+"px")}(),validateOnChange&&validate(e.currentTarget)},maxLength:maxLengthRestrictsInput?maxLength:void 0},props,{rows:lines}))}));BaseTextArea.defaultProps=defaultProps;try{BaseTextArea.displayName="BaseTextArea",BaseTextArea.__docgenInfo={description:"A base `<textarea>` component. Adds a callback for the DOM's `change` event\n(`onDOMChange`), which does not exist in React.",displayName:"BaseTextArea",props:{errors:{defaultValue:null,description:"A list of validation errors. When the input is submitted in a form, the\nlist will be concatenated into a single string with a new line separator.",name:"errors",required:!1,type:{name:"string[] | undefined"}},validators:{defaultValue:null,description:"A list of validators. A validator contains a function that tests the value\nfor validity and a corresponding message that conveys why the test failed.",name:"validators",required:!1,type:{name:"ValidatorEntry[] | undefined"}},validateOnDOMChange:{defaultValue:{value:"true"},description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean | undefined"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean | undefined"}},maxLengthRestrictsInput:{defaultValue:{value:"false"},description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean | undefined"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"((e: Event) => void) | undefined"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"((errors: string[]) => void) | undefined"}},multiline:{defaultValue:{value:"false"},description:"Allow for multiple lines of input",name:"multiline",required:!1,type:{name:"number | boolean | undefined"}},autoSize:{defaultValue:{value:"false"},description:"If `true` increase the height of textarea automatically\nonly works when multiline prop it's `enable`",name:"autoSize",required:!1,type:{name:"boolean | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/BaseTextArea/BaseTextArea.tsx#BaseTextArea"]={docgenInfo:BaseTextArea.__docgenInfo,name:"BaseTextArea",path:"packages/react/src/components/BaseTextArea/BaseTextArea.tsx#BaseTextArea"})}catch(__react_docgen_typescript_loader_error){}var TextField_excluded=["counterStart","validators","validateOnChange","validateOnDOMChange","requiredIndicator","optionalIndicator","multiline","autoSize","children","description","addonBefore","addonAfter","feedback","errors","counter","baseName","className","labelClass","descriptionClass","groupClass","inputClass","addonClass","feedbackClass","errorsClass","counterClass","invalidClass","id","labelId","descriptionId","errorsId","maxLength","required","type","value","onChange","onCount","onDOMChange","onValidate"];function TextField_slicedToArray(arr,i){return function TextField_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function TextField_iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function TextField_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return TextField_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TextField_arrayLikeToArray(o,minLen)}(arr,i)||function TextField_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function TextField_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TextField_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function TextField_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var TextField_defaultProps={counterStart:25,counter:function counter(_ref){var remaining=_ref.remaining,max=_ref.max;return remaining<0?null:remaining+"/"+max+" characters remaining"},type:"text"},TextField=react.forwardRef((function(_ref2,ref){var _classNames,_ref2$counterStart=_ref2.counterStart,counterStart=void 0===_ref2$counterStart?TextField_defaultProps.counterStart:_ref2$counterStart,validators=_ref2.validators,validateOnChange=_ref2.validateOnChange,validateOnDOMChange=_ref2.validateOnDOMChange,requiredIndicator=_ref2.requiredIndicator,optionalIndicator=_ref2.optionalIndicator,_ref2$multiline=_ref2.multiline,multiline=void 0!==_ref2$multiline&&_ref2$multiline,_ref2$autoSize=_ref2.autoSize,autoSize=void 0!==_ref2$autoSize&&_ref2$autoSize,children=_ref2.children,description=_ref2.description,addonBefore=_ref2.addonBefore,addonAfter=_ref2.addonAfter,feedback=_ref2.feedback,errorsProp=_ref2.errors,_ref2$counter=_ref2.counter,counter=void 0===_ref2$counter?TextField_defaultProps.counter:_ref2$counter,_ref2$baseName=_ref2.baseName,baseName=void 0===_ref2$baseName?"nds-field":_ref2$baseName,_ref2$className=_ref2.className,className=void 0===_ref2$className?classnames_default()(baseName,baseName+"--text"):_ref2$className,labelClass=_ref2.labelClass,descriptionClass=_ref2.descriptionClass,_ref2$groupClass=_ref2.groupClass,groupClass=void 0===_ref2$groupClass?classnames_default()(baseName+"__group"+(multiline?"--textarea":""),baseName+"__group--text"):_ref2$groupClass,_ref2$inputClass=_ref2.inputClass,inputClass=void 0===_ref2$inputClass?classnames_default()(baseName+"__"+(multiline?"textarea":"input"),baseName+"__"+(multiline?"textarea":"input")+"--text"):_ref2$inputClass,_ref2$addonClass=_ref2.addonClass,addonClass=void 0===_ref2$addonClass?baseName+"__addon":_ref2$addonClass,feedbackClass=_ref2.feedbackClass,errorsClass=_ref2.errorsClass,_ref2$counterClass=_ref2.counterClass,counterClass=void 0===_ref2$counterClass?baseName+"__counter":_ref2$counterClass,_ref2$invalidClass=_ref2.invalidClass,invalidClass=void 0===_ref2$invalidClass?baseName+"--invalid":_ref2$invalidClass,idProp=_ref2.id,labelIdProp=_ref2.labelId,descIdProp=_ref2.descriptionId,errIdProp=_ref2.errorsId,maxLength=_ref2.maxLength,required=_ref2.required,_ref2$type=_ref2.type,type=void 0===_ref2$type?TextField_defaultProps.type:_ref2$type,value=_ref2.value,onChange=_ref2.onChange,onCount=_ref2.onCount,onDOMChange=_ref2.onDOMChange,onValidate=_ref2.onValidate,inputProps=TextField_objectWithoutProperties(_ref2,TextField_excluded),_React$useState2=TextField_slicedToArray(react.useState(errorsProp),2),errors=_React$useState2[0],setErrors=_React$useState2[1],uniqueId=(0,utilities.useId)(),id=idProp||uniqueId,labelId=labelIdProp||id+"-label",descId=descIdProp||id+"-desc",errId=errIdProp||id+"-err",inputId=id+"-input",getRemaining=react.useCallback((function(val){if(maxLength)return maxLength-(val||"").toString().length}),[maxLength]),_React$useState4=TextField_slicedToArray(react.useState(getRemaining(value)),2),remaining=_React$useState4[0],setRemaining=_React$useState4[1];react.useEffect((function(){return setRemaining(getRemaining(value))}),[getRemaining,value]),react.useEffect((function(){return setErrors(errorsProp)}),[errorsProp]),react.useEffect((function(){onCount&&onCount(remaining)}),[onCount,remaining]);var isValid=react.useMemo((function(){return Boolean(!errors||0===errors.length)}),[errors]),createFieldAddons=function createFieldAddons(addons){return addons?react.Children.map(addons,(function(child){return react.isValidElement(child)&&child.type===react.Fragment?createFieldAddons(child.props.children):(0,jsx_runtime.jsx)(Field.FieldAddon,{className:addonClass,children:child})})):null},Counter=react.useMemo((function(){return counter&&void 0!==maxLength&&void 0!==remaining&&void 0!==counterStart&&remaining<=counterStart?(0,jsx_runtime.jsx)("div",{className:counterClass,children:counter({remaining:remaining,max:maxLength})}):null}),[counter,counterClass,counterStart,maxLength,remaining]),indicator=react.useMemo((function(){return requiredIndicator&&required?"required":optionalIndicator&&!required?"optional":null}),[requiredIndicator,optionalIndicator,required]),sharedProps=Object.assign({ref:ref,value:value,errors:errors,onChange:function changeHandler(e){onChange?onChange(e):setRemaining(getRemaining(e.target.value))},onDOMChange:onDOMChange,onValidate:function validateHandler(e){onValidate&&onValidate(e),setErrors(e)},id:inputId,className:inputClass,"aria-describedby":description?descId:void 0,"aria-invalid":!isValid,"aria-errormessage":isValid?void 0:errId,maxLength:maxLength,required:required,validators:validators,validateOnChange:validateOnChange,validateOnDOMChange:validateOnDOMChange},inputProps);return(0,jsx_runtime.jsxs)("div",{className:classnames_default()(className,(_classNames={},_classNames[invalidClass]=!isValid,_classNames)),id:idProp,children:[(0,jsx_runtime.jsx)(Field.FieldInfo,{htmlFor:inputId,label:children,indicator:indicator,labelId:labelId,labelClass:labelClass,descriptionClass:descriptionClass,descriptionId:descId,description:description}),(0,jsx_runtime.jsx)("div",{className:multiline?"":groupClass,children:multiline?(0,jsx_runtime.jsx)(BaseTextArea,Object.assign({},sharedProps,{className:classnames_default()(groupClass,inputClass),multiline:multiline,autoSize:autoSize})):(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[createFieldAddons(addonBefore),(0,jsx_runtime.jsx)(BaseInput.Q,Object.assign({},sharedProps,{type:type})),createFieldAddons(addonAfter)]})}),(0,jsx_runtime.jsxs)(Field.FieldFeedback,{className:feedbackClass,errorsId:errId,errors:errors,errorsClass:errorsClass,children:[feedback,Counter]})]})})),TextFieldUncontrolled=function TextFieldUncontrolled(props){var _React$useState6=TextField_slicedToArray(react.useState(""),2),value=_React$useState6[0],setValue=_React$useState6[1];return(0,jsx_runtime.jsx)(TextField,Object.assign({value:value,onChange:function onChange(e){setValue(e.target.value);var onChange=props.onChange;onChange&&onChange(e)}},props))};TextFieldUncontrolled.displayName="TextFieldUncontrolled";try{TextField.displayName="TextField",TextField.__docgenInfo={description:"",displayName:"TextField",props:{type:{defaultValue:{value:"defaultProps.type"},description:"Text fields can be a limited subset of `<input>` types.\n[DOM - `type`](https://html.spec.whatwg.org/multipage/input.html#attr-input-type)",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"text"'},{value:'"search"'},{value:'"tel"'},{value:'"url"'},{value:'"email"'},{value:'"password"'}]}},addonBefore:{defaultValue:null,description:"One or more addon that should be included before the `<input>`.",name:"addonBefore",required:!1,type:{name:"ReactNode"}},addonAfter:{defaultValue:null,description:"One or more addon that should be included after the `<input>`.",name:"addonAfter",required:!1,type:{name:"ReactNode"}},feedback:{defaultValue:null,description:"Feedback about the user's current input value. By default, this will\ncontain validation errors and the counter, if `maxLength` is specified.",name:"feedback",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>> | undefined"}},counterStart:{defaultValue:{value:"defaultProps.counterStart"},description:"When the character counter should begin showing.",name:"counterStart",required:!1,type:{name:"number | undefined"}},counter:{defaultValue:{value:"defaultProps.counter"},description:"A function that takes the remaining number of characters and the maximum\nnumber of characters and returns the string or element that will be\nrendered in the character counter slot.",name:"counter",required:!1,type:{name:"false | (({ remaining, max }: { remaining: number; max: number; }) => ReactNode) | undefined"}},baseName:{defaultValue:{value:"nds-field"},description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},inputClass:{defaultValue:{value:"classNames(`${baseName}__${multiline ? 'textarea' : 'input'}`, `${baseName}__${multiline ? 'textarea' : 'input'}--text`)"},description:"The className for the TextField's `<input>` element.",name:"inputClass",required:!1,type:{name:"string | undefined"}},addonClass:{defaultValue:{value:"`${baseName}__addon`"},description:"The className for all of the addons (before and after).",name:"addonClass",required:!1,type:{name:"string | undefined"}},groupClass:{defaultValue:{value:"classNames(`${baseName}__group${multiline ? '--textarea' : ''}`, `${baseName}__group--text`)"},description:"The className for the wrapper that contains the `<input>` & addons.",name:"groupClass",required:!1,type:{name:"string | undefined"}},feedbackClass:{defaultValue:null,description:"The className for the TextField's feedback section, which contains the\nerror text and character count.",name:"feedbackClass",required:!1,type:{name:"string | undefined"}},counterClass:{defaultValue:{value:"`${baseName}__counter`"},description:"The className for the TextField's character counter element.",name:"counterClass",required:!1,type:{name:"string | undefined"}},invalidClass:{defaultValue:{value:"`${baseName}--invalid`"},description:"A className that will be applied to the base element when the `<input>`\nis invalid.",name:"invalidClass",required:!1,type:{name:"string | undefined"}},inputRef:{defaultValue:null,description:"A reference to the internal `<input>` element.",name:"inputRef",required:!1,type:{name:"Ref<HTMLInputElement | HTMLTextAreaElement> | undefined"}},requiredIndicator:{defaultValue:null,description:'Indicates that the indicator should be "required" when `required=true`.',name:"requiredIndicator",required:!1,type:{name:"boolean | undefined"}},optionalIndicator:{defaultValue:null,description:'Indicates that the indicator should be "optional" when `required=false`.',name:"optionalIndicator",required:!1,type:{name:"boolean | undefined"}},onCount:{defaultValue:null,description:"Triggered any time the number of characters remaining is updated.",name:"onCount",required:!1,type:{name:"((remaining?: number | undefined) => void) | undefined"}},multiline:{defaultValue:{value:"false"},description:"Allow for multiple lines of input",name:"multiline",required:!1,type:{name:"number | boolean | undefined"}},autoSize:{defaultValue:{value:"false"},description:"If `true` increase the height of textarea automatically\nonly works when multiline prop it's `enable`",name:"autoSize",required:!1,type:{name:"boolean | undefined"}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:null,description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:null,description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.\nA list of validation errors. When the input is submitted in a form, the\nlist will be concatenated into a single string with a new line separator.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:null,description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}},validators:{defaultValue:null,description:"A list of validators. A validator contains a function that tests the value\nfor validity and a corresponding message that conveys why the test failed.",name:"validators",required:!1,type:{name:"ValidatorEntry[] | undefined"}},validateOnDOMChange:{defaultValue:null,description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean | undefined"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean | undefined"}},maxLengthRestrictsInput:{defaultValue:null,description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean | undefined"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"(((e: Event) => void) & ((e: Event) => void)) | undefined"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"(((errors: string[]) => void) & ((errors: string[]) => void)) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/TextField/TextField.tsx#TextField"]={docgenInfo:TextField.__docgenInfo,name:"TextField",path:"packages/react/src/components/TextField/TextField.tsx#TextField"})}catch(__react_docgen_typescript_loader_error){}try{TextFieldUncontrolled.displayName="TextFieldUncontrolled",TextFieldUncontrolled.__docgenInfo={description:"An uncontrolled variant of the `TextField` component. The `value` prop doesn't\nexist on this version, as it is managed internally. Use when the value does not\nneed to be controlled via React state, such as prototyping or when\nvalues are submitted with native APIs like\n[HTMLFormElement.submit()](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit).",displayName:"TextFieldUncontrolled",props:{baseName:{defaultValue:{value:"nds-field"},description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},counterStart:{defaultValue:{value:"defaultProps.counterStart"},description:"When the character counter should begin showing.",name:"counterStart",required:!1,type:{name:"number | undefined"}},type:{defaultValue:{value:"defaultProps.type"},description:"Text fields can be a limited subset of `<input>` types.\n[DOM - `type`](https://html.spec.whatwg.org/multipage/input.html#attr-input-type)",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"text"'},{value:'"search"'},{value:'"tel"'},{value:'"url"'},{value:'"email"'},{value:'"password"'}]}},addonBefore:{defaultValue:null,description:"One or more addon that should be included before the `<input>`.",name:"addonBefore",required:!1,type:{name:"ReactNode"}},addonAfter:{defaultValue:null,description:"One or more addon that should be included after the `<input>`.",name:"addonAfter",required:!1,type:{name:"ReactNode"}},feedback:{defaultValue:null,description:"Feedback about the user's current input value. By default, this will\ncontain validation errors and the counter, if `maxLength` is specified.",name:"feedback",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>> | undefined"}},counter:{defaultValue:{value:"defaultProps.counter"},description:"A function that takes the remaining number of characters and the maximum\nnumber of characters and returns the string or element that will be\nrendered in the character counter slot.",name:"counter",required:!1,type:{name:"false | (({ remaining, max }: { remaining: number; max: number; }) => ReactNode) | undefined"}},inputClass:{defaultValue:{value:"classNames(`${baseName}__${multiline ? 'textarea' : 'input'}`, `${baseName}__${multiline ? 'textarea' : 'input'}--text`)"},description:"The className for the TextField's `<input>` element.",name:"inputClass",required:!1,type:{name:"string | undefined"}},addonClass:{defaultValue:{value:"`${baseName}__addon`"},description:"The className for all of the addons (before and after).",name:"addonClass",required:!1,type:{name:"string | undefined"}},groupClass:{defaultValue:{value:"classNames(`${baseName}__group${multiline ? '--textarea' : ''}`, `${baseName}__group--text`)"},description:"The className for the wrapper that contains the `<input>` & addons.",name:"groupClass",required:!1,type:{name:"string | undefined"}},feedbackClass:{defaultValue:null,description:"The className for the TextField's feedback section, which contains the\nerror text and character count.",name:"feedbackClass",required:!1,type:{name:"string | undefined"}},counterClass:{defaultValue:{value:"`${baseName}__counter`"},description:"The className for the TextField's character counter element.",name:"counterClass",required:!1,type:{name:"string | undefined"}},invalidClass:{defaultValue:{value:"`${baseName}--invalid`"},description:"A className that will be applied to the base element when the `<input>`\nis invalid.",name:"invalidClass",required:!1,type:{name:"string | undefined"}},inputRef:{defaultValue:null,description:"A reference to the internal `<input>` element.",name:"inputRef",required:!1,type:{name:"Ref<HTMLInputElement | HTMLTextAreaElement> | undefined"}},requiredIndicator:{defaultValue:null,description:'Indicates that the indicator should be "required" when `required=true`.',name:"requiredIndicator",required:!1,type:{name:"boolean | undefined"}},optionalIndicator:{defaultValue:null,description:'Indicates that the indicator should be "optional" when `required=false`.',name:"optionalIndicator",required:!1,type:{name:"boolean | undefined"}},onCount:{defaultValue:null,description:"Triggered any time the number of characters remaining is updated.",name:"onCount",required:!1,type:{name:"((remaining?: number | undefined) => void) | undefined"}},multiline:{defaultValue:{value:"false"},description:"Allow for multiple lines of input",name:"multiline",required:!1,type:{name:"number | boolean | undefined"}},autoSize:{defaultValue:{value:"false"},description:"If `true` increase the height of textarea automatically\nonly works when multiline prop it's `enable`",name:"autoSize",required:!1,type:{name:"boolean | undefined"}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:null,description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:null,description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.\nA list of validation errors. When the input is submitted in a form, the\nlist will be concatenated into a single string with a new line separator.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:null,description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}},validators:{defaultValue:null,description:"A list of validators. A validator contains a function that tests the value\nfor validity and a corresponding message that conveys why the test failed.",name:"validators",required:!1,type:{name:"ValidatorEntry[] | undefined"}},validateOnDOMChange:{defaultValue:null,description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean | undefined"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean | undefined"}},maxLengthRestrictsInput:{defaultValue:null,description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean | undefined"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"(((e: Event) => void) & ((e: Event) => void)) | undefined"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"(((errors: string[]) => void) & ((errors: string[]) => void)) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/TextField/TextField.tsx#TextFieldUncontrolled"]={docgenInfo:TextFieldUncontrolled.__docgenInfo,name:"TextFieldUncontrolled",path:"packages/react/src/components/TextField/TextField.tsx#TextFieldUncontrolled"})}catch(__react_docgen_typescript_loader_error){}}}]);