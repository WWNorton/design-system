(self.webpackChunkwwnds=self.webpackChunkwwnds||[]).push([[852],{"./packages/react/src/components/Popover/index.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},FullyControlled:function(){return FullyControlled},WithReference:function(){return WithReference},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js");var react__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./packages/react/src/components/Popover/index.ts"),_Button__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./packages/react/src/components/Button/index.ts"),_Link__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./packages/react/src/components/Link/index.ts"),_TextField__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__("./packages/react/src/components/TextField/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["isOpen"];function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}__webpack_exports__.default={title:"Popover",component:___WEBPACK_IMPORTED_MODULE_16__.J,parameters:{layout:"padded"},argTypes:{isOpen:{control:{type:"boolean"}},hideTitle:{control:{type:"boolean"}},hideCloseButton:{control:{type:"boolean"}},distance:{control:{type:"range",min:0,max:20,step:1}}}};var PopoverTemplate=function PopoverTemplate(_ref){var isOpenProp=_ref.isOpen,args=_objectWithoutProperties(_ref,_excluded),_React$useState2=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_15__.useState(isOpenProp),2),isOpen=_React$useState2[0],setOpen=_React$useState2[1];return react__WEBPACK_IMPORTED_MODULE_15__.useEffect((function(){return setOpen(isOpenProp)}),[isOpenProp]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(___WEBPACK_IMPORTED_MODULE_16__.J,Object.assign({},args,{isOpen:isOpen,onRequestClose:function onRequestClose(){return setOpen(!1)}}))};PopoverTemplate.displayName="PopoverTemplate";var Default=PopoverTemplate.bind({});Default.args={isOpen:!0,title:"Default popover",placement:"bottom-start",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco."})};var WithReference=function WithReference(args){var _React$useState4=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_15__.useState(!1),2),isOpen=_React$useState4[0],setIsOpen=_React$useState4[1],_React$useState6=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_15__.useState(),2),ref=_React$useState6[0],setRef=_React$useState6[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_17__.z,{variant:"solid",ref:setRef,children:"Show popover"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(___WEBPACK_IMPORTED_MODULE_16__.J,Object.assign({reference:ref,isOpen:isOpen,onRequestClose:function onRequestClose(){return setIsOpen(!1)},onRequestOpen:function onRequestOpen(){return setIsOpen(!0)}},args,{children:["Popovers are dialogs that are related to another element, which we call the “reference” element. This—along with the fact that they do not change the mode of input when opened— distinguish them from the"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_Link__WEBPACK_IMPORTED_MODULE_18__.Link,{href:"./?path=/story/modal--default",children:"Modal component"}),", which is a modal dialog without a reference."]}))]})};WithReference.args={title:"Popover with a reference button",hideTitle:!1,hideCloseButton:!0,placement:"bottom-start",distance:8};var FullyControlled=function FullyControlled(args){var _React$useState8=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_15__.useState(),2),ref=_React$useState8[0],setRef=_React$useState8[1],_React$useState10=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_15__.useState("Change this button's text"),2),buttonText=_React$useState10[0],setButtonText=_React$useState10[1],_React$useState12=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_15__.useState(buttonText),2),inputText=_React$useState12[0],setInputText=_React$useState12[1],_React$useState14=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_15__.useState(null),2),input=_React$useState14[0],setInput=_React$useState14[1],_React$useState16=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_15__.useState(!1),2),isOpen=_React$useState16[0],setOpen=_React$useState16[1],close=function close(trigger){"click.reference"!==trigger&&setOpen(!1)};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_17__.z,{variant:"solid",ref:setRef,onClick:function toggle(t){return isOpen?close(t):function open(){setInputText(buttonText),setOpen(!0)}()},children:buttonText}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(___WEBPACK_IMPORTED_MODULE_16__.J,Object.assign({"aria-labelledby":"change-btn",reference:ref,isOpen:isOpen,onRequestClose:close,onOpen:function onOpen(){return input&&input.focus()},actions:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_17__.z,{variant:"outline",onClick:close,children:"Cancel"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_17__.z,{variant:"solid",type:"submit",form:"demo-form",children:"Submit"})]})},args,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)("form",{id:"demo-form",onSubmit:function submit(e){e.preventDefault(),setButtonText(inputText),close("submit")},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_TextField__WEBPACK_IMPORTED_MODULE_19__.n,{labelId:"change-btn",required:!0,value:inputText,ref:setInput,onChange:function handleChange(e){input&&setInputText(e.target.value)},children:"Button text"})})}))]})};FullyControlled.args={placement:"bottom-start",hideCloseButton:!0},Default.parameters=Object.assign({storySource:{source:"({ isOpen: isOpenProp, ...args }: PopoverProps) => {\n\tconst [isOpen, setOpen] = React.useState(isOpenProp);\n\tReact.useEffect(() => setOpen(isOpenProp), [isOpenProp]);\n\n\treturn <Popover {...args} isOpen={isOpen} onRequestClose={() => setOpen(false)} />;\n}"}},Default.parameters),WithReference.parameters=Object.assign({storySource:{source:'(args: PopoverProps) => {\n\tconst [isOpen, setIsOpen] = React.useState(false);\n\tconst [ref, setRef] = React.useState<HTMLButtonElement | null>();\n\n\treturn (\n\t\t<>\n\t\t\t<Button variant="solid" ref={setRef}>\n\t\t\t\tShow popover\n\t\t\t</Button>\n\t\t\t<Popover\n\t\t\t\treference={ref}\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tonRequestClose={() => setIsOpen(false)}\n\t\t\t\tonRequestOpen={() => setIsOpen(true)}\n\t\t\t\t{...args}\n\t\t\t>\n\t\t\t\tPopovers are dialogs that are related to another element, which we call the\n\t\t\t\t&ldquo;reference&rdquo; element. This&mdash;along with the fact that they\n\t\t\t\tdo not change the mode of input when opened&mdash; distinguish them from the\n\t\t\t\t{\' \'}\n\t\t\t\t<Link href="./?path=/story/modal--default">Modal component</Link>\n\t\t\t\t, which is a modal dialog without a reference.\n\t\t\t</Popover>\n\t\t</>\n\t);\n}'}},WithReference.parameters),FullyControlled.parameters=Object.assign({storySource:{source:'(args: PopoverProps) => {\n\tconst [ref, setRef] = React.useState<HTMLButtonElement | null>();\n\tconst [buttonText, setButtonText] = React.useState(\'Change this button\\\'s text\');\n\tconst [inputText, setInputText] = React.useState(buttonText);\n\tconst [input, setInput] = React.useState<HTMLInputElement | null>(null);\n\tconst [isOpen, setOpen] = React.useState(false);\n\n\tconst open = (): void => {\n\t\tsetInputText(buttonText);\n\t\tsetOpen(true);\n\t};\n\tconst close = (trigger) => {\n\t\t// don\'t close on reference clicks since we\'re using our own onClick callback\n\t\tif (trigger !== \'click.reference\') setOpen(false);\n\t};\n\tconst toggle = (t) => ((isOpen) ? close(t) : open());\n\n\tconst handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n\t\tif (input) setInputText(e.target.value);\n\t};\n\tconst submit = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tsetButtonText(inputText);\n\t\tclose(\'submit\');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button variant="solid" ref={setRef} onClick={toggle}>\n\t\t\t\t{ buttonText }\n\t\t\t</Button>\n\t\t\t<Popover\n\t\t\t\taria-labelledby="change-btn"\n\t\t\t\treference={ref}\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tonRequestClose={close}\n\t\t\t\tonOpen={() => input && input.focus()}\n\t\t\t\tactions={(\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button variant="outline" onClick={close}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant="solid" type="submit" form="demo-form">\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{...args}\n\t\t\t>\n\t\t\t\t<form id="demo-form" onSubmit={submit}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabelId="change-btn"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tvalue={inputText}\n\t\t\t\t\t\tref={setInput}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\tButton text\n\t\t\t\t\t</TextField>\n\t\t\t\t</form>\n\t\t\t</Popover>\n\t\t</>\n\t);\n}'}},FullyControlled.parameters);var __namedExportsOrder=["Default","WithReference","FullyControlled"];try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{title:{defaultValue:null,description:"The name of the Modal dialog. Required for accessibility but can be\nvisually hidden with the `hideTitle` prop.",name:"title",required:!1,type:{name:"string | undefined"}},hideTitle:{defaultValue:null,description:"Indicates that the title should be visually hidden. It will still be\naccessible to screen reader users.",name:"hideTitle",required:!1,type:{name:"boolean | undefined"}},hideCloseButton:{defaultValue:null,description:"Indicates that the built-in close button in the top right should not be\nrendered.",name:"hideCloseButton",required:!1,type:{name:"boolean | undefined"}},actions:{defaultValue:null,description:"A list of actions or React Fragment that will be set inside an action bar\nat the bottom of the Modal dialog.",name:"actions",required:!1,type:{name:"ReactFragment | ReactElement<ButtonProps, string | JSXElementConstructor<any>>[] | undefined"}},baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},headerClass:{defaultValue:null,description:"A className for the popover's header. Default will be `${baseName}__header`.",name:"headerClass",required:!1,type:{name:"string | undefined"}},titleClass:{defaultValue:null,description:"A className for the popover's title, which goes inside the header.\nDefault will be `${baseName}__title`.",name:"titleClass",required:!1,type:{name:"string | undefined"}},closeButtonClass:{defaultValue:null,description:"A className for the popover's close button, which goes inside the header.\nDefault will be `${baseName}__close`.",name:"closeButtonClass",required:!1,type:{name:"string | undefined"}},bodyClass:{defaultValue:null,description:"A className for the body of the popover, where the `children` go.\nDefault will be `${baseName}__content`.",name:"bodyClass",required:!1,type:{name:"string | undefined"}},actionBarClass:{defaultValue:null,description:"A className for the popover's action bar footer. Default will be `${baseName}__actionbar`.",name:"actionBarClass",required:!1,type:{name:"string | undefined"}},arrowClass:{defaultValue:null,description:"A className for the popover's arrow. Default will be `${baseName}__arrow`.\n@deprecated - Use `arrowElement`.",name:"arrowClass",required:!1,type:{name:"string | undefined"}},onOpen:{defaultValue:null,description:"Callback function that is called after the popover opens. The default\nfunction will focus the popover. Use this callback to focus something\nelse inside the popover.",name:"onOpen",required:!1,type:{name:"((popoverElement: HTMLElement) => void) | undefined"}},onClose:{defaultValue:null,description:"Callback function that is called after the popover closes. The default\nfunction will focus the reference element that opened the popover.",name:"onClose",required:!1,type:{name:"((shouldFocusReference: boolean) => void) | undefined"}},isOpen:{defaultValue:null,description:"Used to control whether the popper is open or closed.",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},transition:{defaultValue:null,description:"The animation transition class applied to the popper as it enters or exits.\nA single name can be provided and it will be suffixed for each stage.\n\nFor example, `transition=\"fade\"` applies:\n\n- `fade-enter`\n- `fade-enter-active`\n- `fade-exit`\n- `fade-exit-active`\n- `fade-appear`\n- `fade-appear-active`\n\nEach individual stage can also be specified independently:\n\n```js\ntransition={{\n\tappear: 'my-appear',\n\tappearActive: 'my-appear-active',\n\tappearDone: 'my-appear-done',\n\tenter: 'my-enter',\n\tenterActive: 'my-enter-active',\n\tenterDone: 'my-enter-done',\n\texit: 'my-exit',\n\texitActive: 'my-exit-active',\n\texitDone: 'my-exit-done'\n}}\n```\n\nReference: [react-transition-group's CSSTransition](http://reactcommunity.org/react-transition-group/css-transition).",name:"transition",required:!1,type:{name:"string | CSSTransitionClassNames | undefined"}},reference:{defaultValue:null,description:"The reference element that the popper will be attached to.\n\n[Popper.js - `createPopper`](https://popper.js.org/docs/v2/constructors/#createpopper)",name:"reference",required:!1,type:{name:"Element | VirtualElement | null | undefined"}},arrowElement:{defaultValue:null,description:"The element that should be used for the arrow.\n\nSee the [`arrow` modifier's `element` option](https://popper.js.org/docs/v2/modifiers/arrow/#element)\nfor more details.",name:"arrowElement",required:!1,type:{name:"string | HTMLElement | null | undefined"}},distance:{defaultValue:null,description:"The [offset distance](https://popper.js.org/docs/v2/modifiers/offset/#distance-1)\n(in pixels) from the reference. Will only be used if `offset` is undefined.",name:"distance",required:!1,type:{name:"number | undefined"}},boundary:{defaultValue:null,description:"The element or area where the popper will be checked against for overflow.\n\nSee the [`preventOverflow` modifier's `boundary` option](https://popper.js.org/docs/v2/modifiers/prevent-overflow/#boundary)\nfor more details.",name:"boundary",required:!1,type:{name:"Boundary | undefined"}},placement:{defaultValue:null,description:"The [Popper.js placement option](https://popper.js.org/docs/v2/constructors/#placement).",name:"placement",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"auto"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},modifiers:{defaultValue:null,description:"The [Popper.js modifiers option](https://popper.js.org/docs/v2/constructors/#modifiers).",name:"modifiers",required:!1,type:{name:"Partial<Modifier<any, any>>[] | undefined"}},strategy:{defaultValue:null,description:"The [Popper.js strategy option](https://popper.js.org/docs/v2/constructors/#strategy).",name:"strategy",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"absolute"'},{value:'"fixed"'}]}},onFirstUpdate:{defaultValue:null,description:"The [Popper.js onFirstUpdate option](https://popper.js.org/docs/v2/constructors/#onFirstUpdate).",name:"onFirstUpdate",required:!1,type:{name:"((arg0: Partial<State>) => void) | undefined"}},hideDelay:{defaultValue:null,description:"The duration in milliseconds that should elapse before closing, beginning\nafter the pointer exits the reference's bounding box. Only has an effect\nfor the `mouseenter` or `pointerenter` triggers.",name:"hideDelay",required:!1,type:{name:"number | undefined"}},showDelay:{defaultValue:null,description:"The duration in milliseconds that should elapse before opening, beginning\nafter `isOpen` is set to `true`.",name:"showDelay",required:!1,type:{name:"number | undefined"}},onRequestOpen:{defaultValue:null,description:'A callback that occurs when the popper wants to open. The reason it is\nmaking this request is given by the first parameter.\n- `"click.reference"` - the reference element was clicked.\n- `"focus"` - the reference was focused.\nSee [focus event](https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event).\n- `"focusin"` - the reference is about to be focused.\nSee [focusin event](https://developer.mozilla.org/en-US/docs/Web/API/Element/focusin_event).\n- `"pointerenter"` - a pointer (mouse or touch) entered the bounding box of the reference.\nSee [pointerenter event](https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event).',name:"onRequestOpen",required:!1,type:{name:"((triggeredBy: PopperTriggersOpen) => void) | undefined"}},onRequestClose:{defaultValue:null,description:'A callback that occurs when the popper wants to close. The reason it is\nmaking this request is given by the first parameter.\n- `"click.reference"` - the reference element was clicked.\n- `"click.internal"` - something inside the popper was clicked.\n- `"click.external"` - something outside the popper or reference was clicked.\n- `"escape"` - the Escape key was pressed.\n- `"blur"` - the reference element lost focus.\nSee [blur event](https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event).\n- `"pointerleave"` - a pointer (mouse or touch) left the bounding box of the reference.\nSee [pointerenter event](https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event).',name:"onRequestClose",required:!1,type:{name:"((triggeredBy: PopperTriggersClose) => void) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Popover/index.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"packages/react/src/components/Popover/index.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}try{WithReference.displayName="WithReference",WithReference.__docgenInfo={description:"This example demos the minimal setup with a reference element.\n- The triggering element must use a callback ref, which is bound to the\n  Popover's `reference` prop. This lets the popover know where to position.\n- Requests to open and close are used to update the `isOpen` state.",displayName:"WithReference",props:{title:{defaultValue:null,description:"The name of the Modal dialog. Required for accessibility but can be\nvisually hidden with the `hideTitle` prop.",name:"title",required:!1,type:{name:"string | undefined"}},hideTitle:{defaultValue:null,description:"Indicates that the title should be visually hidden. It will still be\naccessible to screen reader users.",name:"hideTitle",required:!1,type:{name:"boolean | undefined"}},hideCloseButton:{defaultValue:null,description:"Indicates that the built-in close button in the top right should not be\nrendered.",name:"hideCloseButton",required:!1,type:{name:"boolean | undefined"}},actions:{defaultValue:null,description:"A list of actions or React Fragment that will be set inside an action bar\nat the bottom of the Modal dialog.",name:"actions",required:!1,type:{name:"ReactFragment | ReactElement<ButtonProps, string | JSXElementConstructor<any>>[] | undefined"}},baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},headerClass:{defaultValue:null,description:"A className for the popover's header. Default will be `${baseName}__header`.",name:"headerClass",required:!1,type:{name:"string | undefined"}},titleClass:{defaultValue:null,description:"A className for the popover's title, which goes inside the header.\nDefault will be `${baseName}__title`.",name:"titleClass",required:!1,type:{name:"string | undefined"}},closeButtonClass:{defaultValue:null,description:"A className for the popover's close button, which goes inside the header.\nDefault will be `${baseName}__close`.",name:"closeButtonClass",required:!1,type:{name:"string | undefined"}},bodyClass:{defaultValue:null,description:"A className for the body of the popover, where the `children` go.\nDefault will be `${baseName}__content`.",name:"bodyClass",required:!1,type:{name:"string | undefined"}},actionBarClass:{defaultValue:null,description:"A className for the popover's action bar footer. Default will be `${baseName}__actionbar`.",name:"actionBarClass",required:!1,type:{name:"string | undefined"}},arrowClass:{defaultValue:null,description:"A className for the popover's arrow. Default will be `${baseName}__arrow`.\n@deprecated - Use `arrowElement`.",name:"arrowClass",required:!1,type:{name:"string | undefined"}},onOpen:{defaultValue:null,description:"Callback function that is called after the popover opens. The default\nfunction will focus the popover. Use this callback to focus something\nelse inside the popover.",name:"onOpen",required:!1,type:{name:"((popoverElement: HTMLElement) => void) | undefined"}},onClose:{defaultValue:null,description:"Callback function that is called after the popover closes. The default\nfunction will focus the reference element that opened the popover.",name:"onClose",required:!1,type:{name:"((shouldFocusReference: boolean) => void) | undefined"}},isOpen:{defaultValue:null,description:"Used to control whether the popper is open or closed.",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},transition:{defaultValue:null,description:"The animation transition class applied to the popper as it enters or exits.\nA single name can be provided and it will be suffixed for each stage.\n\nFor example, `transition=\"fade\"` applies:\n\n- `fade-enter`\n- `fade-enter-active`\n- `fade-exit`\n- `fade-exit-active`\n- `fade-appear`\n- `fade-appear-active`\n\nEach individual stage can also be specified independently:\n\n```js\ntransition={{\n\tappear: 'my-appear',\n\tappearActive: 'my-appear-active',\n\tappearDone: 'my-appear-done',\n\tenter: 'my-enter',\n\tenterActive: 'my-enter-active',\n\tenterDone: 'my-enter-done',\n\texit: 'my-exit',\n\texitActive: 'my-exit-active',\n\texitDone: 'my-exit-done'\n}}\n```\n\nReference: [react-transition-group's CSSTransition](http://reactcommunity.org/react-transition-group/css-transition).",name:"transition",required:!1,type:{name:"string | CSSTransitionClassNames | undefined"}},reference:{defaultValue:null,description:"The reference element that the popper will be attached to.\n\n[Popper.js - `createPopper`](https://popper.js.org/docs/v2/constructors/#createpopper)",name:"reference",required:!1,type:{name:"Element | VirtualElement | null | undefined"}},arrowElement:{defaultValue:null,description:"The element that should be used for the arrow.\n\nSee the [`arrow` modifier's `element` option](https://popper.js.org/docs/v2/modifiers/arrow/#element)\nfor more details.",name:"arrowElement",required:!1,type:{name:"string | HTMLElement | null | undefined"}},distance:{defaultValue:null,description:"The [offset distance](https://popper.js.org/docs/v2/modifiers/offset/#distance-1)\n(in pixels) from the reference. Will only be used if `offset` is undefined.",name:"distance",required:!1,type:{name:"number | undefined"}},boundary:{defaultValue:null,description:"The element or area where the popper will be checked against for overflow.\n\nSee the [`preventOverflow` modifier's `boundary` option](https://popper.js.org/docs/v2/modifiers/prevent-overflow/#boundary)\nfor more details.",name:"boundary",required:!1,type:{name:"Boundary | undefined"}},placement:{defaultValue:null,description:"The [Popper.js placement option](https://popper.js.org/docs/v2/constructors/#placement).",name:"placement",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"auto"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},modifiers:{defaultValue:null,description:"The [Popper.js modifiers option](https://popper.js.org/docs/v2/constructors/#modifiers).",name:"modifiers",required:!1,type:{name:"Partial<Modifier<any, any>>[] | undefined"}},strategy:{defaultValue:null,description:"The [Popper.js strategy option](https://popper.js.org/docs/v2/constructors/#strategy).",name:"strategy",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"absolute"'},{value:'"fixed"'}]}},onFirstUpdate:{defaultValue:null,description:"The [Popper.js onFirstUpdate option](https://popper.js.org/docs/v2/constructors/#onFirstUpdate).",name:"onFirstUpdate",required:!1,type:{name:"((arg0: Partial<State>) => void) | undefined"}},hideDelay:{defaultValue:null,description:"The duration in milliseconds that should elapse before closing, beginning\nafter the pointer exits the reference's bounding box. Only has an effect\nfor the `mouseenter` or `pointerenter` triggers.",name:"hideDelay",required:!1,type:{name:"number | undefined"}},showDelay:{defaultValue:null,description:"The duration in milliseconds that should elapse before opening, beginning\nafter `isOpen` is set to `true`.",name:"showDelay",required:!1,type:{name:"number | undefined"}},onRequestOpen:{defaultValue:null,description:'A callback that occurs when the popper wants to open. The reason it is\nmaking this request is given by the first parameter.\n- `"click.reference"` - the reference element was clicked.\n- `"focus"` - the reference was focused.\nSee [focus event](https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event).\n- `"focusin"` - the reference is about to be focused.\nSee [focusin event](https://developer.mozilla.org/en-US/docs/Web/API/Element/focusin_event).\n- `"pointerenter"` - a pointer (mouse or touch) entered the bounding box of the reference.\nSee [pointerenter event](https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event).',name:"onRequestOpen",required:!1,type:{name:"((triggeredBy: PopperTriggersOpen) => void) | undefined"}},onRequestClose:{defaultValue:null,description:'A callback that occurs when the popper wants to close. The reason it is\nmaking this request is given by the first parameter.\n- `"click.reference"` - the reference element was clicked.\n- `"click.internal"` - something inside the popper was clicked.\n- `"click.external"` - something outside the popper or reference was clicked.\n- `"escape"` - the Escape key was pressed.\n- `"blur"` - the reference element lost focus.\nSee [blur event](https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event).\n- `"pointerleave"` - a pointer (mouse or touch) left the bounding box of the reference.\nSee [pointerenter event](https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event).',name:"onRequestClose",required:!1,type:{name:"((triggeredBy: PopperTriggersClose) => void) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Popover/index.stories.tsx#WithReference"]={docgenInfo:WithReference.__docgenInfo,name:"WithReference",path:"packages/react/src/components/Popover/index.stories.tsx#WithReference"})}catch(__react_docgen_typescript_loader_error){}try{FullyControlled.displayName="FullyControlled",FullyControlled.__docgenInfo={description:"This example demos how to fully control the state of a Popover.\nThe following features are related to the Popover API:\n- The Popover is labelled by the text field's label, so it doesn't need a `title`.\n- The input is focused on open, overriding the default `onOpen` callback, which\n  focuses the popover dialog itself.\n- Opening is triggered by setting an `onClick` callback on the reference button\n  so `onRequestOpen` is not used.\n\nThe following features are unrelated to Popover but are good practice:\n- the submit button ([type=submit]) is external to the form so it uses the `form`\n  attribute to associate itself with the form element. this causes the button\n  to trigger the form's `onSubmit` action on click, which is why there is no\n  onClick callback.\n- a text field contained by a form will trigger the onSubmit action on Enter",displayName:"FullyControlled",props:{title:{defaultValue:null,description:"The name of the Modal dialog. Required for accessibility but can be\nvisually hidden with the `hideTitle` prop.",name:"title",required:!1,type:{name:"string | undefined"}},hideTitle:{defaultValue:null,description:"Indicates that the title should be visually hidden. It will still be\naccessible to screen reader users.",name:"hideTitle",required:!1,type:{name:"boolean | undefined"}},hideCloseButton:{defaultValue:null,description:"Indicates that the built-in close button in the top right should not be\nrendered.",name:"hideCloseButton",required:!1,type:{name:"boolean | undefined"}},actions:{defaultValue:null,description:"A list of actions or React Fragment that will be set inside an action bar\nat the bottom of the Modal dialog.",name:"actions",required:!1,type:{name:"ReactFragment | ReactElement<ButtonProps, string | JSXElementConstructor<any>>[] | undefined"}},baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},headerClass:{defaultValue:null,description:"A className for the popover's header. Default will be `${baseName}__header`.",name:"headerClass",required:!1,type:{name:"string | undefined"}},titleClass:{defaultValue:null,description:"A className for the popover's title, which goes inside the header.\nDefault will be `${baseName}__title`.",name:"titleClass",required:!1,type:{name:"string | undefined"}},closeButtonClass:{defaultValue:null,description:"A className for the popover's close button, which goes inside the header.\nDefault will be `${baseName}__close`.",name:"closeButtonClass",required:!1,type:{name:"string | undefined"}},bodyClass:{defaultValue:null,description:"A className for the body of the popover, where the `children` go.\nDefault will be `${baseName}__content`.",name:"bodyClass",required:!1,type:{name:"string | undefined"}},actionBarClass:{defaultValue:null,description:"A className for the popover's action bar footer. Default will be `${baseName}__actionbar`.",name:"actionBarClass",required:!1,type:{name:"string | undefined"}},arrowClass:{defaultValue:null,description:"A className for the popover's arrow. Default will be `${baseName}__arrow`.\n@deprecated - Use `arrowElement`.",name:"arrowClass",required:!1,type:{name:"string | undefined"}},onOpen:{defaultValue:null,description:"Callback function that is called after the popover opens. The default\nfunction will focus the popover. Use this callback to focus something\nelse inside the popover.",name:"onOpen",required:!1,type:{name:"((popoverElement: HTMLElement) => void) | undefined"}},onClose:{defaultValue:null,description:"Callback function that is called after the popover closes. The default\nfunction will focus the reference element that opened the popover.",name:"onClose",required:!1,type:{name:"((shouldFocusReference: boolean) => void) | undefined"}},isOpen:{defaultValue:null,description:"Used to control whether the popper is open or closed.",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},transition:{defaultValue:null,description:"The animation transition class applied to the popper as it enters or exits.\nA single name can be provided and it will be suffixed for each stage.\n\nFor example, `transition=\"fade\"` applies:\n\n- `fade-enter`\n- `fade-enter-active`\n- `fade-exit`\n- `fade-exit-active`\n- `fade-appear`\n- `fade-appear-active`\n\nEach individual stage can also be specified independently:\n\n```js\ntransition={{\n\tappear: 'my-appear',\n\tappearActive: 'my-appear-active',\n\tappearDone: 'my-appear-done',\n\tenter: 'my-enter',\n\tenterActive: 'my-enter-active',\n\tenterDone: 'my-enter-done',\n\texit: 'my-exit',\n\texitActive: 'my-exit-active',\n\texitDone: 'my-exit-done'\n}}\n```\n\nReference: [react-transition-group's CSSTransition](http://reactcommunity.org/react-transition-group/css-transition).",name:"transition",required:!1,type:{name:"string | CSSTransitionClassNames | undefined"}},reference:{defaultValue:null,description:"The reference element that the popper will be attached to.\n\n[Popper.js - `createPopper`](https://popper.js.org/docs/v2/constructors/#createpopper)",name:"reference",required:!1,type:{name:"Element | VirtualElement | null | undefined"}},arrowElement:{defaultValue:null,description:"The element that should be used for the arrow.\n\nSee the [`arrow` modifier's `element` option](https://popper.js.org/docs/v2/modifiers/arrow/#element)\nfor more details.",name:"arrowElement",required:!1,type:{name:"string | HTMLElement | null | undefined"}},distance:{defaultValue:null,description:"The [offset distance](https://popper.js.org/docs/v2/modifiers/offset/#distance-1)\n(in pixels) from the reference. Will only be used if `offset` is undefined.",name:"distance",required:!1,type:{name:"number | undefined"}},boundary:{defaultValue:null,description:"The element or area where the popper will be checked against for overflow.\n\nSee the [`preventOverflow` modifier's `boundary` option](https://popper.js.org/docs/v2/modifiers/prevent-overflow/#boundary)\nfor more details.",name:"boundary",required:!1,type:{name:"Boundary | undefined"}},placement:{defaultValue:null,description:"The [Popper.js placement option](https://popper.js.org/docs/v2/constructors/#placement).",name:"placement",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"auto"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},modifiers:{defaultValue:null,description:"The [Popper.js modifiers option](https://popper.js.org/docs/v2/constructors/#modifiers).",name:"modifiers",required:!1,type:{name:"Partial<Modifier<any, any>>[] | undefined"}},strategy:{defaultValue:null,description:"The [Popper.js strategy option](https://popper.js.org/docs/v2/constructors/#strategy).",name:"strategy",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"absolute"'},{value:'"fixed"'}]}},onFirstUpdate:{defaultValue:null,description:"The [Popper.js onFirstUpdate option](https://popper.js.org/docs/v2/constructors/#onFirstUpdate).",name:"onFirstUpdate",required:!1,type:{name:"((arg0: Partial<State>) => void) | undefined"}},hideDelay:{defaultValue:null,description:"The duration in milliseconds that should elapse before closing, beginning\nafter the pointer exits the reference's bounding box. Only has an effect\nfor the `mouseenter` or `pointerenter` triggers.",name:"hideDelay",required:!1,type:{name:"number | undefined"}},showDelay:{defaultValue:null,description:"The duration in milliseconds that should elapse before opening, beginning\nafter `isOpen` is set to `true`.",name:"showDelay",required:!1,type:{name:"number | undefined"}},onRequestOpen:{defaultValue:null,description:'A callback that occurs when the popper wants to open. The reason it is\nmaking this request is given by the first parameter.\n- `"click.reference"` - the reference element was clicked.\n- `"focus"` - the reference was focused.\nSee [focus event](https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event).\n- `"focusin"` - the reference is about to be focused.\nSee [focusin event](https://developer.mozilla.org/en-US/docs/Web/API/Element/focusin_event).\n- `"pointerenter"` - a pointer (mouse or touch) entered the bounding box of the reference.\nSee [pointerenter event](https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event).',name:"onRequestOpen",required:!1,type:{name:"((triggeredBy: PopperTriggersOpen) => void) | undefined"}},onRequestClose:{defaultValue:null,description:'A callback that occurs when the popper wants to close. The reason it is\nmaking this request is given by the first parameter.\n- `"click.reference"` - the reference element was clicked.\n- `"click.internal"` - something inside the popper was clicked.\n- `"click.external"` - something outside the popper or reference was clicked.\n- `"escape"` - the Escape key was pressed.\n- `"blur"` - the reference element lost focus.\nSee [blur event](https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event).\n- `"pointerleave"` - a pointer (mouse or touch) left the bounding box of the reference.\nSee [pointerenter event](https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event).',name:"onRequestClose",required:!1,type:{name:"((triggeredBy: PopperTriggersClose) => void) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Popover/index.stories.tsx#FullyControlled"]={docgenInfo:FullyControlled.__docgenInfo,name:"FullyControlled",path:"packages/react/src/components/Popover/index.stories.tsx#FullyControlled"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/Link/Link.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{r:function(){return Link}});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/index.js"),_utilities_link__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/react/src/utilities/link/index.ts"),_Icon__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/react/src/components/Icon/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["external","children"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Link=react__WEBPACK_IMPORTED_MODULE_4__.forwardRef((function(props,ref){var LinkComponent=(0,_utilities_link__WEBPACK_IMPORTED_MODULE_5__.useLink)();if(LinkComponent)return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(LinkComponent,Object.assign({className:"nds-link",ref:ref},props));var _ref=props,external=_ref.external,children=_ref.children,linkProps=_objectWithoutProperties(_ref,_excluded);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("a",Object.assign({className:"nds-link",rel:external?"noopener noreferrer":void 0,target:external?"_blank":void 0,ref:ref},linkProps,{children:[children,external&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span",{className:"nds-link__launch",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_Icon__WEBPACK_IMPORTED_MODULE_6__.JO,{size:"1em",variant:"launch"})})]}))}));try{Link.displayName="Link",Link.__docgenInfo={description:"",displayName:"Link",props:{external:{defaultValue:null,description:"Indicates that the link should open in a new window or tab.",name:"external",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Link/Link.tsx#Link"]={docgenInfo:Link.__docgenInfo,name:"Link",path:"packages/react/src/components/Link/Link.tsx#Link"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/Link/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Link:function(){return _Link__WEBPACK_IMPORTED_MODULE_0__.r}});var _Link__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/react/src/components/Link/Link.tsx"),_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/react/src/components/Link/types.ts");__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_1__,"Listbox")&&__webpack_require__.d(__webpack_exports__,{Listbox:function(){return _types__WEBPACK_IMPORTED_MODULE_1__.Listbox}}),__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_1__,"Option")&&__webpack_require__.d(__webpack_exports__,{Option:function(){return _types__WEBPACK_IMPORTED_MODULE_1__.Option}})},"./packages/react/src/components/Link/types.ts":function(){},"./packages/react/src/components/Popover/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{J:function(){return Popover}});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),Button=__webpack_require__("./packages/react/src/components/Button/index.ts"),Popper=__webpack_require__("./packages/react/src/components/Popper/index.ts"),utilities=__webpack_require__("./packages/react/src/utilities/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["isOpen","transition","reference","arrowElement","distance","boundary","placement","modifiers","strategy","onFirstUpdate","hideDelay","showDelay","onRequestOpen","onRequestClose","title","hideTitle","hideCloseButton","actions","baseName","headerClass","titleClass","closeButtonClass","bodyClass","actionBarClass","arrowClass","onClose","onOpen","children","className","aria-labelledby","aria-label"];function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Popover=react.forwardRef((function(_ref,ref){var isOpen=_ref.isOpen,_ref$transition=_ref.transition,transition=void 0===_ref$transition?"fade":_ref$transition,reference=_ref.reference,arrowElement=_ref.arrowElement,distance=_ref.distance,boundary=_ref.boundary,_ref$placement=_ref.placement,placement=void 0===_ref$placement?"top":_ref$placement,modifiers=_ref.modifiers,strategy=_ref.strategy,onFirstUpdate=_ref.onFirstUpdate,_ref$hideDelay=_ref.hideDelay,hideDelay=void 0===_ref$hideDelay?300:_ref$hideDelay,showDelay=_ref.showDelay,onRequestOpen=_ref.onRequestOpen,onRequestClose=_ref.onRequestClose,title=_ref.title,hideTitle=_ref.hideTitle,hideCloseButton=_ref.hideCloseButton,actions=_ref.actions,_ref$baseName=_ref.baseName,baseName=void 0===_ref$baseName?"nds-popover":_ref$baseName,_ref$headerClass=_ref.headerClass,headerClass=void 0===_ref$headerClass?baseName+"__header":_ref$headerClass,_ref$titleClass=_ref.titleClass,titleClass=void 0===_ref$titleClass?baseName+"__title":_ref$titleClass,_ref$closeButtonClass=_ref.closeButtonClass,closeButtonClass=void 0===_ref$closeButtonClass?baseName+"__close":_ref$closeButtonClass,_ref$bodyClass=_ref.bodyClass,bodyClass=void 0===_ref$bodyClass?baseName+"__body":_ref$bodyClass,_ref$actionBarClass=_ref.actionBarClass,actionBarClass=void 0===_ref$actionBarClass?baseName+"__actions":_ref$actionBarClass,arrowClass=_ref.arrowClass,_ref$onClose=_ref.onClose,onClose=void 0===_ref$onClose?function(shouldFocusReference){shouldFocusReference&&reference instanceof HTMLElement&&reference.focus()}:_ref$onClose,_ref$onOpen=_ref.onOpen,onOpen=void 0===_ref$onOpen?function(popper){popper&&popper.focus()}:_ref$onOpen,children=_ref.children,className=_ref.className,ariaLabelledby=_ref["aria-labelledby"],ariaLabel=_ref["aria-label"],props=_objectWithoutProperties(_ref,_excluded),_useForwardedRef2=_slicedToArray((0,utilities.useForwardedRef)(ref),2),popper=_useForwardedRef2[0],setPopper=_useForwardedRef2[1],titleId=(0,utilities.useId)(),focusReferenceOnClose=react.useRef(!0),prevOpen=react.useRef(isOpen),close=react.useCallback((function(trigger){focusReferenceOnClose.current="click.external"!==trigger,onRequestClose&&onRequestClose(trigger)}),[onRequestClose]);(0,utilities.usePopperTriggers)({reference:reference,popper:popper,trigger:"click",isOpen:isOpen,hideDelay:hideDelay,showDelay:showDelay,onRequestClose:close,onRequestOpen:function open(trigger){onRequestOpen&&onRequestOpen(trigger)}});var Header=react.useMemo((function(){return!hideTitle&&title||!hideCloseButton?(0,jsx_runtime.jsxs)("header",{className:headerClass,children:[!hideTitle&&title&&(0,jsx_runtime.jsx)("div",{className:titleClass,id:titleId,children:title}),!hideCloseButton&&(0,jsx_runtime.jsx)(Button.z,{icon:"close",iconOnly:!0,className:closeButtonClass,onClick:function onClick(){return close("click.internal")},tooltipProps:{placement:"left"},children:"Close"})]}):null}),[close,closeButtonClass,headerClass,hideCloseButton,hideTitle,title,titleClass,titleId]),ActionBar=react.useMemo((function(){return actions?(0,jsx_runtime.jsx)("footer",{className:actionBarClass,children:actions}):null}),[actionBarClass,actions]);react.useEffect((function(){!prevOpen.current&&isOpen&&popper&&(onOpen(popper),prevOpen.current=!0),prevOpen.current&&!isOpen&&(onClose(focusReferenceOnClose.current),prevOpen.current=!1)}),[isOpen,onClose,onOpen,popper]);var accessibleName=react.useMemo((function(){return ariaLabelledby?{"aria-labelledby":ariaLabelledby}:ariaLabel?{"aria-label":ariaLabel}:hideTitle?{"aria-label":title}:{"aria-labelledby":titleId}}),[ariaLabel,ariaLabelledby,hideTitle,title,titleId]);return children?(0,jsx_runtime.jsxs)(Popper.r,Object.assign({className:classnames_default()(baseName,className),"data-no-title":hideTitle||!title?"":void 0,role:"dialog","aria-modal":"false"},accessibleName,{tabIndex:-1,isOpen:isOpen,transition:transition,reference:reference,arrowElement:arrowElement||arrowClass,distance:distance,boundary:boundary,placement:placement,modifiers:modifiers,strategy:strategy,onFirstUpdate:onFirstUpdate,enableArrow:!0,ref:setPopper},props,{children:[Header,(0,jsx_runtime.jsx)("section",{className:bodyClass,children:children}),ActionBar]})):null}));try{Popover.displayName="Popover",Popover.__docgenInfo={description:"A popover is a non-modal dialog that points to a reference element.",displayName:"Popover",props:{title:{defaultValue:null,description:"The name of the Modal dialog. Required for accessibility but can be\nvisually hidden with the `hideTitle` prop.",name:"title",required:!1,type:{name:"string | undefined"}},hideTitle:{defaultValue:null,description:"Indicates that the title should be visually hidden. It will still be\naccessible to screen reader users.",name:"hideTitle",required:!1,type:{name:"boolean | undefined"}},hideCloseButton:{defaultValue:null,description:"Indicates that the built-in close button in the top right should not be\nrendered.",name:"hideCloseButton",required:!1,type:{name:"boolean | undefined"}},actions:{defaultValue:null,description:"A list of actions or React Fragment that will be set inside an action bar\nat the bottom of the Modal dialog.",name:"actions",required:!1,type:{name:"ReactFragment | ReactElement<ButtonProps, string | JSXElementConstructor<any>>[] | undefined"}},baseName:{defaultValue:{value:"nds-popover"},description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},headerClass:{defaultValue:{value:"`${baseName}__header`"},description:"A className for the popover's header. Default will be `${baseName}__header`.",name:"headerClass",required:!1,type:{name:"string | undefined"}},titleClass:{defaultValue:{value:"`${baseName}__title`"},description:"A className for the popover's title, which goes inside the header.\nDefault will be `${baseName}__title`.",name:"titleClass",required:!1,type:{name:"string | undefined"}},closeButtonClass:{defaultValue:{value:"`${baseName}__close`"},description:"A className for the popover's close button, which goes inside the header.\nDefault will be `${baseName}__close`.",name:"closeButtonClass",required:!1,type:{name:"string | undefined"}},bodyClass:{defaultValue:{value:"`${baseName}__body`"},description:"A className for the body of the popover, where the `children` go.\nDefault will be `${baseName}__content`.",name:"bodyClass",required:!1,type:{name:"string | undefined"}},actionBarClass:{defaultValue:{value:"`${baseName}__actions`"},description:"A className for the popover's action bar footer. Default will be `${baseName}__actionbar`.",name:"actionBarClass",required:!1,type:{name:"string | undefined"}},arrowClass:{defaultValue:null,description:"A className for the popover's arrow. Default will be `${baseName}__arrow`.\n@deprecated - Use `arrowElement`.",name:"arrowClass",required:!1,type:{name:"string | undefined"}},onOpen:{defaultValue:{value:"(popper) => {\n\t\tif (popper) popper.focus();\n\t}"},description:"Callback function that is called after the popover opens. The default\nfunction will focus the popover. Use this callback to focus something\nelse inside the popover.",name:"onOpen",required:!1,type:{name:"((popoverElement: HTMLElement) => void) | undefined"}},onClose:{defaultValue:{value:"(shouldFocusReference) => {\n\t\tif (shouldFocusReference && reference instanceof HTMLElement) {\n\t\t\treference.focus();\n\t\t}\n\t}"},description:"Callback function that is called after the popover closes. The default\nfunction will focus the reference element that opened the popover.",name:"onClose",required:!1,type:{name:"((shouldFocusReference: boolean) => void) | undefined"}},isOpen:{defaultValue:null,description:"Used to control whether the popper is open or closed.",name:"isOpen",required:!1,type:{name:"boolean | undefined"}},transition:{defaultValue:{value:"fade"},description:"The animation transition class applied to the popper as it enters or exits.\nA single name can be provided and it will be suffixed for each stage.\n\nFor example, `transition=\"fade\"` applies:\n\n- `fade-enter`\n- `fade-enter-active`\n- `fade-exit`\n- `fade-exit-active`\n- `fade-appear`\n- `fade-appear-active`\n\nEach individual stage can also be specified independently:\n\n```js\ntransition={{\n\tappear: 'my-appear',\n\tappearActive: 'my-appear-active',\n\tappearDone: 'my-appear-done',\n\tenter: 'my-enter',\n\tenterActive: 'my-enter-active',\n\tenterDone: 'my-enter-done',\n\texit: 'my-exit',\n\texitActive: 'my-exit-active',\n\texitDone: 'my-exit-done'\n}}\n```\n\nReference: [react-transition-group's CSSTransition](http://reactcommunity.org/react-transition-group/css-transition).",name:"transition",required:!1,type:{name:"string | CSSTransitionClassNames | undefined"}},reference:{defaultValue:null,description:"The reference element that the popper will be attached to.\n\n[Popper.js - `createPopper`](https://popper.js.org/docs/v2/constructors/#createpopper)",name:"reference",required:!1,type:{name:"Element | VirtualElement | null | undefined"}},arrowElement:{defaultValue:null,description:"The element that should be used for the arrow.\n\nSee the [`arrow` modifier's `element` option](https://popper.js.org/docs/v2/modifiers/arrow/#element)\nfor more details.",name:"arrowElement",required:!1,type:{name:"string | HTMLElement | null | undefined"}},distance:{defaultValue:null,description:"The [offset distance](https://popper.js.org/docs/v2/modifiers/offset/#distance-1)\n(in pixels) from the reference. Will only be used if `offset` is undefined.",name:"distance",required:!1,type:{name:"number | undefined"}},boundary:{defaultValue:null,description:"The element or area where the popper will be checked against for overflow.\n\nSee the [`preventOverflow` modifier's `boundary` option](https://popper.js.org/docs/v2/modifiers/prevent-overflow/#boundary)\nfor more details.",name:"boundary",required:!1,type:{name:"Boundary | undefined"}},placement:{defaultValue:{value:"top"},description:"The [Popper.js placement option](https://popper.js.org/docs/v2/constructors/#placement).",name:"placement",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"auto"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},modifiers:{defaultValue:null,description:"The [Popper.js modifiers option](https://popper.js.org/docs/v2/constructors/#modifiers).",name:"modifiers",required:!1,type:{name:"Partial<Modifier<any, any>>[] | undefined"}},strategy:{defaultValue:null,description:"The [Popper.js strategy option](https://popper.js.org/docs/v2/constructors/#strategy).",name:"strategy",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"absolute"'},{value:'"fixed"'}]}},onFirstUpdate:{defaultValue:null,description:"The [Popper.js onFirstUpdate option](https://popper.js.org/docs/v2/constructors/#onFirstUpdate).",name:"onFirstUpdate",required:!1,type:{name:"((arg0: Partial<State>) => void) | undefined"}},hideDelay:{defaultValue:{value:"300"},description:"The duration in milliseconds that should elapse before closing, beginning\nafter the pointer exits the reference's bounding box. Only has an effect\nfor the `mouseenter` or `pointerenter` triggers.",name:"hideDelay",required:!1,type:{name:"number | undefined"}},showDelay:{defaultValue:null,description:"The duration in milliseconds that should elapse before opening, beginning\nafter `isOpen` is set to `true`.",name:"showDelay",required:!1,type:{name:"number | undefined"}},onRequestOpen:{defaultValue:null,description:'A callback that occurs when the popper wants to open. The reason it is\nmaking this request is given by the first parameter.\n- `"click.reference"` - the reference element was clicked.\n- `"focus"` - the reference was focused.\nSee [focus event](https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event).\n- `"focusin"` - the reference is about to be focused.\nSee [focusin event](https://developer.mozilla.org/en-US/docs/Web/API/Element/focusin_event).\n- `"pointerenter"` - a pointer (mouse or touch) entered the bounding box of the reference.\nSee [pointerenter event](https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event).',name:"onRequestOpen",required:!1,type:{name:"((triggeredBy: PopperTriggersOpen) => void) | undefined"}},onRequestClose:{defaultValue:null,description:'A callback that occurs when the popper wants to close. The reason it is\nmaking this request is given by the first parameter.\n- `"click.reference"` - the reference element was clicked.\n- `"click.internal"` - something inside the popper was clicked.\n- `"click.external"` - something outside the popper or reference was clicked.\n- `"escape"` - the Escape key was pressed.\n- `"blur"` - the reference element lost focus.\nSee [blur event](https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event).\n- `"pointerleave"` - a pointer (mouse or touch) left the bounding box of the reference.\nSee [pointerenter event](https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event).',name:"onRequestClose",required:!1,type:{name:"((triggeredBy: PopperTriggersClose) => void) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Popover/Popover.tsx#Popover"]={docgenInfo:Popover.__docgenInfo,name:"Popover",path:"packages/react/src/components/Popover/Popover.tsx#Popover"})}catch(__react_docgen_typescript_loader_error){}}}]);