(self.webpackChunkwwnds=self.webpackChunkwwnds||[]).push([[966],{"./packages/react/src/components/Checkbox/index.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:function(){return Controlled},ControlledGroup:function(){return ControlledGroup},Default:function(){return Default},GroupOfCheckboxes:function(){return GroupOfCheckboxes},Indeterminate:function(){return Indeterminate},SingleCheckboxRequiredForm:function(){return SingleCheckboxRequiredForm},WithThumbnail:function(){return WithThumbnail},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/web.timers.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js");var react__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),___WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./packages/react/src/components/Checkbox/index.ts"),_Button__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./packages/react/src/components/Button/index.ts"),_utilities__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./packages/react/src/utilities/index.ts"),_ChoiceField__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__("./packages/react/src/components/ChoiceField/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__("./node_modules/react/jsx-runtime.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={title:"Checkbox",component:___WEBPACK_IMPORTED_MODULE_16__.X};var CheckboxTemplate=function CheckboxTemplate(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(___WEBPACK_IMPORTED_MODULE_16__.X,Object.assign({},args))};CheckboxTemplate.displayName="CheckboxTemplate";var Default=CheckboxTemplate.bind({});Default.args={children:"Checkbox",description:"Additional information about this checkbox.",disabled:!1,required:!1,requiredIndicator:!1,optionalIndicator:!1,indeterminate:!1};var Controlled=function Controlled(args){var _React$useState2=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_14__.useState(!1),2),checked=_React$useState2[0],setChecked=_React$useState2[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(___WEBPACK_IMPORTED_MODULE_16__.X,Object.assign({checked:checked,onChange:function changeHandler(e){var isChecked=e.currentTarget.checked;window.setTimeout((function(){return setChecked(isChecked)}),1e3)}},args))};Controlled.displayName="Controlled",Controlled.args={children:"Checkbox",description:"This checkbox waits a second before updating to demonstrate that its state is controlled."};var Indeterminate=CheckboxTemplate.bind({});Indeterminate.args={children:"Checkbox",description:"This checkbox starts out in the indeterminate/mixed state.",indeterminate:!0};var WithThumbnail=CheckboxTemplate.bind({});WithThumbnail.args={children:"Checkbox",description:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment,{children:["This checkbox includes a clickable thumbnail from"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)("a",{href:"https://picsum.photos",target:"_blank",rel:"noopener noreferrer",children:"https://picsum.photos"})]}),thumbnail:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)("img",{src:"https://picsum.photos/64",alt:""})};var SingleCheckboxRequiredForm=function SingleCheckboxRequiredForm(args){var _React$useState4=_slicedToArray(react__WEBPACK_IMPORTED_MODULE_14__.useState(),2),errors=_React$useState4[0],setErrors=_React$useState4[1],validate=(0,_utilities__WEBPACK_IMPORTED_MODULE_18__.useValidation)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)("form",{className:"form",onSubmit:function onSubmit(e){e.preventDefault()},onInvalid:function invalidHandler(e){setErrors(validate(e.target))},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)("div",{className:"field",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(___WEBPACK_IMPORTED_MODULE_16__.X,Object.assign({},args,{description:"I have read the terms and conditions.",errors:errors,required:!0,children:"Agree"}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_17__.z,{variant:"solid",type:"submit",children:"Submit"})]})};SingleCheckboxRequiredForm.displayName="SingleCheckboxRequiredForm";var CheckboxGroupTemplate=function CheckboxGroupTemplate(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(___WEBPACK_IMPORTED_MODULE_16__.c,Object.assign({},args,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(___WEBPACK_IMPORTED_MODULE_16__.X,{children:"Apple"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(___WEBPACK_IMPORTED_MODULE_16__.X,{children:"Banana"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(___WEBPACK_IMPORTED_MODULE_16__.X,{children:"Kiwi"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(___WEBPACK_IMPORTED_MODULE_16__.X,{children:"Orange"})]}))};CheckboxGroupTemplate.displayName="CheckboxGroupTemplate";var GroupOfCheckboxes=CheckboxGroupTemplate.bind({});GroupOfCheckboxes.args={label:"Choose your favorite fruits!",name:"fruit"};var fruits=[{value:"apple",children:"Apple"},{value:"banana",children:"Banana"},{value:"kiwi",children:"Kiwi"},{value:"orange",children:"Orange"}],ControlledGroup=function ControlledGroup(args){var _useSelect=(0,_utilities__WEBPACK_IMPORTED_MODULE_18__.useSelect)(!0),selected=_useSelect.selected,formChangeHandler=_useSelect.formChangeHandler;return react__WEBPACK_IMPORTED_MODULE_14__.useEffect((function(){return(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_15__.action)("selection change")(selected)}),[selected]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(___WEBPACK_IMPORTED_MODULE_16__.c,Object.assign({},args,{label:"Choose your favorite fruits",onChange:formChangeHandler,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_ChoiceField__WEBPACK_IMPORTED_MODULE_19__.ay,{choices:fruits,selected:selected,name:"fruit"})}))};ControlledGroup.displayName="ControlledGroup",Default.parameters=Object.assign({storySource:{source:"(args: CheckboxProps) => <Checkbox {...args} />"}},Default.parameters),Controlled.parameters=Object.assign({storySource:{source:"(args: CheckboxProps) => {\n\tconst [checked, setChecked] = React.useState(false);\n\tconst changeHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\n\t\tconst isChecked = e.currentTarget.checked;\n\t\twindow.setTimeout(() => setChecked(isChecked), 1000);\n\t};\n\treturn <Checkbox checked={checked} onChange={changeHandler} {...args} />;\n}"}},Controlled.parameters),Indeterminate.parameters=Object.assign({storySource:{source:"(args: CheckboxProps) => <Checkbox {...args} />"}},Indeterminate.parameters),WithThumbnail.parameters=Object.assign({storySource:{source:"(args: CheckboxProps) => <Checkbox {...args} />"}},WithThumbnail.parameters),SingleCheckboxRequiredForm.parameters=Object.assign({storySource:{source:'(args: CheckboxProps) => {\n\tconst [errors, setErrors] = React.useState<string[]>();\n\tconst validate = useValidation();\n\n\tconst invalidHandler = (e: React.FormEvent<HTMLFormElement>): void => {\n\t\tsetErrors(validate(e.target as HTMLInputElement));\n\t};\n\n\treturn (\n\t\t<form className="form" onSubmit={(e): void => { e.preventDefault(); }} onInvalid={invalidHandler}>\n\t\t\t<div className="field">\n\t\t\t\t<Checkbox\n\t\t\t\t\t{...args}\n\t\t\t\t\tdescription="I have read the terms and conditions."\n\t\t\t\t\terrors={errors}\n\t\t\t\t\trequired\n\t\t\t\t>\n\t\t\t\t\tAgree\n\t\t\t\t</Checkbox>\n\t\t\t</div>\n\t\t\t<Button variant="solid" type="submit">Submit</Button>\n\t\t</form>\n\t);\n}'}},SingleCheckboxRequiredForm.parameters),GroupOfCheckboxes.parameters=Object.assign({storySource:{source:"(args: CheckboxGroupProps) => (\n\t<CheckboxGroup {...args}>\n\t\t<Checkbox>Apple</Checkbox>\n\t\t<Checkbox>Banana</Checkbox>\n\t\t<Checkbox>Kiwi</Checkbox>\n\t\t<Checkbox>Orange</Checkbox>\n\t</CheckboxGroup>\n)"}},GroupOfCheckboxes.parameters),ControlledGroup.parameters=Object.assign({storySource:{source:'(args: CheckboxGroupProps) => {\n\tconst { selected, formChangeHandler } = useSelect(true);\n\n\tReact.useEffect(() => action(\'selection change\')(selected), [selected]);\n\n\treturn (\n\t\t<CheckboxGroup {...args} label="Choose your favorite fruits" onChange={formChangeHandler}>\n\t\t\t<Choices\n\t\t\t\tchoices={fruits}\n\t\t\t\tselected={selected}\n\t\t\t\tname="fruit"\n\t\t\t/>\n\t\t\t{/* Alternatively, choices could be mapped manually */}\n\t\t\t{/* {\n\t\t\t\tfruits.map(({ value, ...props }) => (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={selected.includes(value)}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tname="fruit"\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t} */}\n\t\t</CheckboxGroup>\n\t);\n}'}},ControlledGroup.parameters);var __namedExportsOrder=["Default","Controlled","Indeterminate","WithThumbnail","SingleCheckboxRequiredForm","GroupOfCheckboxes","ControlledGroup"];try{Default.displayName="Default",Default.__docgenInfo={description:"",displayName:"Default",props:{baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},inputClass:{defaultValue:null,description:"The className for the Checkbox's `<input>` element.",name:"inputClass",required:!1,type:{name:"string | undefined"}},requiredIndicator:{defaultValue:null,description:'Indicates that the indicator should be "required" when `required=true`.',name:"requiredIndicator",required:!1,type:{name:"boolean | undefined"}},optionalIndicator:{defaultValue:null,description:'Indicates that the indicator should be "optional" when `required=false`.',name:"optionalIndicator",required:!1,type:{name:"boolean | undefined"}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:null,description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:null,description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:null,description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}},validators:{defaultValue:null,description:"A list of validators. A validator contains a function that tests the value\nfor validity and a corresponding message that conveys why the test failed.",name:"validators",required:!1,type:{name:"ValidatorEntry[] | undefined"}},validateOnDOMChange:{defaultValue:null,description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean | undefined"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean | undefined"}},maxLengthRestrictsInput:{defaultValue:null,description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean | undefined"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"((e: Event) => void) | undefined"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"((errors: string[]) => void) | undefined"}},indeterminate:{defaultValue:null,description:'Mark the checkbox as indeterminate. Has no effect when `type="radio"`.\n\nReference:\n- [DOM - `indeterminate`](https://html.spec.whatwg.org/multipage/input.html#dom-input-indeterminate)\n- [MDN - `indeterminate`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes)',name:"indeterminate",required:!1,type:{name:"boolean | undefined"}},thumbnail:{defaultValue:null,description:"The thumbnail element.",name:"thumbnail",required:!1,type:{name:"ReactNode"}},controlClass:{defaultValue:null,description:"The className for the control that sighted users will see.",name:"controlClass",required:!1,type:{name:"string | undefined"}},thumbnailClass:{defaultValue:null,description:"The className for the Checkbox's thumbnail element.",name:"thumbnailClass",required:!1,type:{name:"string | undefined"}},checkedClass:{defaultValue:null,description:"A className that will be applied to the root of the component when it is\nchecked.",name:"checkedClass",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Checkbox/index.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"packages/react/src/components/Checkbox/index.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}try{Controlled.displayName="Controlled",Controlled.__docgenInfo={description:"",displayName:"Controlled",props:{baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},inputClass:{defaultValue:null,description:"The className for the Checkbox's `<input>` element.",name:"inputClass",required:!1,type:{name:"string | undefined"}},requiredIndicator:{defaultValue:null,description:'Indicates that the indicator should be "required" when `required=true`.',name:"requiredIndicator",required:!1,type:{name:"boolean | undefined"}},optionalIndicator:{defaultValue:null,description:'Indicates that the indicator should be "optional" when `required=false`.',name:"optionalIndicator",required:!1,type:{name:"boolean | undefined"}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:null,description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:null,description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:null,description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}},validators:{defaultValue:null,description:"A list of validators. A validator contains a function that tests the value\nfor validity and a corresponding message that conveys why the test failed.",name:"validators",required:!1,type:{name:"ValidatorEntry[] | undefined"}},validateOnDOMChange:{defaultValue:null,description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean | undefined"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean | undefined"}},maxLengthRestrictsInput:{defaultValue:null,description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean | undefined"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"((e: Event) => void) | undefined"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"((errors: string[]) => void) | undefined"}},indeterminate:{defaultValue:null,description:'Mark the checkbox as indeterminate. Has no effect when `type="radio"`.\n\nReference:\n- [DOM - `indeterminate`](https://html.spec.whatwg.org/multipage/input.html#dom-input-indeterminate)\n- [MDN - `indeterminate`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes)',name:"indeterminate",required:!1,type:{name:"boolean | undefined"}},thumbnail:{defaultValue:null,description:"The thumbnail element.",name:"thumbnail",required:!1,type:{name:"ReactNode"}},controlClass:{defaultValue:null,description:"The className for the control that sighted users will see.",name:"controlClass",required:!1,type:{name:"string | undefined"}},thumbnailClass:{defaultValue:null,description:"The className for the Checkbox's thumbnail element.",name:"thumbnailClass",required:!1,type:{name:"string | undefined"}},checkedClass:{defaultValue:null,description:"A className that will be applied to the root of the component when it is\nchecked.",name:"checkedClass",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Checkbox/index.stories.tsx#Controlled"]={docgenInfo:Controlled.__docgenInfo,name:"Controlled",path:"packages/react/src/components/Checkbox/index.stories.tsx#Controlled"})}catch(__react_docgen_typescript_loader_error){}try{Indeterminate.displayName="Indeterminate",Indeterminate.__docgenInfo={description:"",displayName:"Indeterminate",props:{baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},inputClass:{defaultValue:null,description:"The className for the Checkbox's `<input>` element.",name:"inputClass",required:!1,type:{name:"string | undefined"}},requiredIndicator:{defaultValue:null,description:'Indicates that the indicator should be "required" when `required=true`.',name:"requiredIndicator",required:!1,type:{name:"boolean | undefined"}},optionalIndicator:{defaultValue:null,description:'Indicates that the indicator should be "optional" when `required=false`.',name:"optionalIndicator",required:!1,type:{name:"boolean | undefined"}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:null,description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:null,description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:null,description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}},validators:{defaultValue:null,description:"A list of validators. A validator contains a function that tests the value\nfor validity and a corresponding message that conveys why the test failed.",name:"validators",required:!1,type:{name:"ValidatorEntry[] | undefined"}},validateOnDOMChange:{defaultValue:null,description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean | undefined"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean | undefined"}},maxLengthRestrictsInput:{defaultValue:null,description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean | undefined"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"((e: Event) => void) | undefined"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"((errors: string[]) => void) | undefined"}},indeterminate:{defaultValue:null,description:'Mark the checkbox as indeterminate. Has no effect when `type="radio"`.\n\nReference:\n- [DOM - `indeterminate`](https://html.spec.whatwg.org/multipage/input.html#dom-input-indeterminate)\n- [MDN - `indeterminate`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes)',name:"indeterminate",required:!1,type:{name:"boolean | undefined"}},thumbnail:{defaultValue:null,description:"The thumbnail element.",name:"thumbnail",required:!1,type:{name:"ReactNode"}},controlClass:{defaultValue:null,description:"The className for the control that sighted users will see.",name:"controlClass",required:!1,type:{name:"string | undefined"}},thumbnailClass:{defaultValue:null,description:"The className for the Checkbox's thumbnail element.",name:"thumbnailClass",required:!1,type:{name:"string | undefined"}},checkedClass:{defaultValue:null,description:"A className that will be applied to the root of the component when it is\nchecked.",name:"checkedClass",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Checkbox/index.stories.tsx#Indeterminate"]={docgenInfo:Indeterminate.__docgenInfo,name:"Indeterminate",path:"packages/react/src/components/Checkbox/index.stories.tsx#Indeterminate"})}catch(__react_docgen_typescript_loader_error){}try{WithThumbnail.displayName="WithThumbnail",WithThumbnail.__docgenInfo={description:"",displayName:"WithThumbnail",props:{baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},inputClass:{defaultValue:null,description:"The className for the Checkbox's `<input>` element.",name:"inputClass",required:!1,type:{name:"string | undefined"}},requiredIndicator:{defaultValue:null,description:'Indicates that the indicator should be "required" when `required=true`.',name:"requiredIndicator",required:!1,type:{name:"boolean | undefined"}},optionalIndicator:{defaultValue:null,description:'Indicates that the indicator should be "optional" when `required=false`.',name:"optionalIndicator",required:!1,type:{name:"boolean | undefined"}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:null,description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:null,description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:null,description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}},validators:{defaultValue:null,description:"A list of validators. A validator contains a function that tests the value\nfor validity and a corresponding message that conveys why the test failed.",name:"validators",required:!1,type:{name:"ValidatorEntry[] | undefined"}},validateOnDOMChange:{defaultValue:null,description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean | undefined"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean | undefined"}},maxLengthRestrictsInput:{defaultValue:null,description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean | undefined"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"((e: Event) => void) | undefined"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"((errors: string[]) => void) | undefined"}},indeterminate:{defaultValue:null,description:'Mark the checkbox as indeterminate. Has no effect when `type="radio"`.\n\nReference:\n- [DOM - `indeterminate`](https://html.spec.whatwg.org/multipage/input.html#dom-input-indeterminate)\n- [MDN - `indeterminate`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes)',name:"indeterminate",required:!1,type:{name:"boolean | undefined"}},thumbnail:{defaultValue:null,description:"The thumbnail element.",name:"thumbnail",required:!1,type:{name:"ReactNode"}},controlClass:{defaultValue:null,description:"The className for the control that sighted users will see.",name:"controlClass",required:!1,type:{name:"string | undefined"}},thumbnailClass:{defaultValue:null,description:"The className for the Checkbox's thumbnail element.",name:"thumbnailClass",required:!1,type:{name:"string | undefined"}},checkedClass:{defaultValue:null,description:"A className that will be applied to the root of the component when it is\nchecked.",name:"checkedClass",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Checkbox/index.stories.tsx#WithThumbnail"]={docgenInfo:WithThumbnail.__docgenInfo,name:"WithThumbnail",path:"packages/react/src/components/Checkbox/index.stories.tsx#WithThumbnail"})}catch(__react_docgen_typescript_loader_error){}try{SingleCheckboxRequiredForm.displayName="SingleCheckboxRequiredForm",SingleCheckboxRequiredForm.__docgenInfo={description:"",displayName:"SingleCheckboxRequiredForm",props:{baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},inputClass:{defaultValue:null,description:"The className for the Checkbox's `<input>` element.",name:"inputClass",required:!1,type:{name:"string | undefined"}},requiredIndicator:{defaultValue:null,description:'Indicates that the indicator should be "required" when `required=true`.',name:"requiredIndicator",required:!1,type:{name:"boolean | undefined"}},optionalIndicator:{defaultValue:null,description:'Indicates that the indicator should be "optional" when `required=false`.',name:"optionalIndicator",required:!1,type:{name:"boolean | undefined"}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:null,description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:null,description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:null,description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}},validators:{defaultValue:null,description:"A list of validators. A validator contains a function that tests the value\nfor validity and a corresponding message that conveys why the test failed.",name:"validators",required:!1,type:{name:"ValidatorEntry[] | undefined"}},validateOnDOMChange:{defaultValue:null,description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean | undefined"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean | undefined"}},maxLengthRestrictsInput:{defaultValue:null,description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean | undefined"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"((e: Event) => void) | undefined"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"((errors: string[]) => void) | undefined"}},indeterminate:{defaultValue:null,description:'Mark the checkbox as indeterminate. Has no effect when `type="radio"`.\n\nReference:\n- [DOM - `indeterminate`](https://html.spec.whatwg.org/multipage/input.html#dom-input-indeterminate)\n- [MDN - `indeterminate`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes)',name:"indeterminate",required:!1,type:{name:"boolean | undefined"}},thumbnail:{defaultValue:null,description:"The thumbnail element.",name:"thumbnail",required:!1,type:{name:"ReactNode"}},controlClass:{defaultValue:null,description:"The className for the control that sighted users will see.",name:"controlClass",required:!1,type:{name:"string | undefined"}},thumbnailClass:{defaultValue:null,description:"The className for the Checkbox's thumbnail element.",name:"thumbnailClass",required:!1,type:{name:"string | undefined"}},checkedClass:{defaultValue:null,description:"A className that will be applied to the root of the component when it is\nchecked.",name:"checkedClass",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Checkbox/index.stories.tsx#SingleCheckboxRequiredForm"]={docgenInfo:SingleCheckboxRequiredForm.__docgenInfo,name:"SingleCheckboxRequiredForm",path:"packages/react/src/components/Checkbox/index.stories.tsx#SingleCheckboxRequiredForm"})}catch(__react_docgen_typescript_loader_error){}try{GroupOfCheckboxes.displayName="GroupOfCheckboxes",GroupOfCheckboxes.__docgenInfo={description:"",displayName:"GroupOfCheckboxes",props:{label:{defaultValue:null,description:"Text that conveys how the choices are related and prompts the user to choose\none or more choice.",name:"label",required:!0,type:{name:"ReactNode"}},baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},name:{defaultValue:null,description:"The name that will be assigned to all child `<input>` elements.",name:"name",required:!1,type:{name:"string | undefined"}},required:{defaultValue:null,description:"Indicates whether a selection must be made or not.",name:"required",required:!1,type:{name:"boolean | undefined"}},requiredIndicator:{defaultValue:null,description:'Indicates that the indicator should be "required" when `required=true`.',name:"requiredIndicator",required:!1,type:{name:"boolean | undefined"}},optionalIndicator:{defaultValue:null,description:'Indicates that the indicator should be "optional" when `required=false`.',name:"optionalIndicator",required:!1,type:{name:"boolean | undefined"}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:null,description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:null,description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:null,description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}},fieldName:{defaultValue:null,description:"The name that will be assigned to the parent `<fieldset>`.",name:"fieldName",required:!1,type:{name:"string | undefined"}},choiceClass:{defaultValue:null,description:"The class name that will be used on all Choice elements.",name:"choiceClass",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Checkbox/index.stories.tsx#GroupOfCheckboxes"]={docgenInfo:GroupOfCheckboxes.__docgenInfo,name:"GroupOfCheckboxes",path:"packages/react/src/components/Checkbox/index.stories.tsx#GroupOfCheckboxes"})}catch(__react_docgen_typescript_loader_error){}try{ControlledGroup.displayName="ControlledGroup",ControlledGroup.__docgenInfo={description:"",displayName:"ControlledGroup",props:{label:{defaultValue:null,description:"Text that conveys how the choices are related and prompts the user to choose\none or more choice.",name:"label",required:!0,type:{name:"ReactNode"}},baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},name:{defaultValue:null,description:"The name that will be assigned to all child `<input>` elements.",name:"name",required:!1,type:{name:"string | undefined"}},required:{defaultValue:null,description:"Indicates whether a selection must be made or not.",name:"required",required:!1,type:{name:"boolean | undefined"}},requiredIndicator:{defaultValue:null,description:'Indicates that the indicator should be "required" when `required=true`.',name:"requiredIndicator",required:!1,type:{name:"boolean | undefined"}},optionalIndicator:{defaultValue:null,description:'Indicates that the indicator should be "optional" when `required=false`.',name:"optionalIndicator",required:!1,type:{name:"boolean | undefined"}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:null,description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:null,description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:null,description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}},fieldName:{defaultValue:null,description:"The name that will be assigned to the parent `<fieldset>`.",name:"fieldName",required:!1,type:{name:"string | undefined"}},choiceClass:{defaultValue:null,description:"The class name that will be used on all Choice elements.",name:"choiceClass",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Checkbox/index.stories.tsx#ControlledGroup"]={docgenInfo:ControlledGroup.__docgenInfo,name:"ControlledGroup",path:"packages/react/src/components/Checkbox/index.stories.tsx#ControlledGroup"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/BaseInput/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Q:function(){return BaseInput}});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),utilities=__webpack_require__("./packages/react/src/utilities/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["errors","validateOnChange","validateOnDOMChange","validators","maxLength","maxLengthRestrictsInput","onInput","onDOMChange","onValidate"];function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var defaultProps={validateOnDOMChange:!0},BaseInput=react.forwardRef((function(_ref,ref){var errorsProp=_ref.errors,validateOnChange=_ref.validateOnChange,_ref$validateOnDOMCha=_ref.validateOnDOMChange,validateOnDOMChange=void 0===_ref$validateOnDOMCha?defaultProps.validateOnDOMChange:_ref$validateOnDOMCha,validators=_ref.validators,maxLength=_ref.maxLength,_ref$maxLengthRestric=_ref.maxLengthRestrictsInput,maxLengthRestrictsInput=void 0!==_ref$maxLengthRestric&&_ref$maxLengthRestric,onInput=_ref.onInput,onDOMChange=_ref.onDOMChange,onValidate=_ref.onValidate,props=_objectWithoutProperties(_ref,_excluded),_useForwardedRef2=_slicedToArray((0,utilities.useForwardedRef)(ref),2),input=_useForwardedRef2[0],setInput=_useForwardedRef2[1],_React$useState2=_slicedToArray(react.useState(errorsProp),2),errors=_React$useState2[0],setErrors=_React$useState2[1];react.useEffect((function(){return setErrors(errorsProp)}),[errorsProp]);var validator=(0,utilities.useValidation)(validators),validate=react.useCallback((function(_ref2){var max=_ref2.max,elMaxLength=_ref2.maxLength,min=_ref2.min,minLength=_ref2.minLength,pattern=_ref2.pattern,required=_ref2.required,step=_ref2.step,type=_ref2.type,value=_ref2.value,validity=_ref2.validity,errs=validator({max:max,maxLength:maxLength||elMaxLength,min:min,minLength:minLength,pattern:pattern,required:required,step:step,type:type,value:value,validity:validity});onValidate&&onValidate(errs),errorsProp||setErrors(errs)}),[validator,onValidate,errorsProp,maxLength]),domChangeHandler=react.useCallback((function(e){onDOMChange&&onDOMChange(e),validateOnDOMChange&&validate(e.target)}),[onDOMChange,validateOnDOMChange,validate]);return react.useEffect((function(){if(input&&input.willValidate){var errString=errors&&errors.length?errors.join("\n"):"";input.setCustomValidity(errString)}}),[input,errors]),(0,utilities.useLayoutEffect)((function(){return input&&domChangeHandler&&input.addEventListener("change",domChangeHandler),function(){input&&domChangeHandler&&input.removeEventListener("change",domChangeHandler)}}),[input,domChangeHandler]),(0,jsx_runtime.jsx)("input",Object.assign({ref:setInput,onInput:function inputHandler(e){onInput&&onInput(e),validateOnChange&&validate(e.currentTarget)},maxLength:maxLengthRestrictsInput?maxLength:void 0},props))}));BaseInput.defaultProps=defaultProps;try{BaseInput.displayName="BaseInput",BaseInput.__docgenInfo={description:"A base `<input>` component. Adds a callback for the DOM's `change` event\n(`onDOMChange`), which does not exist in React.",displayName:"BaseInput",props:{errors:{defaultValue:null,description:"A list of validation errors. When the input is submitted in a form, the\nlist will be concatenated into a single string with a new line separator.",name:"errors",required:!1,type:{name:"string[] | undefined"}},type:{defaultValue:null,description:"[DOM - `type`](https://html.spec.whatwg.org/multipage/input.html#attr-input-type)",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"button"'},{value:'"time"'},{value:'"image"'},{value:'"text"'},{value:'"hidden"'},{value:'"color"'},{value:'"range"'},{value:'"checkbox"'},{value:'"radio"'},{value:'"search"'},{value:'"tel"'},{value:'"url"'},{value:'"email"'},{value:'"date"'},{value:'"datetime-local"'},{value:'"file"'},{value:'"month"'},{value:'"password"'},{value:'"reset"'},{value:'"submit"'},{value:'"week"'}]}},validators:{defaultValue:null,description:"A list of validators. A validator contains a function that tests the value\nfor validity and a corresponding message that conveys why the test failed.",name:"validators",required:!1,type:{name:"ValidatorEntry[] | undefined"}},validateOnDOMChange:{defaultValue:{value:"true"},description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean | undefined"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean | undefined"}},maxLengthRestrictsInput:{defaultValue:{value:"false"},description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean | undefined"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"((e: Event) => void) | undefined"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"((errors: string[]) => void) | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/BaseInput/BaseInput.tsx#BaseInput"]={docgenInfo:BaseInput.__docgenInfo,name:"BaseInput",path:"packages/react/src/components/BaseInput/BaseInput.tsx#BaseInput"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/Checkbox/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{X:function(){return Checkbox},c:function(){return CheckboxGroup}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),ChoiceField=__webpack_require__("./packages/react/src/components/ChoiceField/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Checkbox=react.forwardRef((function(props,ref){return(0,jsx_runtime.jsx)(ChoiceField.Lv,Object.assign({ref:ref},props,{type:"checkbox"}))})),CheckboxGroup=function CheckboxGroup(props){return(0,jsx_runtime.jsx)(ChoiceField.IG,Object.assign({},props,{multiple:!0}))};CheckboxGroup.displayName="CheckboxGroup";try{Checkbox.displayName="Checkbox",Checkbox.__docgenInfo={description:"A single checkbox and its label.",displayName:"Checkbox",props:{baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},inputClass:{defaultValue:null,description:"The className for the Checkbox's `<input>` element.",name:"inputClass",required:!1,type:{name:"string | undefined"}},requiredIndicator:{defaultValue:null,description:'Indicates that the indicator should be "required" when `required=true`.',name:"requiredIndicator",required:!1,type:{name:"boolean | undefined"}},optionalIndicator:{defaultValue:null,description:'Indicates that the indicator should be "optional" when `required=false`.',name:"optionalIndicator",required:!1,type:{name:"boolean | undefined"}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:null,description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:null,description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:null,description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}},validators:{defaultValue:null,description:"A list of validators. A validator contains a function that tests the value\nfor validity and a corresponding message that conveys why the test failed.",name:"validators",required:!1,type:{name:"ValidatorEntry[] | undefined"}},validateOnDOMChange:{defaultValue:null,description:"Indicates that validation should occur when the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\ncallback, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)",name:"validateOnDOMChange",required:!1,type:{name:"boolean | undefined"}},validateOnChange:{defaultValue:null,description:"Indicates that validation should occur when `onChange` is triggered. Alias\nof `validateOnInput`.",name:"validateOnChange",required:!1,type:{name:"boolean | undefined"}},maxLengthRestrictsInput:{defaultValue:null,description:"Indicates that a `maxLength` value should prevent input beyond the `maxLength`.",name:"maxLengthRestrictsInput",required:!1,type:{name:"boolean | undefined"}},onDOMChange:{defaultValue:null,description:"A callback that will be triggered any time the DOM's `change` event is\ntriggered. Note that this event is different from React's `onChange`\nevent, which triggers on the DOM's `input` event.\n\nReference:\n- [MDN - `change event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event)\n- [MDN - `input event`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event)",name:"onDOMChange",required:!1,type:{name:"((e: Event) => void) | undefined"}},onValidate:{defaultValue:null,description:"A callback that will be triggered any time the input is validated. See\nrelated `validators`, `validateOnChange`, and `validateOnChange`.",name:"onValidate",required:!1,type:{name:"((errors: string[]) => void) | undefined"}},indeterminate:{defaultValue:null,description:'Mark the checkbox as indeterminate. Has no effect when `type="radio"`.\n\nReference:\n- [DOM - `indeterminate`](https://html.spec.whatwg.org/multipage/input.html#dom-input-indeterminate)\n- [MDN - `indeterminate`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes)',name:"indeterminate",required:!1,type:{name:"boolean | undefined"}},thumbnail:{defaultValue:null,description:"The thumbnail element.",name:"thumbnail",required:!1,type:{name:"ReactNode"}},controlClass:{defaultValue:null,description:"The className for the control that sighted users will see.",name:"controlClass",required:!1,type:{name:"string | undefined"}},thumbnailClass:{defaultValue:null,description:"The className for the Checkbox's thumbnail element.",name:"thumbnailClass",required:!1,type:{name:"string | undefined"}},checkedClass:{defaultValue:null,description:"A className that will be applied to the root of the component when it is\nchecked.",name:"checkedClass",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Checkbox/Checkbox.tsx#Checkbox"]={docgenInfo:Checkbox.__docgenInfo,name:"Checkbox",path:"packages/react/src/components/Checkbox/Checkbox.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}try{CheckboxGroup.displayName="CheckboxGroup",CheckboxGroup.__docgenInfo={description:"A group of checkboxes and their group label.",displayName:"CheckboxGroup",props:{label:{defaultValue:null,description:"Text that conveys how the choices are related and prompts the user to choose\none or more choice.",name:"label",required:!0,type:{name:"ReactNode"}},baseName:{defaultValue:null,description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},name:{defaultValue:null,description:"The name that will be assigned to all child `<input>` elements.",name:"name",required:!1,type:{name:"string | undefined"}},required:{defaultValue:null,description:"Indicates whether a selection must be made or not.",name:"required",required:!1,type:{name:"boolean | undefined"}},requiredIndicator:{defaultValue:null,description:'Indicates that the indicator should be "required" when `required=true`.',name:"requiredIndicator",required:!1,type:{name:"boolean | undefined"}},optionalIndicator:{defaultValue:null,description:'Indicates that the indicator should be "optional" when `required=false`.',name:"optionalIndicator",required:!1,type:{name:"boolean | undefined"}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:null,description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:null,description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:null,description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}},fieldName:{defaultValue:null,description:"The name that will be assigned to the parent `<fieldset>`.",name:"fieldName",required:!1,type:{name:"string | undefined"}},choiceClass:{defaultValue:null,description:"The class name that will be used on all Choice elements.",name:"choiceClass",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Checkbox/Checkbox.tsx#CheckboxGroup"]={docgenInfo:CheckboxGroup.__docgenInfo,name:"CheckboxGroup",path:"packages/react/src/components/Checkbox/Checkbox.tsx#CheckboxGroup"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/Field/FieldAddon.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{k:function(){return FieldAddon}});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),FieldAddon=function FieldAddon(_ref){var children=_ref.children,_ref$baseName=_ref.baseName,baseName=void 0===_ref$baseName?"nds-field":_ref$baseName,_ref$className=_ref.className,className=void 0===_ref$className?baseName+"__addon":_ref$className;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span",{className:className,children:children})};FieldAddon.displayName="FieldAddon";try{FieldAddon.displayName="FieldAddon",FieldAddon.__docgenInfo={description:"",displayName:"FieldAddon",props:{baseName:{defaultValue:{value:"nds-field"},description:"",name:"baseName",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Field/FieldAddon.tsx#FieldAddon"]={docgenInfo:FieldAddon.__docgenInfo,name:"FieldAddon",path:"packages/react/src/components/Field/FieldAddon.tsx#FieldAddon"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/Field/FieldFeedback.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{S:function(){return FieldFeedback}});__webpack_require__("./node_modules/core-js/modules/es.array.map.js");var react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js"),FieldFeedback=function FieldFeedback(_ref){var errors=_ref.errors,_ref$liveErrors=_ref.liveErrors,liveErrors=void 0===_ref$liveErrors||_ref$liveErrors,_ref$baseName=_ref.baseName,baseName=void 0===_ref$baseName?"nds-field":_ref$baseName,_ref$errorsClass=_ref.errorsClass,errorsClass=void 0===_ref$errorsClass?baseName+"__errors":_ref$errorsClass,errorsId=_ref.errorsId,children=_ref.children,_ref$className=_ref.className,className=void 0===_ref$className?baseName+"__feedback":_ref$className,id=_ref.id,Errors=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((function(){return errors&&errors.length?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("ul",{className:errorsClass,id:errorsId,"aria-label":"Errors","aria-live":liveErrors?"assertive":void 0,"aria-atomic":liveErrors?"true":void 0,children:errors.map((function(err){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("li",{children:err},err)}))}):null}),[errors,errorsClass,errorsId,liveErrors]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{id:id,className:className,children:[Errors,children]})};FieldFeedback.displayName="FieldFeedback";try{FieldFeedback.displayName="FieldFeedback",FieldFeedback.__docgenInfo={description:"A container for field feedback. Use to display content based on field input.",displayName:"FieldFeedback",props:{liveErrors:{defaultValue:{value:"true"},description:"Indicates whether errors should be a live region. Default is `true`. Only\nset to `false` if you intend to communicate errors to screen reader users\nthrough some other mechanism.",name:"liveErrors",required:!1,type:{name:"boolean | undefined"}},baseName:{defaultValue:{value:"nds-field"},description:"The base class name according to BEM conventions.",name:"baseName",required:!1,type:{name:"string | undefined"}},errors:{defaultValue:null,description:"A list of error strings. If provided, this will be set as an unordered\nlist in the first child slot.",name:"errors",required:!1,type:{name:"string[] | undefined"}},errorsClass:{defaultValue:{value:"`${baseName}__errors`"},description:"A className for the error list.",name:"errorsClass",required:!1,type:{name:"string | undefined"}},errorsId:{defaultValue:null,description:"An id for the error list.",name:"errorsId",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Field/FieldFeedback.tsx#FieldFeedback"]={docgenInfo:FieldFeedback.__docgenInfo,name:"FieldFeedback",path:"packages/react/src/components/Field/FieldFeedback.tsx#FieldFeedback"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/Field/FieldInfo.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{y:function(){return FieldInfo}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_4__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js"),FieldInfo=function FieldInfo(_ref){var label=_ref.label,labelTag=_ref.labelTag,indicator=_ref.indicator,description=_ref.description,_ref$baseName=_ref.baseName,baseName=void 0===_ref$baseName?"nds-field":_ref$baseName,_ref$labelClass=_ref.labelClass,labelClass=void 0===_ref$labelClass?baseName+"__label":_ref$labelClass,_ref$indicatorClass=_ref.indicatorClass,indicatorClass=void 0===_ref$indicatorClass?baseName+"__indicator":_ref$indicatorClass,_ref$descriptionClass=_ref.descriptionClass,descriptionClass=void 0===_ref$descriptionClass?baseName+"__desc":_ref$descriptionClass,labelId=_ref.labelId,descriptionId=_ref.descriptionId,children=_ref.children,className=_ref.className,htmlFor=_ref.htmlFor,id=_ref.id,Indicator=react__WEBPACK_IMPORTED_MODULE_3__.useMemo((function(){return indicator?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[" ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("span",{className:indicatorClass,children:["(",indicator,")"]})]}):null}),[indicator,indicatorClass]),Label=react__WEBPACK_IMPORTED_MODULE_3__.useMemo((function(){var labelProps={className:labelClass,htmlFor:htmlFor,id:labelId,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[label,Indicator]})},LabelTag=htmlFor?"label":labelTag||"div";return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(LabelTag,Object.assign({},labelProps))}),[label,labelClass,htmlFor,labelId,Indicator,labelTag]),Description=react__WEBPACK_IMPORTED_MODULE_3__.useMemo((function(){return"legend"===labelTag||description?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:descriptionClass,id:descriptionId,children:description}):null}),[labelTag,description,descriptionClass,descriptionId]);return"legend"===labelTag?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[Label,Description,children]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{className:classnames__WEBPACK_IMPORTED_MODULE_4___default()(baseName+"__info",className),id:id,children:[Label,Description,children]})};FieldInfo.displayName="FieldInfo";try{FieldInfo.displayName="FieldInfo",FieldInfo.__docgenInfo={description:"Information about a related field. Will always contain a label for the field\nand can contain an optional description. Make sure to include a valid `htmlFor`\nprop when used with form controls such as an `<input>`.",displayName:"FieldInfo",props:{baseName:{defaultValue:{value:"nds-field"},description:"",name:"baseName",required:!1,type:{name:"string | undefined"}},label:{defaultValue:null,description:"The name of the field. Required.",name:"label",required:!0,type:{name:"ReactNode"}},indicator:{defaultValue:null,description:'An additional label indicator, displayed as a parenthetical inside the\nlabel container. For instance, `indicator="required"` would result in\nlabel text content of `"{label} (required)"`.',name:"indicator",required:!1,type:{name:"string | null | undefined"}},indicatorClass:{defaultValue:{value:"`${baseName}__indicator`"},description:"A className for the indicator `<span>`.",name:"indicatorClass",required:!1,type:{name:"string | undefined"}},labelTag:{defaultValue:null,description:"The HTML element name for the label. If `htmlFor` is included, this will\nautomatically be `label`. If undefined, this will be `div`.",name:"labelTag",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"div"'},{value:'"label"'},{value:'"legend"'}]}},description:{defaultValue:null,description:"An optional description. Use this in place of `placeholder` text or as\nhelp text for your field control.",name:"description",required:!1,type:{name:"ReactNode"}},labelClass:{defaultValue:{value:"`${baseName}__label`"},description:"A className for the label element, which will be a `<label>` if `htmlFor`\nis included and a `<div>` otherwise.",name:"labelClass",required:!1,type:{name:"string | undefined"}},descriptionClass:{defaultValue:{value:"`${baseName}__desc`"},description:"A className for the description `<div>`.",name:"descriptionClass",required:!1,type:{name:"string | undefined"}},labelId:{defaultValue:null,description:"An id for the label element.",name:"labelId",required:!1,type:{name:"string | undefined"}},descriptionId:{defaultValue:null,description:"An id for the description `<div>`.",name:"descriptionId",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Field/FieldInfo.tsx#FieldInfo"]={docgenInfo:FieldInfo.__docgenInfo,name:"FieldInfo",path:"packages/react/src/components/Field/FieldInfo.tsx#FieldInfo"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/Field/index.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{FieldAddon:function(){return _FieldAddon__WEBPACK_IMPORTED_MODULE_0__.k},FieldFeedback:function(){return _FieldFeedback__WEBPACK_IMPORTED_MODULE_1__.S},FieldInfo:function(){return _FieldInfo__WEBPACK_IMPORTED_MODULE_2__.y}});var _FieldAddon__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/react/src/components/Field/FieldAddon.tsx"),_FieldFeedback__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/react/src/components/Field/FieldFeedback.tsx"),_FieldInfo__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/react/src/components/Field/FieldInfo.tsx"),_types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/react/src/components/Field/types.ts");__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_3__,"Icon")&&__webpack_require__.d(__webpack_exports__,{Icon:function(){return _types__WEBPACK_IMPORTED_MODULE_3__.Icon}}),__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_3__,"Listbox")&&__webpack_require__.d(__webpack_exports__,{Listbox:function(){return _types__WEBPACK_IMPORTED_MODULE_3__.Listbox}}),__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_3__,"Option")&&__webpack_require__.d(__webpack_exports__,{Option:function(){return _types__WEBPACK_IMPORTED_MODULE_3__.Option}})},"./packages/react/src/components/Field/types.ts":function(){}}]);