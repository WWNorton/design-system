"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3096],{4729:function(e,t,o){o.r(t),o.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return k},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var n=o(5773),a=o(808),i=(o(7378),o(5318)),r=o(6169),p=o(1010),l=["components"],s={title:"Dropdown",description:"A dropdown allows the user to select an option from a list of options in an expandable overlay."},d=void 0,c={unversionedId:"components/dropdown",id:"components/dropdown",title:"Dropdown",description:"A dropdown allows the user to select an option from a list of options in an expandable overlay.",source:"@site/docs/components/dropdown.mdx",sourceDirName:"components",slug:"/components/dropdown",permalink:"/design-system/docs/components/dropdown",draft:!1,editUrl:"https://github.com/wwnorton/design-system/edit/main/website/docs/components/dropdown.mdx",tags:[],version:"current",frontMatter:{title:"Dropdown",description:"A dropdown allows the user to select an option from a list of options in an expandable overlay."},sidebar:"components",previous:{title:"Disclosure",permalink:"/design-system/docs/components/disclosure"},next:{title:"Link",permalink:"/design-system/docs/components/link"}},u={},m=[{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"React API",id:"react-api",level:2},{value:"Dropdown",id:"dropdown",level:3},{value:"Option",id:"option",level:3}],h={toc:m};function k(e){var t=e.components,o=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"A dropdown allows the user to select an option from a list of options in an expandable overlay.")),(0,i.kt)("h2",{id:"anatomy"},"Anatomy"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Label")," - a short description or prompt that lets the user know what they will be selecting."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Button")," - a button that opens the dropdown listbox and displays the currently selected option.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Default text before selection should be "Select".'),(0,i.kt)("li",{parentName:"ul"},"A marker should be displayed to the right of the button's text to convey whether the dropdown listbox is open or closed."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Listbox")," - a container for the list of options that only appears when opened by the dropdown button."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Selected option")," - the currently selected option."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Options")," - the available options. Clicking an unselected option will select that option, deselect the currently selected option, and close the listbox.")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Use a dropdown to select one option from a collapsed set of available options."),(0,i.kt)("li",{parentName:"ul"},"By default, dropdown options are mutually exclusive. The user can only select 1 option."),(0,i.kt)("li",{parentName:"ul"},"When an option is selected, the dropdown closes and the selected option updates to display that item."),(0,i.kt)("li",{parentName:"ul"},"On load, the dropdown should display default text of ",(0,i.kt)("inlineCode",{parentName:"li"},'"Select"'),". The user should be able to change it back to ",(0,i.kt)("inlineCode",{parentName:"li"},'"Select"')," if they wish."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("kbd",null,"Down Arrow"),"/",(0,i.kt)("kbd",null,"Up Arrow")," moves focus to the next/previous options, respectively."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("kbd",null,"Home")," and ",(0,i.kt)("kbd",null,"End")," moves focus to the first/last options, respectively.")),(0,i.kt)("admonition",{title:"Do",type:"tip"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Do keep dropdown options very concise.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If long options are unavoidable, then they can truncate when the dropdown is in a closed state, but they should wrap fully in the open state."))),(0,i.kt)("li",{parentName:"ul"},"Do ensure that the clickable area includes the entire selected option area and the icon."),(0,i.kt)("li",{parentName:"ul"},"Consider the most logical order to list options. Options could be listed alphabetically, chronologically, by popularity, etc."))),(0,i.kt)("admonition",{title:"Don't",type:"danger"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Do not start all of the options in a dropdown with the same word or phrase."),(0,i.kt)("li",{parentName:"ul"},"If there are more than 6 options, consider using a combo box instead."),(0,i.kt)("li",{parentName:"ul"},"If there are 2 options, consider using ",(0,i.kt)("a",{parentName:"li",href:"radio-group"},"radio group")," or ",(0,i.kt)("a",{parentName:"li",href:"switch"},"switch")," instead.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If your interface needs to contain many of these selections, use dropdowns over radio buttons."))),(0,i.kt)("li",{parentName:"ul"},"Do not use a dropdown when the user can multi-select options. Use checkboxes instead."),(0,i.kt)("li",{parentName:"ul"},"If it is not absolutely necessary for a user to choose from a predefined set of options, then consider a ",(0,i.kt)("a",{parentName:"li",href:"text-field"},"text field")," for users to type their own information."))),(0,i.kt)("h2",{id:"react-api"},"React API"),(0,i.kt)("p",null,"We expose two components for the dropdown API: the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/wwnorton/design-system/tree/main/packages/react/src/components/Dropdown"},"Dropdown"),"\nand the Option, which uses the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/wwnorton/design-system/tree/main/packages/react/src/components/BaseOption"},"BaseOption"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { Dropdown, Option } from '@wwnds/react';\n")),(0,i.kt)("h3",{id:"dropdown"},"Dropdown"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Dropdown")," component does not expose a ",(0,i.kt)("inlineCode",{parentName:"p"},"ref")," or extend a full DOM interface."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Dropdown label="Choose a sitcom" sort="ascending">\n    <Dropdown.Option>The Office</Dropdown.Option>\n    <Dropdown.Option>Community</Dropdown.Option>\n    <Dropdown.Option>Friends</Dropdown.Option>\n    <Dropdown.Option>Parks and Recreation</Dropdown.Option>\n    <Dropdown.Option>How I Met Your Mother</Dropdown.Option>\n    <Dropdown.Option>Modern Family</Dropdown.Option>\n    <Dropdown.Option disabled>The Big Bang Theory</Dropdown.Option>\n    <Dropdown.Option>Arrested Development</Dropdown.Option>\n</Dropdown>\n')),(0,i.kt)(p._A,{from:r.Dropdown,mdxType:"PropsTable"}),(0,i.kt)("h3",{id:"option"},"Option"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Option")," component extends the ",(0,i.kt)("inlineCode",{parentName:"p"},"React.LiHTMLAttributes<HTMLLIElement>")," interface, and uses the ",(0,i.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/wai-aria/#option"},"ARIA option role"),"."),(0,i.kt)("p",null,"Note that the ",(0,i.kt)("inlineCode",{parentName:"p"},"Dropdown")," also exposes the ",(0,i.kt)("inlineCode",{parentName:"p"},"Option")," as a static member (",(0,i.kt)("inlineCode",{parentName:"p"},"Dropdown.Option"),") for your convenience."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Option>Community</Option>\n")),(0,i.kt)(p._A,{from:r.Option,mdxType:"PropsTable"}))}k.isMDXComponent=!0}}]);